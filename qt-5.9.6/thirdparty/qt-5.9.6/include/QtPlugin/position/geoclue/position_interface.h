/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -N -i geocluetypes.h -p position_interface.h: org.freedesktop.Geoclue.Position.xml
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef POSITION_INTERFACE_H
#define POSITION_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "geocluetypes.h"

/*
 * Proxy class for interface org.freedesktop.Geoclue.Position
 */
class OrgFreedesktopGeocluePositionInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.Geoclue.Position"; }

public:
    OrgFreedesktopGeocluePositionInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgFreedesktopGeocluePositionInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<int, int, double, double, double, Accuracy> GetPosition()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("GetPosition"), argumentList);
    }
    inline QDBusReply<int> GetPosition(int &timestamp, double &latitude, double &longitude, double &altitude, Accuracy &accuracy)
    {
        QList<QVariant> argumentList;
        QDBusMessage reply = callWithArgumentList(QDBus::Block, QStringLiteral("GetPosition"), argumentList);
        if (reply.type() == QDBusMessage::ReplyMessage && reply.arguments().count() == 6) {
            timestamp = qdbus_cast<int>(reply.arguments().at(1));
            latitude = qdbus_cast<double>(reply.arguments().at(2));
            longitude = qdbus_cast<double>(reply.arguments().at(3));
            altitude = qdbus_cast<double>(reply.arguments().at(4));
            accuracy = qdbus_cast<Accuracy>(reply.arguments().at(5));
        }
        return reply;
    }

Q_SIGNALS: // SIGNALS
    void PositionChanged(int fields, int timestamp, double latitude, double longitude, double altitude, Accuracy accuracy);
};

#endif
