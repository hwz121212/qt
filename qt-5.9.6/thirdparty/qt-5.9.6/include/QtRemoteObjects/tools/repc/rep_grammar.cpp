// This file was generated by qlalr - DO NOT EDIT!
#include "rep_grammar_p.h"

const char *const rep_grammar::spell [] = {
    "end of file", "[semicolon];", "[class]class[ \\t]+(?<name>[A-Za-z_][A-Za-z0-9_]+)[ \\t]*", "[pod]POD[ \\t]*(?<name>[A-Za-z_][A-Za-z0-9_]+)[ \\t]*\\((?<types>[^\\)]*)\\);?[ \\t]*", "[enum][ \\t]*ENUM[ \\t]+(?<name>[A-Za-z_][A-Za-z0-9_]+)[ \\t]*", "[enum_param][ \\t]*(?<name>[A-Za-z_][A-Za-z0-9_]+)[ \\t]*(=[ \\t]*(?<value>-\\d+|0[xX][0-9A-Fa-f]+|\\d+))?[ \\t]*", "[prop][ \\t]*PROP[ \\t]*\\((?<args>[^\\)]+)\\);?[ \\t]*", "[use_enum]USE_ENUM[ \\t]*\\((?<name>[^\\)]*)\\);?[ \\t]*", "[signal][ \\t]*SIGNAL[ \\t]*\\([ \\t]*(?<name>\\S+)[ \\t]*\\((?<args>[^\\)]*)\\)[ \\t]*\\);?[ \\t]*", "[slot][ \\t]*SLOT[ \\t]*\\((?<type>[^\\(]*)\\((?<args>[^\\)]*)\\)[ \\t]*\\);?[ \\t]*",
    "[model][ \\t]*MODEL[ \\t]+(?<name>[A-Za-z_][A-Za-z0-9_]+)\\((?<args>[^\\)]+)\\)[ \\t]*;?[ \\t]*", "[start]\\{[ \\t]*", "[stop]\\};?[ \\t]*", "[comma],", "[comment](?<comment>[ \\t]*//[^\\n]*\\n)", "[preprocessor_directive](?<preprocessor_directive>#[ \\t]*[^\\n]*\\n)", "[newline](\\r)?\\n", 
#ifndef QLALR_NO_REP_GRAMMAR_DEBUG_INFO
"TopLevel", "Types", "Newlines",
    "FileComments", "Comments", "Type", "Comment", "PreprocessorDirective", "Pod", "Class", "UseEnum", "Enum", "Comma",
    "ClassStart", "Start", "ClassTypes", "Stop", "ClassType", "DecoratedProp", "DecoratedSignal", "DecoratedSlot", "DecoratedModel", "Slot",
    "Signal", "Prop", "Model", "DecoratedEnumParam", "EnumParam", "EnumStart", "EnumParams", "$accept"
#endif // QLALR_NO_REP_GRAMMAR_DEBUG_INFO

};

const short rep_grammar::lhs [] = {
    17, 17, 17, 17, 20, 18, 18, 19, 19, 21,
    21, 23, 23, 22, 22, 22, 22, 22, 22, 22,
    22, 29, 29, 24, 25, 26, 26, 26, 32, 32,
    34, 34, 34, 34, 34, 37, 37, 37, 37, 36,
    36, 36, 36, 35, 35, 35, 35, 38, 38, 38,
    38, 43, 43, 43, 43, 31, 31, 31, 31, 33,
    33, 28, 28, 45, 46, 46, 44, 41, 40, 39,
    42, 30, 30, 27, 34, 34, 34, 22, 22, 22,
    22, 47
};

const short rep_grammar::rhs [] = {
    1, 2, 2, 3, 1, 1, 2, 1, 2, 1,
    2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
    1, 1, 2, 1, 1, 4, 4, 3, 1, 2,
    1, 1, 1, 1, 1, 1, 2, 2, 3, 1,
    2, 2, 3, 1, 2, 2, 3, 1, 2, 2,
    3, 1, 2, 2, 3, 1, 2, 2, 3, 1,
    2, 5, 4, 1, 1, 3, 1, 1, 1, 1,
    1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 2
};


#ifndef QLALR_NO_REP_GRAMMAR_DEBUG_INFO
const int rep_grammar::rule_info [] = {
    17, 18, 17, 19, 18, 17, 20, 18, 17, 19, 20, 18, 20, 21, 18, 22, 18, 22, 18, 19, 16, 19, 16, 19, 21, 23,
    21, 23, 21, 23, 14, 23, 14, 19, 22, 24, 22, 24, 19, 22, 25, 22, 25, 19, 22, 26, 22, 27, 22, 27, 19,
    22, 28, 29, 13, 29, 13, 19, 24, 15, 25, 3, 26, 30, 31, 32, 33, 26, 30, 31, 21, 33, 26, 30, 31, 33, 32, 34, 32, 34, 32,
    34, 35, 34, 36, 34, 37, 34, 38, 34, 28, 37, 39, 37, 21, 39, 37, 39, 19, 37, 21, 39, 19, 36, 40,
    36, 21, 40, 36, 40, 19, 36, 21, 40, 19, 35, 41, 35, 21, 41, 35, 41, 19, 35, 21, 41, 19, 38, 42, 38, 21, 42, 38, 42, 19,
    38, 21, 42, 19, 43, 44, 43, 21, 44, 43, 44, 19, 43, 21, 44, 19, 31, 11, 31, 21, 11, 31, 11, 19, 31, 21, 11, 19, 33, 12,
    33, 12, 19, 28, 45, 31, 46, 21, 33, 28, 45, 31, 46, 33, 45, 4, 46, 43, 46, 43, 29, 46, 44, 5, 41, 6, 40, 8, 39, 9,
    42, 10, 30, 2, 19, 30, 2, 27, 7, 34, 30, 34, 25, 34, 27, 22, 40, 22, 39, 22, 41,
    22, 42, 47, 17, 0
};

const int rep_grammar::rule_index [] = {
    0, 2, 5, 8, 12, 14, 16, 19, 21, 24,
    26, 29, 31, 34, 36, 39, 41, 44, 46, 48,
    51, 53, 55, 58, 60, 62, 67, 72, 76, 78,
    81, 83, 85, 87, 89, 91, 93, 96, 99, 103,
    105, 108, 111, 115, 117, 120, 123, 127, 129, 132,
    135, 139, 141, 144, 147, 151, 153, 156, 159, 163,
    165, 168, 174, 179, 181, 183, 187, 189, 191, 193,
    195, 197, 200, 202, 204, 206, 208, 210, 212, 214,
    216, 218
};
#endif // QLALR_NO_REP_GRAMMAR_DEBUG_INFO

const short rep_grammar::action_default [] = {
    0, 18, 0, 10, 5, 21, 0, 0, 81, 0,
    16, 14, 80, 78, 79, 0, 6, 1, 19, 73,
    12, 64, 71, 8, 25, 24, 68, 69, 70, 74,
    0, 0, 56, 57, 59, 75, 29, 0, 0, 34,
    31, 32, 33, 35, 48, 76, 44, 40, 36, 28,
    77, 60, 30, 0, 49, 45, 41, 37, 51, 47,
    43, 39, 26, 27, 50, 46, 42, 38, 61, 58,
    11, 0, 0, 65, 52, 0, 67, 53, 55, 0,
    22, 66, 23, 54, 0, 63, 62, 3, 0, 2,
    4, 17, 15, 82, 7, 20, 72, 13, 9
};

const short rep_grammar::goto_default [] = {
    15, 17, 9, 7, 30, 16, 3, 11, 10, 1,
    18, 5, 79, 2, 31, 37, 49, 36, 40, 41,
    42, 39, 14, 13, 12, 8, 73, 74, 6, 75,
    0
};

const short rep_grammar::action_index [] = {
    102, -17, 4, -13, -17, -17, -5, 42, -17, 72,
    -16, -16, -17, -17, -17, 16, 42, -17, -16, -16,
    -16, -17, -17, -16, -17, -17, -17, -17, -17, -17,
    -8, 87, -16, -16, -17, -17, 57, -7, 27, -17,
    -17, -17, -17, -17, -16, -17, -16, -16, -16, -17,
    -17, -16, -17, 13, -16, -16, -16, -16, -17, -17,
    -17, -17, -17, -17, -17, -17, -17, -17, -17, -17,
    -17, 6, -1, -11, -16, -2, -17, -16, -17, 3,
    -16, -17, -17, -17, -7, -17, -17, -17, 42, -17,
    -17, -17, -17, -17, -17, -17, -17, -17, -17,

    9, -31, -31, -4, -31, -31, -13, 26, -31, 31,
    1, 2, -31, -31, -31, -31, 4, -31, 5, 6,
    7, -31, -31, 8, -31, -31, -31, -31, -31, -31,
    -31, 82, 10, 12, -31, -31, 74, -10, 40, -31,
    -31, -31, -31, -31, 15, -31, 16, 17, 18, -31,
    -31, 55, -31, 36, 28, 13, 19, 21, -31, -31,
    -31, -31, -31, -31, -31, -31, -31, -31, -31, -31,
    -31, 20, -2, -31, 14, 29, -31, 27, -31, 24,
    0, -31, -31, -31, -5, -31, -31, -31, 25, -31,
    -31, -31, -31, -31, -31, -31, -31, -31, -31
};

const short rep_grammar::action_info [] = {
    23, 20, 80, 33, 76, 51, 32, 0, 76, 20,
    51, 76, 20, 0, 0, 32, 93, 20, 20, 26,
    20, 27, 28, 22, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 26, 0, 27, 28, 22, 0, 51,
    0, 0, 0, 0, 19, 24, 21, 0, 26, 29,
    27, 28, 22, 0, 0, 0, 0, 25, 0, 19,
    24, 21, 0, 26, 29, 27, 28, 22, 0, 0,
    0, 20, 0, 0, 19, 24, 21, 0, 26, 29,
    27, 28, 22, 0, 0, 0, 20, 25, 0, 19,
    24, 21, 0, 26, 29, 27, 28, 22, 0, 51,
    0, 20, 0, 0, 19, 24, 21, 0, 26, 29,
    27, 28, 22, 0, 0, 0, 20, 25, 23,

    70, 71, 82, 91, 92, 94, 62, 95, 96, 97,
    98, 86, 69, 4, 34, 59, 83, 64, 65, 66,
    67, 60, 0, 61, 72, 77, 90, 87, 72, 78,
    58, 0, 89, 84, 88, 4, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
    0, 0, 0, 81, 0, 0, 63, 68, 57, 56,
    55, 54, 57, 56, 55, 54, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 53, 0,
    0, 0, 45, 0, 50, 43, 38, 35, 0, 52,
    45, 0, 50, 43, 0, 35, 48, 47, 46, 44,
    0, 0, 0, 0, 48, 47, 46, 44, 0, 0,
    0, 0, 0
};

const short rep_grammar::action_check [] = {
    16, 14, 13, 11, 5, 12, 11, -1, 5, 14,
    12, 5, 14, -1, -1, 11, 0, 14, 14, 6,
    14, 8, 9, 10, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, 6, -1, 8, 9, 10, -1, 12,
    -1, -1, -1, -1, 2, 3, 4, -1, 6, 7,
    8, 9, 10, -1, -1, -1, -1, 15, -1, 2,
    3, 4, -1, 6, 7, 8, 9, 10, -1, -1,
    -1, 14, -1, -1, 2, 3, 4, -1, 6, 7,
    8, 9, 10, -1, -1, -1, 14, 15, -1, 2,
    3, 4, -1, 6, 7, 8, 9, 10, -1, 12,
    -1, 14, -1, -1, 2, 3, 4, -1, 6, 7,
    8, 9, 10, -1, -1, -1, 14, 15, 16,

    4, 14, 2, 2, 2, 1, 16, 2, 2, 2,
    2, 16, 2, 4, 2, 2, 2, 2, 2, 2,
    2, 2, -1, 2, 4, 27, 1, 1, 4, 2,
    2, -1, 1, 4, 3, 4, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, 16, -1, -1, -1, -1,
    -1, -1, -1, 29, -1, -1, 16, 2, 22, 23,
    24, 25, 22, 23, 24, 25, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, 4, -1,
    -1, -1, 8, -1, 10, 11, 4, 13, -1, 15,
    8, -1, 10, 11, -1, 13, 22, 23, 24, 25,
    -1, -1, -1, -1, 22, 23, 24, 25, -1, -1,
    -1, -1, -1
};

