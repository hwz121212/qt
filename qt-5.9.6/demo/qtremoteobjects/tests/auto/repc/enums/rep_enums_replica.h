#ifndef REP_ENUMS_REPLICA_H
#define REP_ENUMS_REPLICA_H

// This is an autogenerated file.
// Do not edit this file, any changes made will be lost the next time it is generated.

#include <QtCore/qobject.h>
#include <QtCore/qdatastream.h>
#include <QtCore/qvariant.h>
#include <QtCore/qmetatype.h>

#include <QtRemoteObjects/qremoteobjectnode.h>
#include <QtRemoteObjects/qremoteobjectpendingcall.h>
#include <QtRemoteObjects/qremoteobjectreplica.h>


class TestInterfaceReplica : public QRemoteObjectReplica
{
    Q_OBJECT
    Q_CLASSINFO(QCLASSINFO_REMOTEOBJECT_TYPE, "TestInterface")
    Q_CLASSINFO(QCLASSINFO_REMOTEOBJECT_SIGNATURE, "f19325e1d3b9b52e20278c42b98bc6489c3663d5")

public:
    TestInterfaceReplica() : QRemoteObjectReplica() { initialize(); }
    static void registerMetatypes()
    {
        static bool initialized = false;
        if (initialized)
            return;
        initialized = true;
        qRegisterMetaTypeStreamOperators<Qt::DateFormat>("Qt::DateFormat");

    }

private:
    TestInterfaceReplica(QRemoteObjectNode *node, const QString &name = QString())
        : QRemoteObjectReplica(ConstructWithNode)
        { initializeNode(node, name); }

    void initialize()
    {
        TestInterfaceReplica::registerMetatypes();
        QVariantList properties;
        properties.reserve(0);
        setProperties(properties);
    }

public:
    virtual ~TestInterfaceReplica() {}


private:
    friend class QT_PREPEND_NAMESPACE(QRemoteObjectNode);
};

#if (QT_VERSION < QT_VERSION_CHECK(5, 5, 0))
#endif


QT_BEGIN_NAMESPACE
inline QDataStream &operator<<(QDataStream &out, Qt::DateFormat value)
{
    out << static_cast<qint32>(value);
    return out;
}

inline QDataStream &operator>>(QDataStream &in, Qt::DateFormat &value)
{
    qint32 intValue = 0;
    in >> intValue;
    value = static_cast<Qt::DateFormat>(intValue);
    return in;
}

QT_END_NAMESPACE


#endif // REP_ENUMS_REPLICA_H
