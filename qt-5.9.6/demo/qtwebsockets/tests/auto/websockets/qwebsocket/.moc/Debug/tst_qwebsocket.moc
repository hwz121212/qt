/****************************************************************************
** Meta object code from reading C++ file 'tst_qwebsocket.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qwebsocket.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_EchoServer_t {
    QByteArrayData data[11];
    char stringdata0[144];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_EchoServer_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_EchoServer_t qt_meta_stringdata_EchoServer = {
    {
QT_MOC_LITERAL(0, 0, 10), // "EchoServer"
QT_MOC_LITERAL(1, 11, 13), // "newConnection"
QT_MOC_LITERAL(2, 25, 0), // ""
QT_MOC_LITERAL(3, 26, 10), // "requestUrl"
QT_MOC_LITERAL(4, 37, 15), // "QNetworkRequest"
QT_MOC_LITERAL(5, 53, 7), // "request"
QT_MOC_LITERAL(6, 61, 15), // "onNewConnection"
QT_MOC_LITERAL(7, 77, 18), // "processTextMessage"
QT_MOC_LITERAL(8, 96, 7), // "message"
QT_MOC_LITERAL(9, 104, 20), // "processBinaryMessage"
QT_MOC_LITERAL(10, 125, 18) // "socketDisconnected"

    },
    "EchoServer\0newConnection\0\0requestUrl\0"
    "QNetworkRequest\0request\0onNewConnection\0"
    "processTextMessage\0message\0"
    "processBinaryMessage\0socketDisconnected"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_EchoServer[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       6,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   44,    2, 0x06 /* Public */,
       1,    1,   47,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       6,    0,   50,    2, 0x08 /* Private */,
       7,    1,   51,    2, 0x08 /* Private */,
       9,    1,   54,    2, 0x08 /* Private */,
      10,    0,   57,    2, 0x08 /* Private */,

 // signals: parameters
    QMetaType::Void, QMetaType::QUrl,    3,
    QMetaType::Void, 0x80000000 | 4,    5,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    8,
    QMetaType::Void, QMetaType::QByteArray,    8,
    QMetaType::Void,

       0        // eod
};

void EchoServer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        EchoServer *_t = static_cast<EchoServer *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->newConnection((*reinterpret_cast< QUrl(*)>(_a[1]))); break;
        case 1: _t->newConnection((*reinterpret_cast< QNetworkRequest(*)>(_a[1]))); break;
        case 2: _t->onNewConnection(); break;
        case 3: _t->processTextMessage((*reinterpret_cast< QString(*)>(_a[1]))); break;
        case 4: _t->processBinaryMessage((*reinterpret_cast< QByteArray(*)>(_a[1]))); break;
        case 5: _t->socketDisconnected(); break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 1:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 0:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QNetworkRequest >(); break;
            }
            break;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (EchoServer::*_t)(QUrl );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&EchoServer::newConnection)) {
                *result = 0;
                return;
            }
        }
        {
            typedef void (EchoServer::*_t)(QNetworkRequest );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&EchoServer::newConnection)) {
                *result = 1;
                return;
            }
        }
    }
}

const QMetaObject EchoServer::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_EchoServer.data,
      qt_meta_data_EchoServer,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *EchoServer::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *EchoServer::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_EchoServer.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int EchoServer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 6)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 6;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 6)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 6;
    }
    return _id;
}

// SIGNAL 0
void EchoServer::newConnection(QUrl _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void EchoServer::newConnection(QNetworkRequest _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}
struct qt_meta_stringdata_tst_QWebSocket_t {
    QByteArrayData data[18];
    char stringdata0[300];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QWebSocket_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QWebSocket_t qt_meta_stringdata_tst_QWebSocket = {
    {
QT_MOC_LITERAL(0, 0, 14), // "tst_QWebSocket"
QT_MOC_LITERAL(1, 15, 4), // "init"
QT_MOC_LITERAL(2, 20, 0), // ""
QT_MOC_LITERAL(3, 21, 12), // "initTestCase"
QT_MOC_LITERAL(4, 34, 15), // "cleanupTestCase"
QT_MOC_LITERAL(5, 50, 23), // "tst_initialisation_data"
QT_MOC_LITERAL(6, 74, 18), // "tst_initialisation"
QT_MOC_LITERAL(7, 93, 21), // "tst_settersAndGetters"
QT_MOC_LITERAL(8, 115, 20), // "tst_invalidOpen_data"
QT_MOC_LITERAL(9, 136, 15), // "tst_invalidOpen"
QT_MOC_LITERAL(10, 152, 17), // "tst_invalidOrigin"
QT_MOC_LITERAL(11, 170, 19), // "tst_sendTextMessage"
QT_MOC_LITERAL(12, 190, 21), // "tst_sendBinaryMessage"
QT_MOC_LITERAL(13, 212, 15), // "tst_errorString"
QT_MOC_LITERAL(14, 228, 15), // "tst_openRequest"
QT_MOC_LITERAL(15, 244, 16), // "tst_moveToThread"
QT_MOC_LITERAL(16, 261, 25), // "tst_moveToThreadNoWarning"
QT_MOC_LITERAL(17, 287, 12) // "tst_setProxy"

    },
    "tst_QWebSocket\0init\0\0initTestCase\0"
    "cleanupTestCase\0tst_initialisation_data\0"
    "tst_initialisation\0tst_settersAndGetters\0"
    "tst_invalidOpen_data\0tst_invalidOpen\0"
    "tst_invalidOrigin\0tst_sendTextMessage\0"
    "tst_sendBinaryMessage\0tst_errorString\0"
    "tst_openRequest\0tst_moveToThread\0"
    "tst_moveToThreadNoWarning\0tst_setProxy"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QWebSocket[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      16,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   94,    2, 0x08 /* Private */,
       3,    0,   95,    2, 0x08 /* Private */,
       4,    0,   96,    2, 0x08 /* Private */,
       5,    0,   97,    2, 0x08 /* Private */,
       6,    0,   98,    2, 0x08 /* Private */,
       7,    0,   99,    2, 0x08 /* Private */,
       8,    0,  100,    2, 0x08 /* Private */,
       9,    0,  101,    2, 0x08 /* Private */,
      10,    0,  102,    2, 0x08 /* Private */,
      11,    0,  103,    2, 0x08 /* Private */,
      12,    0,  104,    2, 0x08 /* Private */,
      13,    0,  105,    2, 0x08 /* Private */,
      14,    0,  106,    2, 0x08 /* Private */,
      15,    0,  107,    2, 0x08 /* Private */,
      16,    0,  108,    2, 0x08 /* Private */,
      17,    0,  109,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QWebSocket::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QWebSocket *_t = static_cast<tst_QWebSocket *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->init(); break;
        case 1: _t->initTestCase(); break;
        case 2: _t->cleanupTestCase(); break;
        case 3: _t->tst_initialisation_data(); break;
        case 4: _t->tst_initialisation(); break;
        case 5: _t->tst_settersAndGetters(); break;
        case 6: _t->tst_invalidOpen_data(); break;
        case 7: _t->tst_invalidOpen(); break;
        case 8: _t->tst_invalidOrigin(); break;
        case 9: _t->tst_sendTextMessage(); break;
        case 10: _t->tst_sendBinaryMessage(); break;
        case 11: _t->tst_errorString(); break;
        case 12: _t->tst_openRequest(); break;
        case 13: _t->tst_moveToThread(); break;
        case 14: _t->tst_moveToThreadNoWarning(); break;
        case 15: _t->tst_setProxy(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QWebSocket::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QWebSocket.data,
      qt_meta_data_tst_QWebSocket,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QWebSocket::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QWebSocket::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QWebSocket.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QWebSocket::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 16)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 16;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 16)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 16;
    }
    return _id;
}
struct qt_meta_stringdata_WebSocket_t {
    QByteArrayData data[12];
    char stringdata0[127];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_WebSocket_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_WebSocket_t qt_meta_stringdata_WebSocket = {
    {
QT_MOC_LITERAL(0, 0, 9), // "WebSocket"
QT_MOC_LITERAL(1, 10, 12), // "triggerClose"
QT_MOC_LITERAL(2, 23, 0), // ""
QT_MOC_LITERAL(3, 24, 11), // "triggerOpen"
QT_MOC_LITERAL(4, 36, 22), // "triggerSendTextMessage"
QT_MOC_LITERAL(5, 59, 4), // "done"
QT_MOC_LITERAL(6, 64, 7), // "onClose"
QT_MOC_LITERAL(7, 72, 6), // "onOpen"
QT_MOC_LITERAL(8, 79, 3), // "url"
QT_MOC_LITERAL(9, 83, 17), // "onSendTextMessage"
QT_MOC_LITERAL(10, 101, 3), // "msg"
QT_MOC_LITERAL(11, 105, 21) // "onTextMessageReceived"

    },
    "WebSocket\0triggerClose\0\0triggerOpen\0"
    "triggerSendTextMessage\0done\0onClose\0"
    "onOpen\0url\0onSendTextMessage\0msg\0"
    "onTextMessageReceived"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_WebSocket[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       8,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       4,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   54,    2, 0x06 /* Public */,
       3,    1,   55,    2, 0x06 /* Public */,
       4,    1,   58,    2, 0x06 /* Public */,
       5,    0,   61,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       6,    0,   62,    2, 0x08 /* Private */,
       7,    1,   63,    2, 0x08 /* Private */,
       9,    1,   66,    2, 0x08 /* Private */,
      11,    1,   69,    2, 0x08 /* Private */,

 // signals: parameters
    QMetaType::Void,
    QMetaType::Void, QMetaType::QUrl,    2,
    QMetaType::Void, QMetaType::QString,    2,
    QMetaType::Void,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void, QMetaType::QUrl,    8,
    QMetaType::Void, QMetaType::QString,   10,
    QMetaType::Void, QMetaType::QString,   10,

       0        // eod
};

void WebSocket::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        WebSocket *_t = static_cast<WebSocket *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->triggerClose(); break;
        case 1: _t->triggerOpen((*reinterpret_cast< const QUrl(*)>(_a[1]))); break;
        case 2: _t->triggerSendTextMessage((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 3: _t->done(); break;
        case 4: _t->onClose(); break;
        case 5: _t->onOpen((*reinterpret_cast< const QUrl(*)>(_a[1]))); break;
        case 6: _t->onSendTextMessage((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 7: _t->onTextMessageReceived((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (WebSocket::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&WebSocket::triggerClose)) {
                *result = 0;
                return;
            }
        }
        {
            typedef void (WebSocket::*_t)(const QUrl & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&WebSocket::triggerOpen)) {
                *result = 1;
                return;
            }
        }
        {
            typedef void (WebSocket::*_t)(const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&WebSocket::triggerSendTextMessage)) {
                *result = 2;
                return;
            }
        }
        {
            typedef void (WebSocket::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&WebSocket::done)) {
                *result = 3;
                return;
            }
        }
    }
}

const QMetaObject WebSocket::staticMetaObject = {
    { &QWebSocket::staticMetaObject, qt_meta_stringdata_WebSocket.data,
      qt_meta_data_WebSocket,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *WebSocket::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *WebSocket::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_WebSocket.stringdata0))
        return static_cast<void*>(this);
    return QWebSocket::qt_metacast(_clname);
}

int WebSocket::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QWebSocket::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 8)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 8;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 8)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 8;
    }
    return _id;
}

// SIGNAL 0
void WebSocket::triggerClose()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}

// SIGNAL 1
void WebSocket::triggerOpen(const QUrl & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void WebSocket::triggerSendTextMessage(const QString & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void WebSocket::done()
{
    QMetaObject::activate(this, &staticMetaObject, 3, nullptr);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
