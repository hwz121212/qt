/****************************************************************************
** Meta object code from reading C++ file 'tst_qqmlqt.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qqmlqt.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_qqmlqt_t {
    QByteArrayData data[43];
    char stringdata0[506];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_qqmlqt_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_qqmlqt_t qt_meta_stringdata_tst_qqmlqt = {
    {
QT_MOC_LITERAL(0, 0, 10), // "tst_qqmlqt"
QT_MOC_LITERAL(1, 11, 12), // "initTestCase"
QT_MOC_LITERAL(2, 24, 0), // ""
QT_MOC_LITERAL(3, 25, 5), // "enums"
QT_MOC_LITERAL(4, 31, 4), // "rgba"
QT_MOC_LITERAL(5, 36, 4), // "hsla"
QT_MOC_LITERAL(6, 41, 4), // "hsva"
QT_MOC_LITERAL(7, 46, 10), // "colorEqual"
QT_MOC_LITERAL(8, 57, 4), // "rect"
QT_MOC_LITERAL(9, 62, 5), // "point"
QT_MOC_LITERAL(10, 68, 4), // "size"
QT_MOC_LITERAL(11, 73, 8), // "vector2d"
QT_MOC_LITERAL(12, 82, 8), // "vector3d"
QT_MOC_LITERAL(13, 91, 8), // "vector4d"
QT_MOC_LITERAL(14, 100, 10), // "quaternion"
QT_MOC_LITERAL(15, 111, 9), // "matrix4x4"
QT_MOC_LITERAL(16, 121, 4), // "font"
QT_MOC_LITERAL(17, 126, 7), // "lighter"
QT_MOC_LITERAL(18, 134, 6), // "darker"
QT_MOC_LITERAL(19, 141, 4), // "tint"
QT_MOC_LITERAL(20, 146, 17), // "openUrlExternally"
QT_MOC_LITERAL(21, 164, 31), // "openUrlExternally_pragmaLibrary"
QT_MOC_LITERAL(22, 196, 3), // "md5"
QT_MOC_LITERAL(23, 200, 15), // "createComponent"
QT_MOC_LITERAL(24, 216, 29), // "createComponent_pragmaLibrary"
QT_MOC_LITERAL(25, 246, 15), // "createQmlObject"
QT_MOC_LITERAL(26, 262, 18), // "dateTimeConversion"
QT_MOC_LITERAL(27, 281, 18), // "dateTimeFormatting"
QT_MOC_LITERAL(28, 300, 23), // "dateTimeFormatting_data"
QT_MOC_LITERAL(29, 324, 26), // "dateTimeFormattingVariants"
QT_MOC_LITERAL(30, 351, 31), // "dateTimeFormattingVariants_data"
QT_MOC_LITERAL(31, 383, 10), // "isQtObject"
QT_MOC_LITERAL(32, 394, 4), // "btoa"
QT_MOC_LITERAL(33, 399, 4), // "atob"
QT_MOC_LITERAL(34, 404, 12), // "fontFamilies"
QT_MOC_LITERAL(35, 417, 4), // "quit"
QT_MOC_LITERAL(36, 422, 4), // "exit"
QT_MOC_LITERAL(37, 427, 11), // "resolvedUrl"
QT_MOC_LITERAL(38, 439, 10), // "later_data"
QT_MOC_LITERAL(39, 450, 5), // "later"
QT_MOC_LITERAL(40, 456, 16), // "qtObjectContents"
QT_MOC_LITERAL(41, 473, 18), // "timeRoundtrip_data"
QT_MOC_LITERAL(42, 492, 13) // "timeRoundtrip"

    },
    "tst_qqmlqt\0initTestCase\0\0enums\0rgba\0"
    "hsla\0hsva\0colorEqual\0rect\0point\0size\0"
    "vector2d\0vector3d\0vector4d\0quaternion\0"
    "matrix4x4\0font\0lighter\0darker\0tint\0"
    "openUrlExternally\0openUrlExternally_pragmaLibrary\0"
    "md5\0createComponent\0createComponent_pragmaLibrary\0"
    "createQmlObject\0dateTimeConversion\0"
    "dateTimeFormatting\0dateTimeFormatting_data\0"
    "dateTimeFormattingVariants\0"
    "dateTimeFormattingVariants_data\0"
    "isQtObject\0btoa\0atob\0fontFamilies\0"
    "quit\0exit\0resolvedUrl\0later_data\0later\0"
    "qtObjectContents\0timeRoundtrip_data\0"
    "timeRoundtrip"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_qqmlqt[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      41,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  219,    2, 0x08 /* Private */,
       3,    0,  220,    2, 0x08 /* Private */,
       4,    0,  221,    2, 0x08 /* Private */,
       5,    0,  222,    2, 0x08 /* Private */,
       6,    0,  223,    2, 0x08 /* Private */,
       7,    0,  224,    2, 0x08 /* Private */,
       8,    0,  225,    2, 0x08 /* Private */,
       9,    0,  226,    2, 0x08 /* Private */,
      10,    0,  227,    2, 0x08 /* Private */,
      11,    0,  228,    2, 0x08 /* Private */,
      12,    0,  229,    2, 0x08 /* Private */,
      13,    0,  230,    2, 0x08 /* Private */,
      14,    0,  231,    2, 0x08 /* Private */,
      15,    0,  232,    2, 0x08 /* Private */,
      16,    0,  233,    2, 0x08 /* Private */,
      17,    0,  234,    2, 0x08 /* Private */,
      18,    0,  235,    2, 0x08 /* Private */,
      19,    0,  236,    2, 0x08 /* Private */,
      20,    0,  237,    2, 0x08 /* Private */,
      21,    0,  238,    2, 0x08 /* Private */,
      22,    0,  239,    2, 0x08 /* Private */,
      23,    0,  240,    2, 0x08 /* Private */,
      24,    0,  241,    2, 0x08 /* Private */,
      25,    0,  242,    2, 0x08 /* Private */,
      26,    0,  243,    2, 0x08 /* Private */,
      27,    0,  244,    2, 0x08 /* Private */,
      28,    0,  245,    2, 0x08 /* Private */,
      29,    0,  246,    2, 0x08 /* Private */,
      30,    0,  247,    2, 0x08 /* Private */,
      31,    0,  248,    2, 0x08 /* Private */,
      32,    0,  249,    2, 0x08 /* Private */,
      33,    0,  250,    2, 0x08 /* Private */,
      34,    0,  251,    2, 0x08 /* Private */,
      35,    0,  252,    2, 0x08 /* Private */,
      36,    0,  253,    2, 0x08 /* Private */,
      37,    0,  254,    2, 0x08 /* Private */,
      38,    0,  255,    2, 0x08 /* Private */,
      39,    0,  256,    2, 0x08 /* Private */,
      40,    0,  257,    2, 0x08 /* Private */,
      41,    0,  258,    2, 0x08 /* Private */,
      42,    0,  259,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_qqmlqt::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_qqmlqt *_t = static_cast<tst_qqmlqt *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->enums(); break;
        case 2: _t->rgba(); break;
        case 3: _t->hsla(); break;
        case 4: _t->hsva(); break;
        case 5: _t->colorEqual(); break;
        case 6: _t->rect(); break;
        case 7: _t->point(); break;
        case 8: _t->size(); break;
        case 9: _t->vector2d(); break;
        case 10: _t->vector3d(); break;
        case 11: _t->vector4d(); break;
        case 12: _t->quaternion(); break;
        case 13: _t->matrix4x4(); break;
        case 14: _t->font(); break;
        case 15: _t->lighter(); break;
        case 16: _t->darker(); break;
        case 17: _t->tint(); break;
        case 18: _t->openUrlExternally(); break;
        case 19: _t->openUrlExternally_pragmaLibrary(); break;
        case 20: _t->md5(); break;
        case 21: _t->createComponent(); break;
        case 22: _t->createComponent_pragmaLibrary(); break;
        case 23: _t->createQmlObject(); break;
        case 24: _t->dateTimeConversion(); break;
        case 25: _t->dateTimeFormatting(); break;
        case 26: _t->dateTimeFormatting_data(); break;
        case 27: _t->dateTimeFormattingVariants(); break;
        case 28: _t->dateTimeFormattingVariants_data(); break;
        case 29: _t->isQtObject(); break;
        case 30: _t->btoa(); break;
        case 31: _t->atob(); break;
        case 32: _t->fontFamilies(); break;
        case 33: _t->quit(); break;
        case 34: _t->exit(); break;
        case 35: _t->resolvedUrl(); break;
        case 36: _t->later_data(); break;
        case 37: _t->later(); break;
        case 38: _t->qtObjectContents(); break;
        case 39: _t->timeRoundtrip_data(); break;
        case 40: _t->timeRoundtrip(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_qqmlqt::staticMetaObject = {
    { &QQmlDataTest::staticMetaObject, qt_meta_stringdata_tst_qqmlqt.data,
      qt_meta_data_tst_qqmlqt,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_qqmlqt::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_qqmlqt::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_qqmlqt.stringdata0))
        return static_cast<void*>(this);
    return QQmlDataTest::qt_metacast(_clname);
}

int tst_qqmlqt::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QQmlDataTest::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 41)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 41;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 41)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 41;
    }
    return _id;
}
struct qt_meta_stringdata_TestElement_t {
    QByteArrayData data[3];
    char stringdata0[31];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestElement_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestElement_t qt_meta_stringdata_TestElement = {
    {
QT_MOC_LITERAL(0, 0, 11), // "TestElement"
QT_MOC_LITERAL(1, 12, 17), // "dangerousFunction"
QT_MOC_LITERAL(2, 30, 0) // ""

    },
    "TestElement\0dangerousFunction\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestElement[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // methods: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x02 /* Public */,

 // methods: parameters
    QMetaType::Void,

       0        // eod
};

void TestElement::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestElement *_t = static_cast<TestElement *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->dangerousFunction(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject TestElement::staticMetaObject = {
    { &QQuickItem::staticMetaObject, qt_meta_stringdata_TestElement.data,
      qt_meta_data_TestElement,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestElement::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestElement::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestElement.stringdata0))
        return static_cast<void*>(this);
    return QQuickItem::qt_metacast(_clname);
}

int TestElement::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QQuickItem::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_TestModuleApi_t {
    QByteArrayData data[6];
    char stringdata0[60];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestModuleApi_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestModuleApi_t qt_meta_stringdata_TestModuleApi = {
    {
QT_MOC_LITERAL(0, 0, 13), // "TestModuleApi"
QT_MOC_LITERAL(1, 14, 14), // "intPropChanged"
QT_MOC_LITERAL(2, 29, 0), // ""
QT_MOC_LITERAL(3, 30, 8), // "testFunc"
QT_MOC_LITERAL(4, 39, 12), // "resetIntProp"
QT_MOC_LITERAL(5, 52, 7) // "intProp"

    },
    "TestModuleApi\0intPropChanged\0\0testFunc\0"
    "resetIntProp\0intProp"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestModuleApi[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       3,   14, // methods
       1,   32, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   29,    2, 0x06 /* Public */,

 // methods: name, argc, parameters, tag, flags
       3,    0,   30,    2, 0x02 /* Public */,
       4,    0,   31,    2, 0x02 /* Public */,

 // signals: parameters
    QMetaType::Void,

 // methods: parameters
    QMetaType::Void,
    QMetaType::Void,

 // properties: name, type, flags
       5, QMetaType::Int, 0x00495103,

 // properties: notify_signal_id
       0,

       0        // eod
};

void TestModuleApi::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestModuleApi *_t = static_cast<TestModuleApi *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->intPropChanged(); break;
        case 1: _t->testFunc(); break;
        case 2: _t->resetIntProp(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (TestModuleApi::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&TestModuleApi::intPropChanged)) {
                *result = 0;
                return;
            }
        }
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        TestModuleApi *_t = static_cast<TestModuleApi *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< int*>(_v) = _t->intProp(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
        TestModuleApi *_t = static_cast<TestModuleApi *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: _t->setIntProp(*reinterpret_cast< int*>(_v)); break;
        default: break;
        }
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
    Q_UNUSED(_a);
}

const QMetaObject TestModuleApi::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestModuleApi.data,
      qt_meta_data_TestModuleApi,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestModuleApi::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestModuleApi::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestModuleApi.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestModuleApi::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 3)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 3;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 3)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 3;
    }
#ifndef QT_NO_PROPERTIES
   else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 1;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}

// SIGNAL 0
void TestModuleApi::intPropChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}
struct qt_meta_stringdata_MyUrlHandler_t {
    QByteArrayData data[4];
    char stringdata0[27];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_MyUrlHandler_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_MyUrlHandler_t qt_meta_stringdata_MyUrlHandler = {
    {
QT_MOC_LITERAL(0, 0, 12), // "MyUrlHandler"
QT_MOC_LITERAL(1, 13, 8), // "noteCall"
QT_MOC_LITERAL(2, 22, 0), // ""
QT_MOC_LITERAL(3, 23, 3) // "url"

    },
    "MyUrlHandler\0noteCall\0\0url"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_MyUrlHandler[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    1,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void, QMetaType::QUrl,    3,

       0        // eod
};

void MyUrlHandler::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        MyUrlHandler *_t = static_cast<MyUrlHandler *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->noteCall((*reinterpret_cast< const QUrl(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObject MyUrlHandler::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_MyUrlHandler.data,
      qt_meta_data_MyUrlHandler,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *MyUrlHandler::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *MyUrlHandler::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_MyUrlHandler.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int MyUrlHandler::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_TimeProvider_t {
    QByteArrayData data[4];
    char stringdata0[31];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TimeProvider_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TimeProvider_t qt_meta_stringdata_TimeProvider = {
    {
QT_MOC_LITERAL(0, 0, 12), // "TimeProvider"
QT_MOC_LITERAL(1, 13, 11), // "timeChanged"
QT_MOC_LITERAL(2, 25, 0), // ""
QT_MOC_LITERAL(3, 26, 4) // "time"

    },
    "TimeProvider\0timeChanged\0\0time"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TimeProvider[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       1,   20, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x06 /* Public */,

 // signals: parameters
    QMetaType::Void,

 // properties: name, type, flags
       3, QMetaType::QTime, 0x00495103,

 // properties: notify_signal_id
       0,

       0        // eod
};

void TimeProvider::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TimeProvider *_t = static_cast<TimeProvider *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->timeChanged(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (TimeProvider::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&TimeProvider::timeChanged)) {
                *result = 0;
                return;
            }
        }
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        TimeProvider *_t = static_cast<TimeProvider *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< QTime*>(_v) = _t->time(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
        TimeProvider *_t = static_cast<TimeProvider *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: _t->setTime(*reinterpret_cast< QTime*>(_v)); break;
        default: break;
        }
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
    Q_UNUSED(_a);
}

const QMetaObject TimeProvider::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TimeProvider.data,
      qt_meta_data_TimeProvider,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TimeProvider::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TimeProvider::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TimeProvider.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TimeProvider::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
#ifndef QT_NO_PROPERTIES
   else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 1;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}

// SIGNAL 0
void TimeProvider::timeChanged()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
