/****************************************************************************
** Meta object code from reading C++ file 'tst_qjsengine.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qjsengine.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QJSEngine_t {
    QByteArrayData data[127];
    char stringdata0[2671];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QJSEngine_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QJSEngine_t qt_meta_stringdata_tst_QJSEngine = {
    {
QT_MOC_LITERAL(0, 0, 13), // "tst_QJSEngine"
QT_MOC_LITERAL(1, 14, 10), // "testSignal"
QT_MOC_LITERAL(2, 25, 0), // ""
QT_MOC_LITERAL(3, 26, 15), // "callQObjectSlot"
QT_MOC_LITERAL(4, 42, 19), // "constructWithParent"
QT_MOC_LITERAL(5, 62, 9), // "newObject"
QT_MOC_LITERAL(6, 72, 8), // "newArray"
QT_MOC_LITERAL(7, 81, 27), // "newArray_HooliganTask218092"
QT_MOC_LITERAL(8, 109, 27), // "newArray_HooliganTask233836"
QT_MOC_LITERAL(9, 137, 10), // "newVariant"
QT_MOC_LITERAL(10, 148, 26), // "newVariant_valueOfToString"
QT_MOC_LITERAL(11, 175, 22), // "newVariant_valueOfEnum"
QT_MOC_LITERAL(12, 198, 9), // "newRegExp"
QT_MOC_LITERAL(13, 208, 8), // "jsRegExp"
QT_MOC_LITERAL(14, 217, 7), // "newDate"
QT_MOC_LITERAL(15, 225, 11), // "jsParseDate"
QT_MOC_LITERAL(16, 237, 10), // "newQObject"
QT_MOC_LITERAL(17, 248, 20), // "newQObject_ownership"
QT_MOC_LITERAL(18, 269, 24), // "newQObject_deletedEngine"
QT_MOC_LITERAL(19, 294, 23), // "newQObjectPropertyCache"
QT_MOC_LITERAL(20, 318, 14), // "newQMetaObject"
QT_MOC_LITERAL(21, 333, 15), // "exceptionInSlot"
QT_MOC_LITERAL(22, 349, 22), // "globalObjectProperties"
QT_MOC_LITERAL(23, 372, 18), // "globalObjectEquals"
QT_MOC_LITERAL(24, 391, 32), // "globalObjectProperties_enumerate"
QT_MOC_LITERAL(25, 424, 26), // "createGlobalObjectProperty"
QT_MOC_LITERAL(26, 451, 31), // "globalObjectWithCustomPrototype"
QT_MOC_LITERAL(27, 483, 25), // "builtinFunctionNames_data"
QT_MOC_LITERAL(28, 509, 20), // "builtinFunctionNames"
QT_MOC_LITERAL(29, 530, 13), // "evaluate_data"
QT_MOC_LITERAL(30, 544, 8), // "evaluate"
QT_MOC_LITERAL(31, 553, 18), // "errorMessage_QT679"
QT_MOC_LITERAL(32, 572, 21), // "valueConversion_basic"
QT_MOC_LITERAL(33, 594, 24), // "valueConversion_QVariant"
QT_MOC_LITERAL(34, 619, 22), // "valueConversion_basic2"
QT_MOC_LITERAL(35, 642, 24), // "valueConversion_dateTime"
QT_MOC_LITERAL(36, 667, 22), // "valueConversion_regExp"
QT_MOC_LITERAL(37, 690, 27), // "castWithMultipleInheritance"
QT_MOC_LITERAL(38, 718, 14), // "collectGarbage"
QT_MOC_LITERAL(39, 733, 25), // "gcWithNestedDataStructure"
QT_MOC_LITERAL(40, 759, 10), // "stacktrace"
QT_MOC_LITERAL(41, 770, 18), // "numberParsing_data"
QT_MOC_LITERAL(42, 789, 13), // "numberParsing"
QT_MOC_LITERAL(43, 803, 27), // "automaticSemicolonInsertion"
QT_MOC_LITERAL(44, 831, 17), // "errorConstructors"
QT_MOC_LITERAL(45, 849, 31), // "argumentsProperty_globalContext"
QT_MOC_LITERAL(46, 881, 20), // "argumentsProperty_JS"
QT_MOC_LITERAL(47, 902, 13), // "jsNumberClass"
QT_MOC_LITERAL(48, 916, 23), // "jsForInStatement_simple"
QT_MOC_LITERAL(49, 940, 36), // "jsForInStatement_prototypePro..."
QT_MOC_LITERAL(50, 977, 37), // "jsForInStatement_mutateWhileI..."
QT_MOC_LITERAL(51, 1015, 23), // "jsForInStatement_arrays"
QT_MOC_LITERAL(52, 1039, 25), // "jsForInStatement_constant"
QT_MOC_LITERAL(53, 1065, 13), // "with_constant"
QT_MOC_LITERAL(54, 1079, 13), // "stringObjects"
QT_MOC_LITERAL(55, 1093, 28), // "jsStringPrototypeReplaceBugs"
QT_MOC_LITERAL(56, 1122, 29), // "getterSetterThisObject_global"
QT_MOC_LITERAL(57, 1152, 28), // "getterSetterThisObject_plain"
QT_MOC_LITERAL(58, 1181, 37), // "getterSetterThisObject_protot..."
QT_MOC_LITERAL(59, 1219, 18), // "jsContinueInSwitch"
QT_MOC_LITERAL(60, 1238, 33), // "jsShadowReadOnlyPrototypeProp..."
QT_MOC_LITERAL(61, 1272, 20), // "jsReservedWords_data"
QT_MOC_LITERAL(62, 1293, 15), // "jsReservedWords"
QT_MOC_LITERAL(63, 1309, 26), // "jsFutureReservedWords_data"
QT_MOC_LITERAL(64, 1336, 21), // "jsFutureReservedWords"
QT_MOC_LITERAL(65, 1358, 26), // "jsThrowInsideWithStatement"
QT_MOC_LITERAL(66, 1385, 33), // "reentrancy_globalObjectProper..."
QT_MOC_LITERAL(67, 1419, 16), // "reentrancy_Array"
QT_MOC_LITERAL(68, 1436, 25), // "reentrancy_objectCreation"
QT_MOC_LITERAL(69, 1462, 25), // "jsIncDecNonObjectProperty"
QT_MOC_LITERAL(70, 1488, 9), // "JSONparse"
QT_MOC_LITERAL(71, 1498, 9), // "arraySort"
QT_MOC_LITERAL(72, 1508, 28), // "lookupOnDisappearingProperty"
QT_MOC_LITERAL(73, 1537, 11), // "arrayConcat"
QT_MOC_LITERAL(74, 1549, 18), // "qRegExpInport_data"
QT_MOC_LITERAL(75, 1568, 13), // "qRegExpInport"
QT_MOC_LITERAL(76, 1582, 19), // "dateRoundtripJSQtJS"
QT_MOC_LITERAL(77, 1602, 19), // "dateRoundtripQtJSQt"
QT_MOC_LITERAL(78, 1622, 18), // "dateConversionJSQt"
QT_MOC_LITERAL(79, 1641, 18), // "dateConversionQtJS"
QT_MOC_LITERAL(80, 1660, 27), // "functionPrototypeExtensions"
QT_MOC_LITERAL(81, 1688, 14), // "threadedEngine"
QT_MOC_LITERAL(82, 1703, 34), // "functionDeclarationsInConditi..."
QT_MOC_LITERAL(83, 1738, 20), // "arrayPop_QTBUG_35979"
QT_MOC_LITERAL(84, 1759, 25), // "array_unshift_QTBUG_52065"
QT_MOC_LITERAL(85, 1785, 22), // "array_join_QTBUG_53672"
QT_MOC_LITERAL(86, 1808, 15), // "regexpLastMatch"
QT_MOC_LITERAL(87, 1824, 15), // "regexpLastIndex"
QT_MOC_LITERAL(88, 1840, 15), // "indexedAccesses"
QT_MOC_LITERAL(89, 1856, 16), // "prototypeChainGc"
QT_MOC_LITERAL(90, 1873, 27), // "prototypeChainGc_QTBUG38299"
QT_MOC_LITERAL(91, 1901, 17), // "dynamicProperties"
QT_MOC_LITERAL(92, 1919, 15), // "scopeOfEvaluate"
QT_MOC_LITERAL(93, 1935, 13), // "callConstants"
QT_MOC_LITERAL(94, 1949, 27), // "installTranslationFunctions"
QT_MOC_LITERAL(95, 1977, 20), // "translateScript_data"
QT_MOC_LITERAL(96, 1998, 15), // "translateScript"
QT_MOC_LITERAL(97, 2014, 27), // "translateScript_crossScript"
QT_MOC_LITERAL(98, 2042, 22), // "translateScript_trNoOp"
QT_MOC_LITERAL(99, 2065, 31), // "translateScript_callQsTrFromCpp"
QT_MOC_LITERAL(100, 2097, 29), // "translateWithInvalidArgs_data"
QT_MOC_LITERAL(101, 2127, 24), // "translateWithInvalidArgs"
QT_MOC_LITERAL(102, 2152, 23), // "translationContext_data"
QT_MOC_LITERAL(103, 2176, 18), // "translationContext"
QT_MOC_LITERAL(104, 2195, 22), // "translateScriptIdBased"
QT_MOC_LITERAL(105, 2218, 27), // "translateScriptUnicode_data"
QT_MOC_LITERAL(106, 2246, 22), // "translateScriptUnicode"
QT_MOC_LITERAL(107, 2269, 34), // "translateScriptUnicodeIdBased..."
QT_MOC_LITERAL(108, 2304, 29), // "translateScriptUnicodeIdBased"
QT_MOC_LITERAL(109, 2334, 28), // "translateFromBuiltinCallback"
QT_MOC_LITERAL(110, 2363, 23), // "installConsoleFunctions"
QT_MOC_LITERAL(111, 2387, 7), // "logging"
QT_MOC_LITERAL(112, 2395, 7), // "tracing"
QT_MOC_LITERAL(113, 2403, 7), // "asserts"
QT_MOC_LITERAL(114, 2411, 10), // "exceptions"
QT_MOC_LITERAL(115, 2422, 33), // "installGarbageCollectionFunct..."
QT_MOC_LITERAL(116, 2456, 20), // "installAllExtensions"
QT_MOC_LITERAL(117, 2477, 14), // "privateMethods"
QT_MOC_LITERAL(118, 2492, 15), // "engineForObject"
QT_MOC_LITERAL(119, 2508, 24), // "intConversion_QTBUG43309"
QT_MOC_LITERAL(120, 2533, 7), // "toFixed"
QT_MOC_LITERAL(121, 2541, 23), // "argumentEvaluationOrder"
QT_MOC_LITERAL(122, 2565, 20), // "v4FunctionWithoutQML"
QT_MOC_LITERAL(123, 2586, 13), // "withNoContext"
QT_MOC_LITERAL(124, 2600, 18), // "holeInPropertyData"
QT_MOC_LITERAL(125, 2619, 31), // "basicBlockMergeAfterLoopPeeling"
QT_MOC_LITERAL(126, 2651, 19) // "malformedExpression"

    },
    "tst_QJSEngine\0testSignal\0\0callQObjectSlot\0"
    "constructWithParent\0newObject\0newArray\0"
    "newArray_HooliganTask218092\0"
    "newArray_HooliganTask233836\0newVariant\0"
    "newVariant_valueOfToString\0"
    "newVariant_valueOfEnum\0newRegExp\0"
    "jsRegExp\0newDate\0jsParseDate\0newQObject\0"
    "newQObject_ownership\0newQObject_deletedEngine\0"
    "newQObjectPropertyCache\0newQMetaObject\0"
    "exceptionInSlot\0globalObjectProperties\0"
    "globalObjectEquals\0globalObjectProperties_enumerate\0"
    "createGlobalObjectProperty\0"
    "globalObjectWithCustomPrototype\0"
    "builtinFunctionNames_data\0"
    "builtinFunctionNames\0evaluate_data\0"
    "evaluate\0errorMessage_QT679\0"
    "valueConversion_basic\0valueConversion_QVariant\0"
    "valueConversion_basic2\0valueConversion_dateTime\0"
    "valueConversion_regExp\0"
    "castWithMultipleInheritance\0collectGarbage\0"
    "gcWithNestedDataStructure\0stacktrace\0"
    "numberParsing_data\0numberParsing\0"
    "automaticSemicolonInsertion\0"
    "errorConstructors\0argumentsProperty_globalContext\0"
    "argumentsProperty_JS\0jsNumberClass\0"
    "jsForInStatement_simple\0"
    "jsForInStatement_prototypeProperties\0"
    "jsForInStatement_mutateWhileIterating\0"
    "jsForInStatement_arrays\0"
    "jsForInStatement_constant\0with_constant\0"
    "stringObjects\0jsStringPrototypeReplaceBugs\0"
    "getterSetterThisObject_global\0"
    "getterSetterThisObject_plain\0"
    "getterSetterThisObject_prototypeChain\0"
    "jsContinueInSwitch\0jsShadowReadOnlyPrototypeProperty\0"
    "jsReservedWords_data\0jsReservedWords\0"
    "jsFutureReservedWords_data\0"
    "jsFutureReservedWords\0jsThrowInsideWithStatement\0"
    "reentrancy_globalObjectProperties\0"
    "reentrancy_Array\0reentrancy_objectCreation\0"
    "jsIncDecNonObjectProperty\0JSONparse\0"
    "arraySort\0lookupOnDisappearingProperty\0"
    "arrayConcat\0qRegExpInport_data\0"
    "qRegExpInport\0dateRoundtripJSQtJS\0"
    "dateRoundtripQtJSQt\0dateConversionJSQt\0"
    "dateConversionQtJS\0functionPrototypeExtensions\0"
    "threadedEngine\0functionDeclarationsInConditionals\0"
    "arrayPop_QTBUG_35979\0array_unshift_QTBUG_52065\0"
    "array_join_QTBUG_53672\0regexpLastMatch\0"
    "regexpLastIndex\0indexedAccesses\0"
    "prototypeChainGc\0prototypeChainGc_QTBUG38299\0"
    "dynamicProperties\0scopeOfEvaluate\0"
    "callConstants\0installTranslationFunctions\0"
    "translateScript_data\0translateScript\0"
    "translateScript_crossScript\0"
    "translateScript_trNoOp\0"
    "translateScript_callQsTrFromCpp\0"
    "translateWithInvalidArgs_data\0"
    "translateWithInvalidArgs\0"
    "translationContext_data\0translationContext\0"
    "translateScriptIdBased\0"
    "translateScriptUnicode_data\0"
    "translateScriptUnicode\0"
    "translateScriptUnicodeIdBased_data\0"
    "translateScriptUnicodeIdBased\0"
    "translateFromBuiltinCallback\0"
    "installConsoleFunctions\0logging\0tracing\0"
    "asserts\0exceptions\0installGarbageCollectionFunctions\0"
    "installAllExtensions\0privateMethods\0"
    "engineForObject\0intConversion_QTBUG43309\0"
    "toFixed\0argumentEvaluationOrder\0"
    "v4FunctionWithoutQML\0withNoContext\0"
    "holeInPropertyData\0basicBlockMergeAfterLoopPeeling\0"
    "malformedExpression"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QJSEngine[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
     125,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,  639,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       3,    0,  640,    2, 0x08 /* Private */,
       4,    0,  641,    2, 0x08 /* Private */,
       5,    0,  642,    2, 0x08 /* Private */,
       6,    0,  643,    2, 0x08 /* Private */,
       7,    0,  644,    2, 0x08 /* Private */,
       8,    0,  645,    2, 0x08 /* Private */,
       9,    0,  646,    2, 0x08 /* Private */,
      10,    0,  647,    2, 0x08 /* Private */,
      11,    0,  648,    2, 0x08 /* Private */,
      12,    0,  649,    2, 0x08 /* Private */,
      13,    0,  650,    2, 0x08 /* Private */,
      14,    0,  651,    2, 0x08 /* Private */,
      15,    0,  652,    2, 0x08 /* Private */,
      16,    0,  653,    2, 0x08 /* Private */,
      17,    0,  654,    2, 0x08 /* Private */,
      18,    0,  655,    2, 0x08 /* Private */,
      19,    0,  656,    2, 0x08 /* Private */,
      20,    0,  657,    2, 0x08 /* Private */,
      21,    0,  658,    2, 0x08 /* Private */,
      22,    0,  659,    2, 0x08 /* Private */,
      23,    0,  660,    2, 0x08 /* Private */,
      24,    0,  661,    2, 0x08 /* Private */,
      25,    0,  662,    2, 0x08 /* Private */,
      26,    0,  663,    2, 0x08 /* Private */,
      27,    0,  664,    2, 0x08 /* Private */,
      28,    0,  665,    2, 0x08 /* Private */,
      29,    0,  666,    2, 0x08 /* Private */,
      30,    0,  667,    2, 0x08 /* Private */,
      31,    0,  668,    2, 0x08 /* Private */,
      32,    0,  669,    2, 0x08 /* Private */,
      33,    0,  670,    2, 0x08 /* Private */,
      34,    0,  671,    2, 0x08 /* Private */,
      35,    0,  672,    2, 0x08 /* Private */,
      36,    0,  673,    2, 0x08 /* Private */,
      37,    0,  674,    2, 0x08 /* Private */,
      38,    0,  675,    2, 0x08 /* Private */,
      39,    0,  676,    2, 0x08 /* Private */,
      40,    0,  677,    2, 0x08 /* Private */,
      41,    0,  678,    2, 0x08 /* Private */,
      42,    0,  679,    2, 0x08 /* Private */,
      43,    0,  680,    2, 0x08 /* Private */,
      44,    0,  681,    2, 0x08 /* Private */,
      45,    0,  682,    2, 0x08 /* Private */,
      46,    0,  683,    2, 0x08 /* Private */,
      47,    0,  684,    2, 0x08 /* Private */,
      48,    0,  685,    2, 0x08 /* Private */,
      49,    0,  686,    2, 0x08 /* Private */,
      50,    0,  687,    2, 0x08 /* Private */,
      51,    0,  688,    2, 0x08 /* Private */,
      52,    0,  689,    2, 0x08 /* Private */,
      53,    0,  690,    2, 0x08 /* Private */,
      54,    0,  691,    2, 0x08 /* Private */,
      55,    0,  692,    2, 0x08 /* Private */,
      56,    0,  693,    2, 0x08 /* Private */,
      57,    0,  694,    2, 0x08 /* Private */,
      58,    0,  695,    2, 0x08 /* Private */,
      59,    0,  696,    2, 0x08 /* Private */,
      60,    0,  697,    2, 0x08 /* Private */,
      61,    0,  698,    2, 0x08 /* Private */,
      62,    0,  699,    2, 0x08 /* Private */,
      63,    0,  700,    2, 0x08 /* Private */,
      64,    0,  701,    2, 0x08 /* Private */,
      65,    0,  702,    2, 0x08 /* Private */,
      66,    0,  703,    2, 0x08 /* Private */,
      67,    0,  704,    2, 0x08 /* Private */,
      68,    0,  705,    2, 0x08 /* Private */,
      69,    0,  706,    2, 0x08 /* Private */,
      70,    0,  707,    2, 0x08 /* Private */,
      71,    0,  708,    2, 0x08 /* Private */,
      72,    0,  709,    2, 0x08 /* Private */,
      73,    0,  710,    2, 0x08 /* Private */,
      74,    0,  711,    2, 0x08 /* Private */,
      75,    0,  712,    2, 0x08 /* Private */,
      76,    0,  713,    2, 0x08 /* Private */,
      77,    0,  714,    2, 0x08 /* Private */,
      78,    0,  715,    2, 0x08 /* Private */,
      79,    0,  716,    2, 0x08 /* Private */,
      80,    0,  717,    2, 0x08 /* Private */,
      81,    0,  718,    2, 0x08 /* Private */,
      82,    0,  719,    2, 0x08 /* Private */,
      83,    0,  720,    2, 0x08 /* Private */,
      84,    0,  721,    2, 0x08 /* Private */,
      85,    0,  722,    2, 0x08 /* Private */,
      86,    0,  723,    2, 0x08 /* Private */,
      87,    0,  724,    2, 0x08 /* Private */,
      88,    0,  725,    2, 0x08 /* Private */,
      89,    0,  726,    2, 0x08 /* Private */,
      90,    0,  727,    2, 0x08 /* Private */,
      91,    0,  728,    2, 0x08 /* Private */,
      92,    0,  729,    2, 0x08 /* Private */,
      93,    0,  730,    2, 0x08 /* Private */,
      94,    0,  731,    2, 0x08 /* Private */,
      95,    0,  732,    2, 0x08 /* Private */,
      96,    0,  733,    2, 0x08 /* Private */,
      97,    0,  734,    2, 0x08 /* Private */,
      98,    0,  735,    2, 0x08 /* Private */,
      99,    0,  736,    2, 0x08 /* Private */,
     100,    0,  737,    2, 0x08 /* Private */,
     101,    0,  738,    2, 0x08 /* Private */,
     102,    0,  739,    2, 0x08 /* Private */,
     103,    0,  740,    2, 0x08 /* Private */,
     104,    0,  741,    2, 0x08 /* Private */,
     105,    0,  742,    2, 0x08 /* Private */,
     106,    0,  743,    2, 0x08 /* Private */,
     107,    0,  744,    2, 0x08 /* Private */,
     108,    0,  745,    2, 0x08 /* Private */,
     109,    0,  746,    2, 0x08 /* Private */,
     110,    0,  747,    2, 0x08 /* Private */,
     111,    0,  748,    2, 0x08 /* Private */,
     112,    0,  749,    2, 0x08 /* Private */,
     113,    0,  750,    2, 0x08 /* Private */,
     114,    0,  751,    2, 0x08 /* Private */,
     115,    0,  752,    2, 0x08 /* Private */,
     116,    0,  753,    2, 0x08 /* Private */,
     117,    0,  754,    2, 0x08 /* Private */,
     118,    0,  755,    2, 0x08 /* Private */,
     119,    0,  756,    2, 0x08 /* Private */,
     120,    0,  757,    2, 0x08 /* Private */,
     121,    0,  758,    2, 0x08 /* Private */,
     122,    0,  759,    2, 0x08 /* Private */,
     123,    0,  760,    2, 0x08 /* Private */,
     124,    0,  761,    2, 0x08 /* Private */,
     125,    0,  762,    2, 0x08 /* Private */,
     126,    0,  763,    2, 0x08 /* Private */,

 // signals: parameters
    QMetaType::Void,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QJSEngine::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QJSEngine *_t = static_cast<tst_QJSEngine *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->testSignal(); break;
        case 1: _t->callQObjectSlot(); break;
        case 2: _t->constructWithParent(); break;
        case 3: _t->newObject(); break;
        case 4: _t->newArray(); break;
        case 5: _t->newArray_HooliganTask218092(); break;
        case 6: _t->newArray_HooliganTask233836(); break;
        case 7: _t->newVariant(); break;
        case 8: _t->newVariant_valueOfToString(); break;
        case 9: _t->newVariant_valueOfEnum(); break;
        case 10: _t->newRegExp(); break;
        case 11: _t->jsRegExp(); break;
        case 12: _t->newDate(); break;
        case 13: _t->jsParseDate(); break;
        case 14: _t->newQObject(); break;
        case 15: _t->newQObject_ownership(); break;
        case 16: _t->newQObject_deletedEngine(); break;
        case 17: _t->newQObjectPropertyCache(); break;
        case 18: _t->newQMetaObject(); break;
        case 19: _t->exceptionInSlot(); break;
        case 20: _t->globalObjectProperties(); break;
        case 21: _t->globalObjectEquals(); break;
        case 22: _t->globalObjectProperties_enumerate(); break;
        case 23: _t->createGlobalObjectProperty(); break;
        case 24: _t->globalObjectWithCustomPrototype(); break;
        case 25: _t->builtinFunctionNames_data(); break;
        case 26: _t->builtinFunctionNames(); break;
        case 27: _t->evaluate_data(); break;
        case 28: _t->evaluate(); break;
        case 29: _t->errorMessage_QT679(); break;
        case 30: _t->valueConversion_basic(); break;
        case 31: _t->valueConversion_QVariant(); break;
        case 32: _t->valueConversion_basic2(); break;
        case 33: _t->valueConversion_dateTime(); break;
        case 34: _t->valueConversion_regExp(); break;
        case 35: _t->castWithMultipleInheritance(); break;
        case 36: _t->collectGarbage(); break;
        case 37: _t->gcWithNestedDataStructure(); break;
        case 38: _t->stacktrace(); break;
        case 39: _t->numberParsing_data(); break;
        case 40: _t->numberParsing(); break;
        case 41: _t->automaticSemicolonInsertion(); break;
        case 42: _t->errorConstructors(); break;
        case 43: _t->argumentsProperty_globalContext(); break;
        case 44: _t->argumentsProperty_JS(); break;
        case 45: _t->jsNumberClass(); break;
        case 46: _t->jsForInStatement_simple(); break;
        case 47: _t->jsForInStatement_prototypeProperties(); break;
        case 48: _t->jsForInStatement_mutateWhileIterating(); break;
        case 49: _t->jsForInStatement_arrays(); break;
        case 50: _t->jsForInStatement_constant(); break;
        case 51: _t->with_constant(); break;
        case 52: _t->stringObjects(); break;
        case 53: _t->jsStringPrototypeReplaceBugs(); break;
        case 54: _t->getterSetterThisObject_global(); break;
        case 55: _t->getterSetterThisObject_plain(); break;
        case 56: _t->getterSetterThisObject_prototypeChain(); break;
        case 57: _t->jsContinueInSwitch(); break;
        case 58: _t->jsShadowReadOnlyPrototypeProperty(); break;
        case 59: _t->jsReservedWords_data(); break;
        case 60: _t->jsReservedWords(); break;
        case 61: _t->jsFutureReservedWords_data(); break;
        case 62: _t->jsFutureReservedWords(); break;
        case 63: _t->jsThrowInsideWithStatement(); break;
        case 64: _t->reentrancy_globalObjectProperties(); break;
        case 65: _t->reentrancy_Array(); break;
        case 66: _t->reentrancy_objectCreation(); break;
        case 67: _t->jsIncDecNonObjectProperty(); break;
        case 68: _t->JSONparse(); break;
        case 69: _t->arraySort(); break;
        case 70: _t->lookupOnDisappearingProperty(); break;
        case 71: _t->arrayConcat(); break;
        case 72: _t->qRegExpInport_data(); break;
        case 73: _t->qRegExpInport(); break;
        case 74: _t->dateRoundtripJSQtJS(); break;
        case 75: _t->dateRoundtripQtJSQt(); break;
        case 76: _t->dateConversionJSQt(); break;
        case 77: _t->dateConversionQtJS(); break;
        case 78: _t->functionPrototypeExtensions(); break;
        case 79: _t->threadedEngine(); break;
        case 80: _t->functionDeclarationsInConditionals(); break;
        case 81: _t->arrayPop_QTBUG_35979(); break;
        case 82: _t->array_unshift_QTBUG_52065(); break;
        case 83: _t->array_join_QTBUG_53672(); break;
        case 84: _t->regexpLastMatch(); break;
        case 85: _t->regexpLastIndex(); break;
        case 86: _t->indexedAccesses(); break;
        case 87: _t->prototypeChainGc(); break;
        case 88: _t->prototypeChainGc_QTBUG38299(); break;
        case 89: _t->dynamicProperties(); break;
        case 90: _t->scopeOfEvaluate(); break;
        case 91: _t->callConstants(); break;
        case 92: _t->installTranslationFunctions(); break;
        case 93: _t->translateScript_data(); break;
        case 94: _t->translateScript(); break;
        case 95: _t->translateScript_crossScript(); break;
        case 96: _t->translateScript_trNoOp(); break;
        case 97: _t->translateScript_callQsTrFromCpp(); break;
        case 98: _t->translateWithInvalidArgs_data(); break;
        case 99: _t->translateWithInvalidArgs(); break;
        case 100: _t->translationContext_data(); break;
        case 101: _t->translationContext(); break;
        case 102: _t->translateScriptIdBased(); break;
        case 103: _t->translateScriptUnicode_data(); break;
        case 104: _t->translateScriptUnicode(); break;
        case 105: _t->translateScriptUnicodeIdBased_data(); break;
        case 106: _t->translateScriptUnicodeIdBased(); break;
        case 107: _t->translateFromBuiltinCallback(); break;
        case 108: _t->installConsoleFunctions(); break;
        case 109: _t->logging(); break;
        case 110: _t->tracing(); break;
        case 111: _t->asserts(); break;
        case 112: _t->exceptions(); break;
        case 113: _t->installGarbageCollectionFunctions(); break;
        case 114: _t->installAllExtensions(); break;
        case 115: _t->privateMethods(); break;
        case 116: _t->engineForObject(); break;
        case 117: _t->intConversion_QTBUG43309(); break;
        case 118: _t->toFixed(); break;
        case 119: _t->argumentEvaluationOrder(); break;
        case 120: _t->v4FunctionWithoutQML(); break;
        case 121: _t->withNoContext(); break;
        case 122: _t->holeInPropertyData(); break;
        case 123: _t->basicBlockMergeAfterLoopPeeling(); break;
        case 124: _t->malformedExpression(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (tst_QJSEngine::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&tst_QJSEngine::testSignal)) {
                *result = 0;
                return;
            }
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QJSEngine::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QJSEngine.data,
      qt_meta_data_tst_QJSEngine,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QJSEngine::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QJSEngine::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QJSEngine.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QJSEngine::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 125)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 125;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 125)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 125;
    }
    return _id;
}

// SIGNAL 0
void tst_QJSEngine::testSignal()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}
struct qt_meta_stringdata_OverloadedSlots_t {
    QByteArrayData data[19];
    char stringdata0[289];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_OverloadedSlots_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_OverloadedSlots_t qt_meta_stringdata_OverloadedSlots = {
    {
QT_MOC_LITERAL(0, 0, 15), // "OverloadedSlots"
QT_MOC_LITERAL(1, 16, 20), // "slotWithoutArgCalled"
QT_MOC_LITERAL(2, 37, 0), // ""
QT_MOC_LITERAL(3, 38, 23), // "slotWithSingleArgCalled"
QT_MOC_LITERAL(4, 62, 3), // "arg"
QT_MOC_LITERAL(5, 66, 23), // "slotWithArgumentsCalled"
QT_MOC_LITERAL(6, 90, 4), // "arg1"
QT_MOC_LITERAL(7, 95, 4), // "arg2"
QT_MOC_LITERAL(8, 100, 4), // "arg3"
QT_MOC_LITERAL(9, 105, 33), // "slotWithOverloadedArgumentsCa..."
QT_MOC_LITERAL(10, 139, 20), // "Qt::KeyboardModifier"
QT_MOC_LITERAL(11, 160, 8), // "modifier"
QT_MOC_LITERAL(12, 169, 21), // "Qt::KeyboardModifiers"
QT_MOC_LITERAL(13, 191, 13), // "moreModifiers"
QT_MOC_LITERAL(14, 205, 36), // "slotWithTwoOverloadedArgument..."
QT_MOC_LITERAL(15, 242, 10), // "slotToCall"
QT_MOC_LITERAL(16, 253, 4), // "blah"
QT_MOC_LITERAL(17, 258, 20), // "slotToCallTwoDefault"
QT_MOC_LITERAL(18, 279, 9) // "modifiers"

    },
    "OverloadedSlots\0slotWithoutArgCalled\0"
    "\0slotWithSingleArgCalled\0arg\0"
    "slotWithArgumentsCalled\0arg1\0arg2\0"
    "arg3\0slotWithOverloadedArgumentsCalled\0"
    "Qt::KeyboardModifier\0modifier\0"
    "Qt::KeyboardModifiers\0moreModifiers\0"
    "slotWithTwoOverloadedArgumentsCalled\0"
    "slotToCall\0blah\0slotToCallTwoDefault\0"
    "modifiers"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_OverloadedSlots[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      14,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       5,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   84,    2, 0x06 /* Public */,
       3,    1,   85,    2, 0x06 /* Public */,
       5,    3,   88,    2, 0x06 /* Public */,
       9,    3,   95,    2, 0x06 /* Public */,
      14,    3,  102,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
      15,    0,  109,    2, 0x0a /* Public */,
      15,    1,  110,    2, 0x0a /* Public */,
      15,    3,  113,    2, 0x0a /* Public */,
      15,    2,  120,    2, 0x2a /* Public | MethodCloned */,
      15,    3,  125,    2, 0x0a /* Public */,
      15,    2,  132,    2, 0x2a /* Public | MethodCloned */,
      17,    3,  137,    2, 0x0a /* Public */,
      17,    2,  144,    2, 0x2a /* Public | MethodCloned */,
      17,    1,  149,    2, 0x2a /* Public | MethodCloned */,

 // signals: parameters
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    4,
    QMetaType::Void, QMetaType::QString, QMetaType::QString, QMetaType::QString,    6,    7,    8,
    QMetaType::Void, QMetaType::QString, 0x80000000 | 10, 0x80000000 | 12,    4,   11,   13,
    QMetaType::Void, QMetaType::QString, 0x80000000 | 12, 0x80000000 | 10,    4,   13,   11,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    4,
    QMetaType::Void, QMetaType::QString, QMetaType::QString, QMetaType::QString,    4,    7,    8,
    QMetaType::Void, QMetaType::QString, QMetaType::QString,    4,    7,
    QMetaType::Void, QMetaType::QString, 0x80000000 | 10, 0x80000000 | 12,    4,   11,   16,
    QMetaType::Void, QMetaType::QString, 0x80000000 | 10,    4,   11,
    QMetaType::Void, QMetaType::QString, 0x80000000 | 12, 0x80000000 | 10,    4,   18,   11,
    QMetaType::Void, QMetaType::QString, 0x80000000 | 12,    4,   18,
    QMetaType::Void, QMetaType::QString,    4,

       0        // eod
};

void OverloadedSlots::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        OverloadedSlots *_t = static_cast<OverloadedSlots *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->slotWithoutArgCalled(); break;
        case 1: _t->slotWithSingleArgCalled((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 2: _t->slotWithArgumentsCalled((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3]))); break;
        case 3: _t->slotWithOverloadedArgumentsCalled((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< Qt::KeyboardModifier(*)>(_a[2])),(*reinterpret_cast< Qt::KeyboardModifiers(*)>(_a[3]))); break;
        case 4: _t->slotWithTwoOverloadedArgumentsCalled((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< Qt::KeyboardModifiers(*)>(_a[2])),(*reinterpret_cast< Qt::KeyboardModifier(*)>(_a[3]))); break;
        case 5: _t->slotToCall(); break;
        case 6: _t->slotToCall((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 7: _t->slotToCall((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< const QString(*)>(_a[3]))); break;
        case 8: _t->slotToCall((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 9: _t->slotToCall((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< Qt::KeyboardModifier(*)>(_a[2])),(*reinterpret_cast< Qt::KeyboardModifiers(*)>(_a[3]))); break;
        case 10: _t->slotToCall((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< Qt::KeyboardModifier(*)>(_a[2]))); break;
        case 11: _t->slotToCallTwoDefault((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< Qt::KeyboardModifiers(*)>(_a[2])),(*reinterpret_cast< Qt::KeyboardModifier(*)>(_a[3]))); break;
        case 12: _t->slotToCallTwoDefault((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< Qt::KeyboardModifiers(*)>(_a[2]))); break;
        case 13: _t->slotToCallTwoDefault((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 3:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< Qt::KeyboardModifier >(); break;
            case 2:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< Qt::KeyboardModifiers >(); break;
            }
            break;
        case 4:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 2:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< Qt::KeyboardModifier >(); break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< Qt::KeyboardModifiers >(); break;
            }
            break;
        case 9:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< Qt::KeyboardModifier >(); break;
            case 2:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< Qt::KeyboardModifiers >(); break;
            }
            break;
        case 10:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< Qt::KeyboardModifier >(); break;
            }
            break;
        case 11:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 2:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< Qt::KeyboardModifier >(); break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< Qt::KeyboardModifiers >(); break;
            }
            break;
        case 12:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< Qt::KeyboardModifiers >(); break;
            }
            break;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (OverloadedSlots::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OverloadedSlots::slotWithoutArgCalled)) {
                *result = 0;
                return;
            }
        }
        {
            typedef void (OverloadedSlots::*_t)(const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OverloadedSlots::slotWithSingleArgCalled)) {
                *result = 1;
                return;
            }
        }
        {
            typedef void (OverloadedSlots::*_t)(const QString & , const QString & , const QString & );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OverloadedSlots::slotWithArgumentsCalled)) {
                *result = 2;
                return;
            }
        }
        {
            typedef void (OverloadedSlots::*_t)(const QString & , Qt::KeyboardModifier , Qt::KeyboardModifiers );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OverloadedSlots::slotWithOverloadedArgumentsCalled)) {
                *result = 3;
                return;
            }
        }
        {
            typedef void (OverloadedSlots::*_t)(const QString & , Qt::KeyboardModifiers , Qt::KeyboardModifier );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&OverloadedSlots::slotWithTwoOverloadedArgumentsCalled)) {
                *result = 4;
                return;
            }
        }
    }
}

const QMetaObject OverloadedSlots::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_OverloadedSlots.data,
      qt_meta_data_OverloadedSlots,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *OverloadedSlots::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *OverloadedSlots::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_OverloadedSlots.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int OverloadedSlots::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 14)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 14;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 14)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 14;
    }
    return _id;
}

// SIGNAL 0
void OverloadedSlots::slotWithoutArgCalled()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}

// SIGNAL 1
void OverloadedSlots::slotWithSingleArgCalled(const QString & _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void OverloadedSlots::slotWithArgumentsCalled(const QString & _t1, const QString & _t2, const QString & _t3)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void OverloadedSlots::slotWithOverloadedArgumentsCalled(const QString & _t1, Qt::KeyboardModifier _t2, Qt::KeyboardModifiers _t3)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}

// SIGNAL 4
void OverloadedSlots::slotWithTwoOverloadedArgumentsCalled(const QString & _t1, Qt::KeyboardModifiers _t2, Qt::KeyboardModifier _t3)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)), const_cast<void*>(reinterpret_cast<const void*>(&_t3)) };
    QMetaObject::activate(this, &staticMetaObject, 4, _a);
}
struct qt_meta_stringdata_TestQMetaObject_t {
    QByteArrayData data[11];
    char stringdata0[55];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestQMetaObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestQMetaObject_t qt_meta_stringdata_TestQMetaObject = {
    {
QT_MOC_LITERAL(0, 0, 15), // "TestQMetaObject"
QT_MOC_LITERAL(1, 16, 0), // ""
QT_MOC_LITERAL(2, 17, 6), // "called"
QT_MOC_LITERAL(3, 24, 5), // "Enum1"
QT_MOC_LITERAL(4, 30, 4), // "Zero"
QT_MOC_LITERAL(5, 35, 3), // "One"
QT_MOC_LITERAL(6, 39, 3), // "Two"
QT_MOC_LITERAL(7, 43, 5), // "Enum2"
QT_MOC_LITERAL(8, 49, 1), // "A"
QT_MOC_LITERAL(9, 51, 1), // "B"
QT_MOC_LITERAL(10, 53, 1) // "C"

    },
    "TestQMetaObject\0\0called\0Enum1\0Zero\0"
    "One\0Two\0Enum2\0A\0B\0C"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestQMetaObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       1,   26, // properties
       2,   29, // enums/sets
       4,   49, // constructors
       0,       // flags
       0,       // signalCount

 // constructors: parameters
    0x80000000 | 1,
    0x80000000 | 1, QMetaType::Int,    1,
    0x80000000 | 1, QMetaType::QString,    1,
    0x80000000 | 1, QMetaType::QString, QMetaType::Int,    1,    1,

 // properties: name, type, flags
       2, QMetaType::Int, 0x00095001,

 // enums: name, flags, count, data
       3, 0x0,    3,   37,
       7, 0x0,    3,   43,

 // enum data: key, value
       4, uint(TestQMetaObject::Zero),
       5, uint(TestQMetaObject::One),
       6, uint(TestQMetaObject::Two),
       8, uint(TestQMetaObject::A),
       9, uint(TestQMetaObject::B),
      10, uint(TestQMetaObject::C),

 // constructors: name, argc, parameters, tag, flags
       0,    0,   14,    1, 0x0e /* Public */,
       0,    1,   15,    1, 0x0e /* Public */,
       0,    1,   18,    1, 0x0e /* Public */,
       0,    2,   21,    1, 0x0e /* Public */,

       0        // eod
};

void TestQMetaObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::CreateInstance) {
        switch (_id) {
        case 0: { TestQMetaObject *_r = new TestQMetaObject();
            if (_a[0]) *reinterpret_cast<QObject**>(_a[0]) = _r; } break;
        case 1: { TestQMetaObject *_r = new TestQMetaObject((*reinterpret_cast< int(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast<QObject**>(_a[0]) = _r; } break;
        case 2: { TestQMetaObject *_r = new TestQMetaObject((*reinterpret_cast< QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast<QObject**>(_a[0]) = _r; } break;
        case 3: { TestQMetaObject *_r = new TestQMetaObject((*reinterpret_cast< QString(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast<QObject**>(_a[0]) = _r; } break;
        default: break;
        }
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        TestQMetaObject *_t = static_cast<TestQMetaObject *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< int*>(_v) = _t->called(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
    Q_UNUSED(_o);
}

const QMetaObject TestQMetaObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestQMetaObject.data,
      qt_meta_data_TestQMetaObject,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestQMetaObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestQMetaObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestQMetaObject.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestQMetaObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    
#ifndef QT_NO_PROPERTIES
   if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 1;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}
struct qt_meta_stringdata_Klazz_t {
    QByteArrayData data[1];
    char stringdata0[6];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_Klazz_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_Klazz_t qt_meta_stringdata_Klazz = {
    {
QT_MOC_LITERAL(0, 0, 5) // "Klazz"

    },
    "Klazz"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_Klazz[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void Klazz::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject Klazz::staticMetaObject = {
    { &QWidget::staticMetaObject, qt_meta_stringdata_Klazz.data,
      qt_meta_data_Klazz,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *Klazz::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *Klazz::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_Klazz.stringdata0))
        return static_cast<void*>(this);
    if (!strcmp(_clname, "QStandardItem"))
        return static_cast< QStandardItem*>(this);
    if (!strcmp(_clname, "QGraphicsItem"))
        return static_cast< QGraphicsItem*>(this);
    if (!strcmp(_clname, "org.qt-project.Qt.QGraphicsItem"))
        return static_cast< QGraphicsItem*>(this);
    return QWidget::qt_metacast(_clname);
}

int Klazz::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QWidget::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_ThreadedTestEngine_t {
    QByteArrayData data[1];
    char stringdata0[19];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ThreadedTestEngine_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ThreadedTestEngine_t qt_meta_stringdata_ThreadedTestEngine = {
    {
QT_MOC_LITERAL(0, 0, 18) // "ThreadedTestEngine"

    },
    "ThreadedTestEngine"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ThreadedTestEngine[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void ThreadedTestEngine::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject ThreadedTestEngine::staticMetaObject = {
    { &QThread::staticMetaObject, qt_meta_stringdata_ThreadedTestEngine.data,
      qt_meta_data_ThreadedTestEngine,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *ThreadedTestEngine::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ThreadedTestEngine::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ThreadedTestEngine.stringdata0))
        return static_cast<void*>(this);
    return QThread::qt_metacast(_clname);
}

int ThreadedTestEngine::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QThread::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_EvaluateWrapper_t {
    QByteArrayData data[5];
    char stringdata0[46];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_EvaluateWrapper_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_EvaluateWrapper_t qt_meta_stringdata_EvaluateWrapper = {
    {
QT_MOC_LITERAL(0, 0, 15), // "EvaluateWrapper"
QT_MOC_LITERAL(1, 16, 11), // "cppEvaluate"
QT_MOC_LITERAL(2, 28, 8), // "QJSValue"
QT_MOC_LITERAL(3, 37, 0), // ""
QT_MOC_LITERAL(4, 38, 7) // "program"

    },
    "EvaluateWrapper\0cppEvaluate\0QJSValue\0"
    "\0program"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_EvaluateWrapper[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    1,   19,    3, 0x0a /* Public */,

 // slots: parameters
    0x80000000 | 2, QMetaType::QString,    4,

       0        // eod
};

void EvaluateWrapper::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        EvaluateWrapper *_t = static_cast<EvaluateWrapper *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: { QJSValue _r = _t->cppEvaluate((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QJSValue*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    }
}

const QMetaObject EvaluateWrapper::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_EvaluateWrapper.data,
      qt_meta_data_EvaluateWrapper,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *EvaluateWrapper::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *EvaluateWrapper::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_EvaluateWrapper.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int EvaluateWrapper::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_ObjectWithPrivateMethods_t {
    QByteArrayData data[3];
    char stringdata0[42];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ObjectWithPrivateMethods_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ObjectWithPrivateMethods_t qt_meta_stringdata_ObjectWithPrivateMethods = {
    {
QT_MOC_LITERAL(0, 0, 24), // "ObjectWithPrivateMethods"
QT_MOC_LITERAL(1, 25, 15), // "myPrivateMethod"
QT_MOC_LITERAL(2, 41, 0) // ""

    },
    "ObjectWithPrivateMethods\0myPrivateMethod\0"
    ""
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ObjectWithPrivateMethods[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void ObjectWithPrivateMethods::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        ObjectWithPrivateMethods *_t = static_cast<ObjectWithPrivateMethods *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->myPrivateMethod(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject ObjectWithPrivateMethods::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_ObjectWithPrivateMethods.data,
      qt_meta_data_ObjectWithPrivateMethods,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *ObjectWithPrivateMethods::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ObjectWithPrivateMethods::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ObjectWithPrivateMethods.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int ObjectWithPrivateMethods::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_TestObject_t {
    QByteArrayData data[4];
    char stringdata0[35];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestObject_t qt_meta_stringdata_TestObject = {
    {
QT_MOC_LITERAL(0, 0, 10), // "TestObject"
QT_MOC_LITERAL(1, 11, 6), // "callMe"
QT_MOC_LITERAL(2, 18, 0), // ""
QT_MOC_LITERAL(3, 19, 15) // "QQmlV4Function*"

    },
    "TestObject\0callMe\0\0QQmlV4Function*"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // methods: name, argc, parameters, tag, flags
       1,    1,   19,    2, 0x02 /* Public */,

 // methods: parameters
    QMetaType::Void, 0x80000000 | 3,    2,

       0        // eod
};

void TestObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestObject *_t = static_cast<TestObject *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->callMe((*reinterpret_cast< QQmlV4Function*(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObject TestObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestObject.data,
      qt_meta_data_TestObject,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestObject.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
