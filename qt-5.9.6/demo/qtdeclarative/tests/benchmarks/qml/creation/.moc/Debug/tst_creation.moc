/****************************************************************************
** Meta object code from reading C++ file 'tst_creation.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_creation.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_creation_t {
    QByteArrayData data[23];
    char stringdata0[365];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_creation_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_creation_t qt_meta_stringdata_tst_creation = {
    {
QT_MOC_LITERAL(0, 0, 12), // "tst_creation"
QT_MOC_LITERAL(1, 13, 11), // "qobject_cpp"
QT_MOC_LITERAL(2, 25, 0), // ""
QT_MOC_LITERAL(3, 26, 11), // "qobject_qml"
QT_MOC_LITERAL(4, 38, 15), // "qobject_qmltype"
QT_MOC_LITERAL(5, 54, 18), // "qobject_10flat_qml"
QT_MOC_LITERAL(6, 73, 18), // "qobject_10flat_cpp"
QT_MOC_LITERAL(7, 92, 18), // "qobject_10tree_qml"
QT_MOC_LITERAL(8, 111, 18), // "qobject_10tree_cpp"
QT_MOC_LITERAL(9, 130, 19), // "itemtree_notree_cpp"
QT_MOC_LITERAL(10, 150, 20), // "itemtree_objtree_cpp"
QT_MOC_LITERAL(11, 171, 12), // "itemtree_cpp"
QT_MOC_LITERAL(12, 184, 17), // "itemtree_data_cpp"
QT_MOC_LITERAL(13, 202, 12), // "itemtree_qml"
QT_MOC_LITERAL(14, 215, 18), // "itemtree_scene_cpp"
QT_MOC_LITERAL(15, 234, 18), // "itemtests_qml_data"
QT_MOC_LITERAL(16, 253, 13), // "itemtests_qml"
QT_MOC_LITERAL(17, 267, 12), // "bindings_cpp"
QT_MOC_LITERAL(18, 280, 13), // "bindings_cpp2"
QT_MOC_LITERAL(19, 294, 12), // "bindings_qml"
QT_MOC_LITERAL(20, 307, 19), // "bindings_parent_qml"
QT_MOC_LITERAL(21, 327, 16), // "anchors_creation"
QT_MOC_LITERAL(22, 344, 20) // "anchors_heightChange"

    },
    "tst_creation\0qobject_cpp\0\0qobject_qml\0"
    "qobject_qmltype\0qobject_10flat_qml\0"
    "qobject_10flat_cpp\0qobject_10tree_qml\0"
    "qobject_10tree_cpp\0itemtree_notree_cpp\0"
    "itemtree_objtree_cpp\0itemtree_cpp\0"
    "itemtree_data_cpp\0itemtree_qml\0"
    "itemtree_scene_cpp\0itemtests_qml_data\0"
    "itemtests_qml\0bindings_cpp\0bindings_cpp2\0"
    "bindings_qml\0bindings_parent_qml\0"
    "anchors_creation\0anchors_heightChange"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_creation[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      21,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  119,    2, 0x08 /* Private */,
       3,    0,  120,    2, 0x08 /* Private */,
       4,    0,  121,    2, 0x08 /* Private */,
       5,    0,  122,    2, 0x08 /* Private */,
       6,    0,  123,    2, 0x08 /* Private */,
       7,    0,  124,    2, 0x08 /* Private */,
       8,    0,  125,    2, 0x08 /* Private */,
       9,    0,  126,    2, 0x08 /* Private */,
      10,    0,  127,    2, 0x08 /* Private */,
      11,    0,  128,    2, 0x08 /* Private */,
      12,    0,  129,    2, 0x08 /* Private */,
      13,    0,  130,    2, 0x08 /* Private */,
      14,    0,  131,    2, 0x08 /* Private */,
      15,    0,  132,    2, 0x08 /* Private */,
      16,    0,  133,    2, 0x08 /* Private */,
      17,    0,  134,    2, 0x08 /* Private */,
      18,    0,  135,    2, 0x08 /* Private */,
      19,    0,  136,    2, 0x08 /* Private */,
      20,    0,  137,    2, 0x08 /* Private */,
      21,    0,  138,    2, 0x08 /* Private */,
      22,    0,  139,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_creation::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_creation *_t = static_cast<tst_creation *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->qobject_cpp(); break;
        case 1: _t->qobject_qml(); break;
        case 2: _t->qobject_qmltype(); break;
        case 3: _t->qobject_10flat_qml(); break;
        case 4: _t->qobject_10flat_cpp(); break;
        case 5: _t->qobject_10tree_qml(); break;
        case 6: _t->qobject_10tree_cpp(); break;
        case 7: _t->itemtree_notree_cpp(); break;
        case 8: _t->itemtree_objtree_cpp(); break;
        case 9: _t->itemtree_cpp(); break;
        case 10: _t->itemtree_data_cpp(); break;
        case 11: _t->itemtree_qml(); break;
        case 12: _t->itemtree_scene_cpp(); break;
        case 13: _t->itemtests_qml_data(); break;
        case 14: _t->itemtests_qml(); break;
        case 15: _t->bindings_cpp(); break;
        case 16: _t->bindings_cpp2(); break;
        case 17: _t->bindings_qml(); break;
        case 18: _t->bindings_parent_qml(); break;
        case 19: _t->anchors_creation(); break;
        case 20: _t->anchors_heightChange(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_creation::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_creation.data,
      qt_meta_data_tst_creation,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_creation::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_creation::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_creation.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_creation::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 21)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 21;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 21)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 21;
    }
    return _id;
}
struct qt_meta_stringdata_TestType_t {
    QByteArrayData data[4];
    char stringdata0[61];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestType_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestType_t qt_meta_stringdata_TestType = {
    {
QT_MOC_LITERAL(0, 0, 8), // "TestType"
QT_MOC_LITERAL(1, 9, 15), // "DefaultProperty"
QT_MOC_LITERAL(2, 25, 9), // "resources"
QT_MOC_LITERAL(3, 35, 25) // "QQmlListProperty<QObject>"

    },
    "TestType\0DefaultProperty\0resources\0"
    "QQmlListProperty<QObject>"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestType[] = {

 // content:
       7,       // revision
       0,       // classname
       1,   14, // classinfo
       0,    0, // methods
       1,   16, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // classinfo: key, value
       1,    2,

 // properties: name, type, flags
       2, 0x80000000 | 3, 0x00095009,

       0        // eod
};

void TestType::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::RegisterPropertyMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 0:
            *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QQmlListProperty<QObject> >(); break;
        }
    }

#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        TestType *_t = static_cast<TestType *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< QQmlListProperty<QObject>*>(_v) = _t->resources(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
    Q_UNUSED(_o);
}

const QMetaObject TestType::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestType.data,
      qt_meta_data_TestType,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestType::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestType::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestType.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestType::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    
#ifndef QT_NO_PROPERTIES
   if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 1;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
