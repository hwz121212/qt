/****************************************************************************
** Meta object code from reading C++ file 'tst_script.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_script.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_script_t {
    QByteArrayData data[30];
    char stringdata0[448];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_script_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_script_t qt_meta_stringdata_tst_script = {
    {
QT_MOC_LITERAL(0, 0, 10), // "tst_script"
QT_MOC_LITERAL(1, 11, 12), // "initTestCase"
QT_MOC_LITERAL(2, 24, 0), // ""
QT_MOC_LITERAL(3, 25, 11), // "property_js"
QT_MOC_LITERAL(4, 37, 18), // "property_getter_js"
QT_MOC_LITERAL(5, 56, 16), // "property_qobject"
QT_MOC_LITERAL(6, 73, 14), // "setproperty_js"
QT_MOC_LITERAL(7, 88, 11), // "function_js"
QT_MOC_LITERAL(8, 100, 16), // "function_qobject"
QT_MOC_LITERAL(9, 117, 16), // "function_args_js"
QT_MOC_LITERAL(10, 134, 21), // "function_args_qobject"
QT_MOC_LITERAL(11, 156, 18), // "signal_unconnected"
QT_MOC_LITERAL(12, 175, 10), // "signal_qml"
QT_MOC_LITERAL(13, 186, 11), // "signal_args"
QT_MOC_LITERAL(14, 198, 17), // "signal_unusedArgs"
QT_MOC_LITERAL(15, 216, 22), // "signal_heavyArgsAccess"
QT_MOC_LITERAL(16, 239, 20), // "signal_heavyIdAccess"
QT_MOC_LITERAL(17, 260, 11), // "slot_simple"
QT_MOC_LITERAL(18, 272, 14), // "slot_simple_js"
QT_MOC_LITERAL(19, 287, 12), // "slot_complex"
QT_MOC_LITERAL(20, 300, 15), // "slot_complex_js"
QT_MOC_LITERAL(21, 316, 10), // "block_data"
QT_MOC_LITERAL(22, 327, 5), // "block"
QT_MOC_LITERAL(23, 333, 18), // "global_property_js"
QT_MOC_LITERAL(24, 352, 19), // "global_property_qml"
QT_MOC_LITERAL(25, 372, 22), // "global_property_qml_js"
QT_MOC_LITERAL(26, 395, 19), // "scriptfile_property"
QT_MOC_LITERAL(27, 415, 5), // "enums"
QT_MOC_LITERAL(28, 421, 15), // "namespacedEnums"
QT_MOC_LITERAL(29, 437, 10) // "scriptCall"

    },
    "tst_script\0initTestCase\0\0property_js\0"
    "property_getter_js\0property_qobject\0"
    "setproperty_js\0function_js\0function_qobject\0"
    "function_args_js\0function_args_qobject\0"
    "signal_unconnected\0signal_qml\0signal_args\0"
    "signal_unusedArgs\0signal_heavyArgsAccess\0"
    "signal_heavyIdAccess\0slot_simple\0"
    "slot_simple_js\0slot_complex\0slot_complex_js\0"
    "block_data\0block\0global_property_js\0"
    "global_property_qml\0global_property_qml_js\0"
    "scriptfile_property\0enums\0namespacedEnums\0"
    "scriptCall"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_script[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      28,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  154,    2, 0x08 /* Private */,
       3,    0,  155,    2, 0x08 /* Private */,
       4,    0,  156,    2, 0x08 /* Private */,
       5,    0,  157,    2, 0x08 /* Private */,
       6,    0,  158,    2, 0x08 /* Private */,
       7,    0,  159,    2, 0x08 /* Private */,
       8,    0,  160,    2, 0x08 /* Private */,
       9,    0,  161,    2, 0x08 /* Private */,
      10,    0,  162,    2, 0x08 /* Private */,
      11,    0,  163,    2, 0x08 /* Private */,
      12,    0,  164,    2, 0x08 /* Private */,
      13,    0,  165,    2, 0x08 /* Private */,
      14,    0,  166,    2, 0x08 /* Private */,
      15,    0,  167,    2, 0x08 /* Private */,
      16,    0,  168,    2, 0x08 /* Private */,
      17,    0,  169,    2, 0x08 /* Private */,
      18,    0,  170,    2, 0x08 /* Private */,
      19,    0,  171,    2, 0x08 /* Private */,
      20,    0,  172,    2, 0x08 /* Private */,
      21,    0,  173,    2, 0x08 /* Private */,
      22,    0,  174,    2, 0x08 /* Private */,
      23,    0,  175,    2, 0x08 /* Private */,
      24,    0,  176,    2, 0x08 /* Private */,
      25,    0,  177,    2, 0x08 /* Private */,
      26,    0,  178,    2, 0x08 /* Private */,
      27,    0,  179,    2, 0x08 /* Private */,
      28,    0,  180,    2, 0x08 /* Private */,
      29,    0,  181,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_script::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_script *_t = static_cast<tst_script *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->property_js(); break;
        case 2: _t->property_getter_js(); break;
        case 3: _t->property_qobject(); break;
        case 4: _t->setproperty_js(); break;
        case 5: _t->function_js(); break;
        case 6: _t->function_qobject(); break;
        case 7: _t->function_args_js(); break;
        case 8: _t->function_args_qobject(); break;
        case 9: _t->signal_unconnected(); break;
        case 10: _t->signal_qml(); break;
        case 11: _t->signal_args(); break;
        case 12: _t->signal_unusedArgs(); break;
        case 13: _t->signal_heavyArgsAccess(); break;
        case 14: _t->signal_heavyIdAccess(); break;
        case 15: _t->slot_simple(); break;
        case 16: _t->slot_simple_js(); break;
        case 17: _t->slot_complex(); break;
        case 18: _t->slot_complex_js(); break;
        case 19: _t->block_data(); break;
        case 20: _t->block(); break;
        case 21: _t->global_property_js(); break;
        case 22: _t->global_property_qml(); break;
        case 23: _t->global_property_qml_js(); break;
        case 24: _t->scriptfile_property(); break;
        case 25: _t->enums(); break;
        case 26: _t->namespacedEnums(); break;
        case 27: _t->scriptCall(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_script::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_script.data,
      qt_meta_data_tst_script,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_script::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_script::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_script.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_script::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 28)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 28;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 28)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 28;
    }
    return _id;
}
struct qt_meta_stringdata_TestObject_t {
    QByteArrayData data[9];
    char stringdata0[64];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestObject_t qt_meta_stringdata_TestObject = {
    {
QT_MOC_LITERAL(0, 0, 10), // "TestObject"
QT_MOC_LITERAL(1, 11, 8), // "mySignal"
QT_MOC_LITERAL(2, 20, 0), // ""
QT_MOC_LITERAL(3, 21, 16), // "mySignalWithArgs"
QT_MOC_LITERAL(4, 38, 1), // "n"
QT_MOC_LITERAL(5, 40, 6), // "method"
QT_MOC_LITERAL(6, 47, 10), // "methodArgs"
QT_MOC_LITERAL(7, 58, 3), // "val"
QT_MOC_LITERAL(8, 62, 1) // "x"

    },
    "TestObject\0mySignal\0\0mySignalWithArgs\0"
    "n\0method\0methodArgs\0val\0x"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       4,   14, // methods
       1,   42, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   34,    2, 0x06 /* Public */,
       3,    1,   35,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       5,    0,   38,    2, 0x0a /* Public */,
       6,    1,   39,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void,
    QMetaType::Void, QMetaType::Int,    4,

 // slots: parameters
    QMetaType::Int,
    QMetaType::Int, QMetaType::Int,    7,

 // properties: name, type, flags
       8, QMetaType::Int, 0x00095103,

       0        // eod
};

void TestObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestObject *_t = static_cast<TestObject *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->mySignal(); break;
        case 1: _t->mySignalWithArgs((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 2: { int _r = _t->method();
            if (_a[0]) *reinterpret_cast< int*>(_a[0]) = std::move(_r); }  break;
        case 3: { int _r = _t->methodArgs((*reinterpret_cast< int(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< int*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (TestObject::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&TestObject::mySignal)) {
                *result = 0;
                return;
            }
        }
        {
            typedef void (TestObject::*_t)(int );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&TestObject::mySignalWithArgs)) {
                *result = 1;
                return;
            }
        }
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        TestObject *_t = static_cast<TestObject *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< int*>(_v) = _t->x(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
        TestObject *_t = static_cast<TestObject *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: _t->setX(*reinterpret_cast< int*>(_v)); break;
        default: break;
        }
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
}

const QMetaObject TestObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestObject.data,
      qt_meta_data_TestObject,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestObject.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 4)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 4;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 4)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 4;
    }
#ifndef QT_NO_PROPERTIES
   else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 1;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}

// SIGNAL 0
void TestObject::mySignal()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}

// SIGNAL 1
void TestObject::mySignalWithArgs(int _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
