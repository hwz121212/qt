/****************************************************************************
** Meta object code from reading C++ file 'tst_qscriptable.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qscriptable.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_MyScriptable_t {
    QByteArrayData data[21];
    char stringdata0[158];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_MyScriptable_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_MyScriptable_t qt_meta_stringdata_MyScriptable = {
    {
QT_MOC_LITERAL(0, 0, 12), // "MyScriptable"
QT_MOC_LITERAL(1, 13, 3), // "sig"
QT_MOC_LITERAL(2, 17, 0), // ""
QT_MOC_LITERAL(3, 18, 3), // "foo"
QT_MOC_LITERAL(4, 22, 4), // "setX"
QT_MOC_LITERAL(5, 27, 1), // "x"
QT_MOC_LITERAL(6, 29, 5), // "setX2"
QT_MOC_LITERAL(7, 35, 5), // "isBar"
QT_MOC_LITERAL(8, 41, 3), // "baz"
QT_MOC_LITERAL(9, 45, 6), // "setBaz"
QT_MOC_LITERAL(10, 52, 9), // "evalIsBar"
QT_MOC_LITERAL(11, 62, 18), // "useInAnotherEngine"
QT_MOC_LITERAL(12, 81, 14), // "setOtherEngine"
QT_MOC_LITERAL(13, 96, 3), // "zab"
QT_MOC_LITERAL(14, 100, 6), // "setZab"
QT_MOC_LITERAL(15, 107, 12), // "getArguments"
QT_MOC_LITERAL(16, 120, 12), // "QScriptValue"
QT_MOC_LITERAL(17, 133, 16), // "getArgumentCount"
QT_MOC_LITERAL(18, 150, 1), // "0"
QT_MOC_LITERAL(19, 152, 1), // "1"
QT_MOC_LITERAL(20, 154, 3) // "oof"

    },
    "MyScriptable\0sig\0\0foo\0setX\0x\0setX2\0"
    "isBar\0baz\0setBaz\0evalIsBar\0"
    "useInAnotherEngine\0setOtherEngine\0zab\0"
    "setZab\0getArguments\0QScriptValue\0"
    "getArgumentCount\0""0\0""1\0oof"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_MyScriptable[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      15,   14, // methods
       5,  116, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   89,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       3,    0,   92,    2, 0x0a /* Public */,
       4,    1,   93,    2, 0x0a /* Public */,
       4,    1,   96,    2, 0x0a /* Public */,
       6,    1,   99,    2, 0x0a /* Public */,
       7,    0,  102,    2, 0x0a /* Public */,
       8,    0,  103,    2, 0x0a /* Public */,
       9,    1,  104,    2, 0x0a /* Public */,
      10,    0,  107,    2, 0x0a /* Public */,
      11,    0,  108,    2, 0x0a /* Public */,
      12,    0,  109,    2, 0x0a /* Public */,
      13,    0,  110,    2, 0x0a /* Public */,
      14,    1,  111,    2, 0x0a /* Public */,
      15,    0,  114,    2, 0x0a /* Public */,
      17,    0,  115,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::Int,    2,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void, QMetaType::Int,    5,
    QMetaType::Void, QMetaType::QString,    5,
    QMetaType::Void, QMetaType::Int,    5,
    QMetaType::Bool,
    QMetaType::Int,
    QMetaType::Void, QMetaType::Int,    5,
    QMetaType::Void,
    QMetaType::Bool,
    QMetaType::Void,
    QMetaType::QObjectStar,
    QMetaType::QObjectStar, QMetaType::QObjectStar,    2,
    0x80000000 | 16,
    QMetaType::Int,

 // properties: name, type, flags
       8, QMetaType::Int, 0x00095103,
      13, QMetaType::QObjectStar, 0x00095103,
      18, QMetaType::Int, 0x00095001,
      19, QMetaType::QObjectStar, 0x00095001,
      20, QMetaType::Int, 0x00095102,

       0        // eod
};

void MyScriptable::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        MyScriptable *_t = static_cast<MyScriptable *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->sig((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 1: _t->foo(); break;
        case 2: _t->setX((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 3: _t->setX((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 4: _t->setX2((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 5: { bool _r = _t->isBar();
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = std::move(_r); }  break;
        case 6: { int _r = _t->baz();
            if (_a[0]) *reinterpret_cast< int*>(_a[0]) = std::move(_r); }  break;
        case 7: _t->setBaz((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 8: _t->evalIsBar(); break;
        case 9: { bool _r = _t->useInAnotherEngine();
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = std::move(_r); }  break;
        case 10: _t->setOtherEngine(); break;
        case 11: { QObject* _r = _t->zab();
            if (_a[0]) *reinterpret_cast< QObject**>(_a[0]) = std::move(_r); }  break;
        case 12: { QObject* _r = _t->setZab((*reinterpret_cast< QObject*(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QObject**>(_a[0]) = std::move(_r); }  break;
        case 13: { QScriptValue _r = _t->getArguments();
            if (_a[0]) *reinterpret_cast< QScriptValue*>(_a[0]) = std::move(_r); }  break;
        case 14: { int _r = _t->getArgumentCount();
            if (_a[0]) *reinterpret_cast< int*>(_a[0]) = std::move(_r); }  break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (MyScriptable::*_t)(int );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&MyScriptable::sig)) {
                *result = 0;
                return;
            }
        }
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        MyScriptable *_t = static_cast<MyScriptable *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< int*>(_v) = _t->baz(); break;
        case 1: *reinterpret_cast< QObject**>(_v) = _t->zab(); break;
        case 2: *reinterpret_cast< int*>(_v) = _t->baz(); break;
        case 3: *reinterpret_cast< QObject**>(_v) = _t->zab(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
        MyScriptable *_t = static_cast<MyScriptable *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: _t->setBaz(*reinterpret_cast< int*>(_v)); break;
        case 1: _t->setZab(*reinterpret_cast< QObject**>(_v)); break;
        case 4: _t->setOof(*reinterpret_cast< int*>(_v)); break;
        default: break;
        }
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
}

const QMetaObject MyScriptable::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_MyScriptable.data,
      qt_meta_data_MyScriptable,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *MyScriptable::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *MyScriptable::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_MyScriptable.stringdata0))
        return static_cast<void*>(this);
    if (!strcmp(_clname, "QScriptable"))
        return static_cast< QScriptable*>(this);
    return QObject::qt_metacast(_clname);
}

int MyScriptable::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 15)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 15;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 15)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 15;
    }
#ifndef QT_NO_PROPERTIES
   else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 5;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 5;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 5;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 5;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 5;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 5;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}

// SIGNAL 0
void MyScriptable::sig(int _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}
struct qt_meta_stringdata_tst_QScriptable_t {
    QByteArrayData data[8];
    char stringdata0[85];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QScriptable_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QScriptable_t qt_meta_stringdata_tst_QScriptable = {
    {
QT_MOC_LITERAL(0, 0, 15), // "tst_QScriptable"
QT_MOC_LITERAL(1, 16, 12), // "initTestCase"
QT_MOC_LITERAL(2, 29, 0), // ""
QT_MOC_LITERAL(3, 30, 15), // "cleanupTestCase"
QT_MOC_LITERAL(4, 46, 6), // "engine"
QT_MOC_LITERAL(5, 53, 10), // "thisObject"
QT_MOC_LITERAL(6, 64, 9), // "arguments"
QT_MOC_LITERAL(7, 74, 10) // "throwError"

    },
    "tst_QScriptable\0initTestCase\0\0"
    "cleanupTestCase\0engine\0thisObject\0"
    "arguments\0throwError"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QScriptable[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       6,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   44,    2, 0x08 /* Private */,
       3,    0,   45,    2, 0x08 /* Private */,
       4,    0,   46,    2, 0x08 /* Private */,
       5,    0,   47,    2, 0x08 /* Private */,
       6,    0,   48,    2, 0x08 /* Private */,
       7,    0,   49,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QScriptable::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QScriptable *_t = static_cast<tst_QScriptable *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->cleanupTestCase(); break;
        case 2: _t->engine(); break;
        case 3: _t->thisObject(); break;
        case 4: _t->arguments(); break;
        case 5: _t->throwError(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QScriptable::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QScriptable.data,
      qt_meta_data_tst_QScriptable,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QScriptable::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QScriptable::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QScriptable.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QScriptable::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 6)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 6;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 6)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 6;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
