/****************************************************************************
** Meta object code from reading C++ file 'tst_qtimer.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qtimer.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QTimer_t {
    QByteArrayData data[29];
    char stringdata0[616];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QTimer_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QTimer_t qt_meta_stringdata_tst_QTimer = {
    {
QT_MOC_LITERAL(0, 0, 10), // "tst_QTimer"
QT_MOC_LITERAL(1, 11, 9), // "zeroTimer"
QT_MOC_LITERAL(2, 21, 0), // ""
QT_MOC_LITERAL(3, 22, 17), // "singleShotTimeout"
QT_MOC_LITERAL(4, 40, 7), // "timeout"
QT_MOC_LITERAL(5, 48, 13), // "remainingTime"
QT_MOC_LITERAL(6, 62, 34), // "remainingTimeDuringActivation..."
QT_MOC_LITERAL(7, 97, 29), // "remainingTimeDuringActivation"
QT_MOC_LITERAL(8, 127, 12), // "basic_chrono"
QT_MOC_LITERAL(9, 140, 13), // "livelock_data"
QT_MOC_LITERAL(10, 154, 8), // "livelock"
QT_MOC_LITERAL(11, 163, 27), // "timerInfiniteRecursion_data"
QT_MOC_LITERAL(12, 191, 22), // "timerInfiniteRecursion"
QT_MOC_LITERAL(13, 214, 19), // "recurringTimer_data"
QT_MOC_LITERAL(14, 234, 14), // "recurringTimer"
QT_MOC_LITERAL(15, 249, 19), // "deleteLaterOnQTimer"
QT_MOC_LITERAL(16, 269, 12), // "moveToThread"
QT_MOC_LITERAL(17, 282, 26), // "restartedTimerFiresTooSoon"
QT_MOC_LITERAL(18, 309, 39), // "timerFiresOnlyOncePerProcessE..."
QT_MOC_LITERAL(19, 349, 34), // "timerFiresOnlyOncePerProcessE..."
QT_MOC_LITERAL(20, 384, 30), // "timerIdPersistsAfterThreadExit"
QT_MOC_LITERAL(21, 415, 15), // "cancelLongTimer"
QT_MOC_LITERAL(22, 431, 35), // "singleShotStaticFunctionZeroT..."
QT_MOC_LITERAL(23, 467, 28), // "recurseOnTimeoutAndStopTimer"
QT_MOC_LITERAL(24, 496, 20), // "singleShotToFunctors"
QT_MOC_LITERAL(25, 517, 17), // "singleShot_chrono"
QT_MOC_LITERAL(26, 535, 30), // "crossThreadSingleShotToFunctor"
QT_MOC_LITERAL(27, 566, 15), // "dontBlockEvents"
QT_MOC_LITERAL(28, 582, 33) // "postedEventsShouldNotStarveTi..."

    },
    "tst_QTimer\0zeroTimer\0\0singleShotTimeout\0"
    "timeout\0remainingTime\0"
    "remainingTimeDuringActivation_data\0"
    "remainingTimeDuringActivation\0"
    "basic_chrono\0livelock_data\0livelock\0"
    "timerInfiniteRecursion_data\0"
    "timerInfiniteRecursion\0recurringTimer_data\0"
    "recurringTimer\0deleteLaterOnQTimer\0"
    "moveToThread\0restartedTimerFiresTooSoon\0"
    "timerFiresOnlyOncePerProcessEvents_data\0"
    "timerFiresOnlyOncePerProcessEvents\0"
    "timerIdPersistsAfterThreadExit\0"
    "cancelLongTimer\0singleShotStaticFunctionZeroTimeout\0"
    "recurseOnTimeoutAndStopTimer\0"
    "singleShotToFunctors\0singleShot_chrono\0"
    "crossThreadSingleShotToFunctor\0"
    "dontBlockEvents\0postedEventsShouldNotStarveTimers"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QTimer[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      27,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  149,    2, 0x08 /* Private */,
       3,    0,  150,    2, 0x08 /* Private */,
       4,    0,  151,    2, 0x08 /* Private */,
       5,    0,  152,    2, 0x08 /* Private */,
       6,    0,  153,    2, 0x08 /* Private */,
       7,    0,  154,    2, 0x08 /* Private */,
       8,    0,  155,    2, 0x08 /* Private */,
       9,    0,  156,    2, 0x08 /* Private */,
      10,    0,  157,    2, 0x08 /* Private */,
      11,    0,  158,    2, 0x08 /* Private */,
      12,    0,  159,    2, 0x08 /* Private */,
      13,    0,  160,    2, 0x08 /* Private */,
      14,    0,  161,    2, 0x08 /* Private */,
      15,    0,  162,    2, 0x08 /* Private */,
      16,    0,  163,    2, 0x08 /* Private */,
      17,    0,  164,    2, 0x08 /* Private */,
      18,    0,  165,    2, 0x08 /* Private */,
      19,    0,  166,    2, 0x08 /* Private */,
      20,    0,  167,    2, 0x08 /* Private */,
      21,    0,  168,    2, 0x08 /* Private */,
      22,    0,  169,    2, 0x08 /* Private */,
      23,    0,  170,    2, 0x08 /* Private */,
      24,    0,  171,    2, 0x08 /* Private */,
      25,    0,  172,    2, 0x08 /* Private */,
      26,    0,  173,    2, 0x08 /* Private */,
      27,    0,  174,    2, 0x08 /* Private */,
      28,    0,  175,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QTimer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QTimer *_t = static_cast<tst_QTimer *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->zeroTimer(); break;
        case 1: _t->singleShotTimeout(); break;
        case 2: _t->timeout(); break;
        case 3: _t->remainingTime(); break;
        case 4: _t->remainingTimeDuringActivation_data(); break;
        case 5: _t->remainingTimeDuringActivation(); break;
        case 6: _t->basic_chrono(); break;
        case 7: _t->livelock_data(); break;
        case 8: _t->livelock(); break;
        case 9: _t->timerInfiniteRecursion_data(); break;
        case 10: _t->timerInfiniteRecursion(); break;
        case 11: _t->recurringTimer_data(); break;
        case 12: _t->recurringTimer(); break;
        case 13: _t->deleteLaterOnQTimer(); break;
        case 14: _t->moveToThread(); break;
        case 15: _t->restartedTimerFiresTooSoon(); break;
        case 16: _t->timerFiresOnlyOncePerProcessEvents_data(); break;
        case 17: _t->timerFiresOnlyOncePerProcessEvents(); break;
        case 18: _t->timerIdPersistsAfterThreadExit(); break;
        case 19: _t->cancelLongTimer(); break;
        case 20: _t->singleShotStaticFunctionZeroTimeout(); break;
        case 21: _t->recurseOnTimeoutAndStopTimer(); break;
        case 22: _t->singleShotToFunctors(); break;
        case 23: _t->singleShot_chrono(); break;
        case 24: _t->crossThreadSingleShotToFunctor(); break;
        case 25: _t->dontBlockEvents(); break;
        case 26: _t->postedEventsShouldNotStarveTimers(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QTimer::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QTimer.data,
      qt_meta_data_tst_QTimer,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QTimer::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QTimer::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QTimer.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QTimer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 27)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 27;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 27)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 27;
    }
    return _id;
}
struct qt_meta_stringdata_TimerHelper_t {
    QByteArrayData data[4];
    char stringdata0[40];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TimerHelper_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TimerHelper_t qt_meta_stringdata_TimerHelper = {
    {
QT_MOC_LITERAL(0, 0, 11), // "TimerHelper"
QT_MOC_LITERAL(1, 12, 7), // "timeout"
QT_MOC_LITERAL(2, 20, 0), // ""
QT_MOC_LITERAL(3, 21, 18) // "fetchRemainingTime"

    },
    "TimerHelper\0timeout\0\0fetchRemainingTime"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TimerHelper[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   24,    2, 0x0a /* Public */,
       3,    0,   25,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void TimerHelper::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TimerHelper *_t = static_cast<TimerHelper *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->timeout(); break;
        case 1: _t->fetchRemainingTime(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject TimerHelper::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TimerHelper.data,
      qt_meta_data_TimerHelper,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TimerHelper::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TimerHelper::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TimerHelper.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TimerHelper::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 2;
    }
    return _id;
}
struct qt_meta_stringdata_RecurringTimerObject_t {
    QByteArrayData data[3];
    char stringdata0[27];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_RecurringTimerObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_RecurringTimerObject_t qt_meta_stringdata_RecurringTimerObject = {
    {
QT_MOC_LITERAL(0, 0, 20), // "RecurringTimerObject"
QT_MOC_LITERAL(1, 21, 4), // "done"
QT_MOC_LITERAL(2, 26, 0) // ""

    },
    "RecurringTimerObject\0done\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_RecurringTimerObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x06 /* Public */,

 // signals: parameters
    QMetaType::Void,

       0        // eod
};

void RecurringTimerObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        RecurringTimerObject *_t = static_cast<RecurringTimerObject *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->done(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (RecurringTimerObject::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&RecurringTimerObject::done)) {
                *result = 0;
                return;
            }
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject RecurringTimerObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_RecurringTimerObject.data,
      qt_meta_data_RecurringTimerObject,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *RecurringTimerObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *RecurringTimerObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_RecurringTimerObject.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int RecurringTimerObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}

// SIGNAL 0
void RecurringTimerObject::done()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}
struct qt_meta_stringdata_RestartedTimerFiresTooSoonObject_t {
    QByteArrayData data[1];
    char stringdata0[33];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_RestartedTimerFiresTooSoonObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_RestartedTimerFiresTooSoonObject_t qt_meta_stringdata_RestartedTimerFiresTooSoonObject = {
    {
QT_MOC_LITERAL(0, 0, 32) // "RestartedTimerFiresTooSoonObject"

    },
    "RestartedTimerFiresTooSoonObject"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_RestartedTimerFiresTooSoonObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void RestartedTimerFiresTooSoonObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject RestartedTimerFiresTooSoonObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_RestartedTimerFiresTooSoonObject.data,
      qt_meta_data_RestartedTimerFiresTooSoonObject,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *RestartedTimerFiresTooSoonObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *RestartedTimerFiresTooSoonObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_RestartedTimerFiresTooSoonObject.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int RestartedTimerFiresTooSoonObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_LongLastingSlotClass_t {
    QByteArrayData data[3];
    char stringdata0[38];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_LongLastingSlotClass_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_LongLastingSlotClass_t qt_meta_stringdata_LongLastingSlotClass = {
    {
QT_MOC_LITERAL(0, 0, 20), // "LongLastingSlotClass"
QT_MOC_LITERAL(1, 21, 15), // "longLastingSlot"
QT_MOC_LITERAL(2, 37, 0) // ""

    },
    "LongLastingSlotClass\0longLastingSlot\0"
    ""
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_LongLastingSlotClass[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void LongLastingSlotClass::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        LongLastingSlotClass *_t = static_cast<LongLastingSlotClass *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->longLastingSlot(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject LongLastingSlotClass::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_LongLastingSlotClass.data,
      qt_meta_data_LongLastingSlotClass,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *LongLastingSlotClass::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *LongLastingSlotClass::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_LongLastingSlotClass.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int LongLastingSlotClass::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_RecursOnTimeoutAndStopTimerTimer_t {
    QByteArrayData data[4];
    char stringdata0[56];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_RecursOnTimeoutAndStopTimerTimer_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_RecursOnTimeoutAndStopTimerTimer_t qt_meta_stringdata_RecursOnTimeoutAndStopTimerTimer = {
    {
QT_MOC_LITERAL(0, 0, 32), // "RecursOnTimeoutAndStopTimerTimer"
QT_MOC_LITERAL(1, 33, 10), // "onetrigger"
QT_MOC_LITERAL(2, 44, 0), // ""
QT_MOC_LITERAL(3, 45, 10) // "twotrigger"

    },
    "RecursOnTimeoutAndStopTimerTimer\0"
    "onetrigger\0\0twotrigger"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_RecursOnTimeoutAndStopTimerTimer[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   24,    2, 0x0a /* Public */,
       3,    0,   25,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void RecursOnTimeoutAndStopTimerTimer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        RecursOnTimeoutAndStopTimerTimer *_t = static_cast<RecursOnTimeoutAndStopTimerTimer *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->onetrigger(); break;
        case 1: _t->twotrigger(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject RecursOnTimeoutAndStopTimerTimer::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_RecursOnTimeoutAndStopTimerTimer.data,
      qt_meta_data_RecursOnTimeoutAndStopTimerTimer,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *RecursOnTimeoutAndStopTimerTimer::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *RecursOnTimeoutAndStopTimerTimer::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_RecursOnTimeoutAndStopTimerTimer.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int RecursOnTimeoutAndStopTimerTimer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 2;
    }
    return _id;
}
struct qt_meta_stringdata_DontBlockEvents_t {
    QByteArrayData data[3];
    char stringdata0[28];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_DontBlockEvents_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_DontBlockEvents_t qt_meta_stringdata_DontBlockEvents = {
    {
QT_MOC_LITERAL(0, 0, 15), // "DontBlockEvents"
QT_MOC_LITERAL(1, 16, 10), // "paintEvent"
QT_MOC_LITERAL(2, 27, 0) // ""

    },
    "DontBlockEvents\0paintEvent\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_DontBlockEvents[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void DontBlockEvents::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        DontBlockEvents *_t = static_cast<DontBlockEvents *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->paintEvent(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject DontBlockEvents::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_DontBlockEvents.data,
      qt_meta_data_DontBlockEvents,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *DontBlockEvents::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *DontBlockEvents::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_DontBlockEvents.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int DontBlockEvents::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_SlotRepeater_t {
    QByteArrayData data[3];
    char stringdata0[29];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_SlotRepeater_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_SlotRepeater_t qt_meta_stringdata_SlotRepeater = {
    {
QT_MOC_LITERAL(0, 0, 12), // "SlotRepeater"
QT_MOC_LITERAL(1, 13, 14), // "repeatThisSlot"
QT_MOC_LITERAL(2, 28, 0) // ""

    },
    "SlotRepeater\0repeatThisSlot\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_SlotRepeater[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void SlotRepeater::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        SlotRepeater *_t = static_cast<SlotRepeater *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->repeatThisSlot(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject SlotRepeater::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_SlotRepeater.data,
      qt_meta_data_SlotRepeater,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *SlotRepeater::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *SlotRepeater::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_SlotRepeater.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int SlotRepeater::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
