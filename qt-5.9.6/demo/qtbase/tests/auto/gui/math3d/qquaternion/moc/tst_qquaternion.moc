/****************************************************************************
** Meta object code from reading C++ file 'tst_qquaternion.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qquaternion.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QQuaternion_t {
    QByteArrayData data[46];
    char stringdata0[567];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QQuaternion_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QQuaternion_t qt_meta_stringdata_tst_QQuaternion = {
    {
QT_MOC_LITERAL(0, 0, 15), // "tst_QQuaternion"
QT_MOC_LITERAL(1, 16, 6), // "create"
QT_MOC_LITERAL(2, 23, 0), // ""
QT_MOC_LITERAL(3, 24, 15), // "dotProduct_data"
QT_MOC_LITERAL(4, 40, 10), // "dotProduct"
QT_MOC_LITERAL(5, 51, 11), // "length_data"
QT_MOC_LITERAL(6, 63, 6), // "length"
QT_MOC_LITERAL(7, 70, 15), // "normalized_data"
QT_MOC_LITERAL(8, 86, 10), // "normalized"
QT_MOC_LITERAL(9, 97, 14), // "normalize_data"
QT_MOC_LITERAL(10, 112, 9), // "normalize"
QT_MOC_LITERAL(11, 122, 13), // "inverted_data"
QT_MOC_LITERAL(12, 136, 8), // "inverted"
QT_MOC_LITERAL(13, 145, 7), // "compare"
QT_MOC_LITERAL(14, 153, 8), // "add_data"
QT_MOC_LITERAL(15, 162, 3), // "add"
QT_MOC_LITERAL(16, 166, 13), // "subtract_data"
QT_MOC_LITERAL(17, 180, 8), // "subtract"
QT_MOC_LITERAL(18, 189, 13), // "multiply_data"
QT_MOC_LITERAL(19, 203, 8), // "multiply"
QT_MOC_LITERAL(20, 212, 19), // "multiplyFactor_data"
QT_MOC_LITERAL(21, 232, 14), // "multiplyFactor"
QT_MOC_LITERAL(22, 247, 11), // "divide_data"
QT_MOC_LITERAL(23, 259, 6), // "divide"
QT_MOC_LITERAL(24, 266, 11), // "negate_data"
QT_MOC_LITERAL(25, 278, 6), // "negate"
QT_MOC_LITERAL(26, 285, 14), // "conjugate_data"
QT_MOC_LITERAL(27, 300, 9), // "conjugate"
QT_MOC_LITERAL(28, 310, 21), // "fromAxisAndAngle_data"
QT_MOC_LITERAL(29, 332, 16), // "fromAxisAndAngle"
QT_MOC_LITERAL(30, 349, 23), // "fromRotationMatrix_data"
QT_MOC_LITERAL(31, 373, 18), // "fromRotationMatrix"
QT_MOC_LITERAL(32, 392, 13), // "fromAxes_data"
QT_MOC_LITERAL(33, 406, 8), // "fromAxes"
QT_MOC_LITERAL(34, 415, 15), // "rotationTo_data"
QT_MOC_LITERAL(35, 431, 10), // "rotationTo"
QT_MOC_LITERAL(36, 442, 18), // "fromDirection_data"
QT_MOC_LITERAL(37, 461, 13), // "fromDirection"
QT_MOC_LITERAL(38, 475, 20), // "fromEulerAngles_data"
QT_MOC_LITERAL(39, 496, 15), // "fromEulerAngles"
QT_MOC_LITERAL(40, 512, 10), // "slerp_data"
QT_MOC_LITERAL(41, 523, 5), // "slerp"
QT_MOC_LITERAL(42, 529, 10), // "nlerp_data"
QT_MOC_LITERAL(43, 540, 5), // "nlerp"
QT_MOC_LITERAL(44, 546, 10), // "properties"
QT_MOC_LITERAL(45, 557, 9) // "metaTypes"

    },
    "tst_QQuaternion\0create\0\0dotProduct_data\0"
    "dotProduct\0length_data\0length\0"
    "normalized_data\0normalized\0normalize_data\0"
    "normalize\0inverted_data\0inverted\0"
    "compare\0add_data\0add\0subtract_data\0"
    "subtract\0multiply_data\0multiply\0"
    "multiplyFactor_data\0multiplyFactor\0"
    "divide_data\0divide\0negate_data\0negate\0"
    "conjugate_data\0conjugate\0fromAxisAndAngle_data\0"
    "fromAxisAndAngle\0fromRotationMatrix_data\0"
    "fromRotationMatrix\0fromAxes_data\0"
    "fromAxes\0rotationTo_data\0rotationTo\0"
    "fromDirection_data\0fromDirection\0"
    "fromEulerAngles_data\0fromEulerAngles\0"
    "slerp_data\0slerp\0nlerp_data\0nlerp\0"
    "properties\0metaTypes"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QQuaternion[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      44,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  234,    2, 0x08 /* Private */,
       3,    0,  235,    2, 0x08 /* Private */,
       4,    0,  236,    2, 0x08 /* Private */,
       5,    0,  237,    2, 0x08 /* Private */,
       6,    0,  238,    2, 0x08 /* Private */,
       7,    0,  239,    2, 0x08 /* Private */,
       8,    0,  240,    2, 0x08 /* Private */,
       9,    0,  241,    2, 0x08 /* Private */,
      10,    0,  242,    2, 0x08 /* Private */,
      11,    0,  243,    2, 0x08 /* Private */,
      12,    0,  244,    2, 0x08 /* Private */,
      13,    0,  245,    2, 0x08 /* Private */,
      14,    0,  246,    2, 0x08 /* Private */,
      15,    0,  247,    2, 0x08 /* Private */,
      16,    0,  248,    2, 0x08 /* Private */,
      17,    0,  249,    2, 0x08 /* Private */,
      18,    0,  250,    2, 0x08 /* Private */,
      19,    0,  251,    2, 0x08 /* Private */,
      20,    0,  252,    2, 0x08 /* Private */,
      21,    0,  253,    2, 0x08 /* Private */,
      22,    0,  254,    2, 0x08 /* Private */,
      23,    0,  255,    2, 0x08 /* Private */,
      24,    0,  256,    2, 0x08 /* Private */,
      25,    0,  257,    2, 0x08 /* Private */,
      26,    0,  258,    2, 0x08 /* Private */,
      27,    0,  259,    2, 0x08 /* Private */,
      28,    0,  260,    2, 0x08 /* Private */,
      29,    0,  261,    2, 0x08 /* Private */,
      30,    0,  262,    2, 0x08 /* Private */,
      31,    0,  263,    2, 0x08 /* Private */,
      32,    0,  264,    2, 0x08 /* Private */,
      33,    0,  265,    2, 0x08 /* Private */,
      34,    0,  266,    2, 0x08 /* Private */,
      35,    0,  267,    2, 0x08 /* Private */,
      36,    0,  268,    2, 0x08 /* Private */,
      37,    0,  269,    2, 0x08 /* Private */,
      38,    0,  270,    2, 0x08 /* Private */,
      39,    0,  271,    2, 0x08 /* Private */,
      40,    0,  272,    2, 0x08 /* Private */,
      41,    0,  273,    2, 0x08 /* Private */,
      42,    0,  274,    2, 0x08 /* Private */,
      43,    0,  275,    2, 0x08 /* Private */,
      44,    0,  276,    2, 0x08 /* Private */,
      45,    0,  277,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QQuaternion::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QQuaternion *_t = static_cast<tst_QQuaternion *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->create(); break;
        case 1: _t->dotProduct_data(); break;
        case 2: _t->dotProduct(); break;
        case 3: _t->length_data(); break;
        case 4: _t->length(); break;
        case 5: _t->normalized_data(); break;
        case 6: _t->normalized(); break;
        case 7: _t->normalize_data(); break;
        case 8: _t->normalize(); break;
        case 9: _t->inverted_data(); break;
        case 10: _t->inverted(); break;
        case 11: _t->compare(); break;
        case 12: _t->add_data(); break;
        case 13: _t->add(); break;
        case 14: _t->subtract_data(); break;
        case 15: _t->subtract(); break;
        case 16: _t->multiply_data(); break;
        case 17: _t->multiply(); break;
        case 18: _t->multiplyFactor_data(); break;
        case 19: _t->multiplyFactor(); break;
        case 20: _t->divide_data(); break;
        case 21: _t->divide(); break;
        case 22: _t->negate_data(); break;
        case 23: _t->negate(); break;
        case 24: _t->conjugate_data(); break;
        case 25: _t->conjugate(); break;
        case 26: _t->fromAxisAndAngle_data(); break;
        case 27: _t->fromAxisAndAngle(); break;
        case 28: _t->fromRotationMatrix_data(); break;
        case 29: _t->fromRotationMatrix(); break;
        case 30: _t->fromAxes_data(); break;
        case 31: _t->fromAxes(); break;
        case 32: _t->rotationTo_data(); break;
        case 33: _t->rotationTo(); break;
        case 34: _t->fromDirection_data(); break;
        case 35: _t->fromDirection(); break;
        case 36: _t->fromEulerAngles_data(); break;
        case 37: _t->fromEulerAngles(); break;
        case 38: _t->slerp_data(); break;
        case 39: _t->slerp(); break;
        case 40: _t->nlerp_data(); break;
        case 41: _t->nlerp(); break;
        case 42: _t->properties(); break;
        case 43: _t->metaTypes(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QQuaternion::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QQuaternion.data,
      qt_meta_data_tst_QQuaternion,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QQuaternion::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QQuaternion::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QQuaternion.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QQuaternion::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 44)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 44;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 44)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 44;
    }
    return _id;
}
struct qt_meta_stringdata_tst_QQuaternionProperties_t {
    QByteArrayData data[2];
    char stringdata0[37];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QQuaternionProperties_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QQuaternionProperties_t qt_meta_stringdata_tst_QQuaternionProperties = {
    {
QT_MOC_LITERAL(0, 0, 25), // "tst_QQuaternionProperties"
QT_MOC_LITERAL(1, 26, 10) // "quaternion"

    },
    "tst_QQuaternionProperties\0quaternion"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QQuaternionProperties[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       1,   14, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // properties: name, type, flags
       1, QMetaType::QQuaternion, 0x00095103,

       0        // eod
};

void tst_QQuaternionProperties::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{

#ifndef QT_NO_PROPERTIES
    if (_c == QMetaObject::ReadProperty) {
        tst_QQuaternionProperties *_t = static_cast<tst_QQuaternionProperties *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< QQuaternion*>(_v) = _t->quaternion(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
        tst_QQuaternionProperties *_t = static_cast<tst_QQuaternionProperties *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: _t->setQuaternion(*reinterpret_cast< QQuaternion*>(_v)); break;
        default: break;
        }
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject tst_QQuaternionProperties::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QQuaternionProperties.data,
      qt_meta_data_tst_QQuaternionProperties,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QQuaternionProperties::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QQuaternionProperties::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QQuaternionProperties.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QQuaternionProperties::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    
#ifndef QT_NO_PROPERTIES
   if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 1;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
