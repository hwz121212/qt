/****************************************************************************
** Meta object code from reading C++ file 'tst_qcolor.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qcolor.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QColor_t {
    QByteArrayData data[50];
    char stringdata0[607];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QColor_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QColor_t qt_meta_stringdata_tst_QColor = {
    {
QT_MOC_LITERAL(0, 0, 10), // "tst_QColor"
QT_MOC_LITERAL(1, 11, 11), // "getSetCheck"
QT_MOC_LITERAL(2, 23, 0), // ""
QT_MOC_LITERAL(3, 24, 12), // "isValid_data"
QT_MOC_LITERAL(4, 37, 7), // "isValid"
QT_MOC_LITERAL(5, 45, 9), // "name_data"
QT_MOC_LITERAL(6, 55, 4), // "name"
QT_MOC_LITERAL(7, 60, 12), // "namehex_data"
QT_MOC_LITERAL(8, 73, 7), // "namehex"
QT_MOC_LITERAL(9, 81, 18), // "setNamedColor_data"
QT_MOC_LITERAL(10, 100, 13), // "setNamedColor"
QT_MOC_LITERAL(11, 114, 28), // "constructNamedColorWithSpace"
QT_MOC_LITERAL(12, 143, 10), // "colorNames"
QT_MOC_LITERAL(13, 154, 4), // "spec"
QT_MOC_LITERAL(14, 159, 17), // "globalColors_data"
QT_MOC_LITERAL(15, 177, 12), // "globalColors"
QT_MOC_LITERAL(16, 190, 6), // "setRed"
QT_MOC_LITERAL(17, 197, 8), // "setGreen"
QT_MOC_LITERAL(18, 206, 7), // "setBlue"
QT_MOC_LITERAL(19, 214, 6), // "setRgb"
QT_MOC_LITERAL(20, 221, 7), // "setRgba"
QT_MOC_LITERAL(21, 229, 6), // "setHsv"
QT_MOC_LITERAL(22, 236, 7), // "setCmyk"
QT_MOC_LITERAL(23, 244, 6), // "setHsl"
QT_MOC_LITERAL(24, 251, 10), // "toRgb_data"
QT_MOC_LITERAL(25, 262, 5), // "toRgb"
QT_MOC_LITERAL(26, 268, 19), // "toRgbNonDestructive"
QT_MOC_LITERAL(27, 288, 10), // "toHsv_data"
QT_MOC_LITERAL(28, 299, 5), // "toHsv"
QT_MOC_LITERAL(29, 305, 19), // "toHsvNonDestructive"
QT_MOC_LITERAL(30, 325, 11), // "toCmyk_data"
QT_MOC_LITERAL(31, 337, 6), // "toCmyk"
QT_MOC_LITERAL(32, 344, 20), // "toCmykNonDestructive"
QT_MOC_LITERAL(33, 365, 10), // "toHsl_data"
QT_MOC_LITERAL(34, 376, 5), // "toHsl"
QT_MOC_LITERAL(35, 382, 19), // "toHslNonDestructive"
QT_MOC_LITERAL(36, 402, 9), // "convertTo"
QT_MOC_LITERAL(37, 412, 5), // "light"
QT_MOC_LITERAL(38, 418, 4), // "dark"
QT_MOC_LITERAL(39, 423, 20), // "specConstructor_data"
QT_MOC_LITERAL(40, 444, 15), // "specConstructor"
QT_MOC_LITERAL(41, 460, 16), // "achromaticHslHue"
QT_MOC_LITERAL(42, 477, 11), // "premultiply"
QT_MOC_LITERAL(43, 489, 18), // "unpremultiply_sse4"
QT_MOC_LITERAL(44, 508, 7), // "qrgba64"
QT_MOC_LITERAL(45, 516, 19), // "qrgba64MemoryLayout"
QT_MOC_LITERAL(46, 536, 18), // "qrgba64Premultiply"
QT_MOC_LITERAL(47, 555, 18), // "qrgba64Equivalence"
QT_MOC_LITERAL(48, 574, 18), // "qcolorprofile_data"
QT_MOC_LITERAL(49, 593, 13) // "qcolorprofile"

    },
    "tst_QColor\0getSetCheck\0\0isValid_data\0"
    "isValid\0name_data\0name\0namehex_data\0"
    "namehex\0setNamedColor_data\0setNamedColor\0"
    "constructNamedColorWithSpace\0colorNames\0"
    "spec\0globalColors_data\0globalColors\0"
    "setRed\0setGreen\0setBlue\0setRgb\0setRgba\0"
    "setHsv\0setCmyk\0setHsl\0toRgb_data\0toRgb\0"
    "toRgbNonDestructive\0toHsv_data\0toHsv\0"
    "toHsvNonDestructive\0toCmyk_data\0toCmyk\0"
    "toCmykNonDestructive\0toHsl_data\0toHsl\0"
    "toHslNonDestructive\0convertTo\0light\0"
    "dark\0specConstructor_data\0specConstructor\0"
    "achromaticHslHue\0premultiply\0"
    "unpremultiply_sse4\0qrgba64\0"
    "qrgba64MemoryLayout\0qrgba64Premultiply\0"
    "qrgba64Equivalence\0qcolorprofile_data\0"
    "qcolorprofile"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QColor[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      48,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  254,    2, 0x08 /* Private */,
       3,    0,  255,    2, 0x08 /* Private */,
       4,    0,  256,    2, 0x08 /* Private */,
       5,    0,  257,    2, 0x08 /* Private */,
       6,    0,  258,    2, 0x08 /* Private */,
       7,    0,  259,    2, 0x08 /* Private */,
       8,    0,  260,    2, 0x08 /* Private */,
       9,    0,  261,    2, 0x08 /* Private */,
      10,    0,  262,    2, 0x08 /* Private */,
      11,    0,  263,    2, 0x08 /* Private */,
      12,    0,  264,    2, 0x08 /* Private */,
      13,    0,  265,    2, 0x08 /* Private */,
      14,    0,  266,    2, 0x08 /* Private */,
      15,    0,  267,    2, 0x08 /* Private */,
      16,    0,  268,    2, 0x08 /* Private */,
      17,    0,  269,    2, 0x08 /* Private */,
      18,    0,  270,    2, 0x08 /* Private */,
      19,    0,  271,    2, 0x08 /* Private */,
      20,    0,  272,    2, 0x08 /* Private */,
      21,    0,  273,    2, 0x08 /* Private */,
      22,    0,  274,    2, 0x08 /* Private */,
      23,    0,  275,    2, 0x08 /* Private */,
      24,    0,  276,    2, 0x08 /* Private */,
      25,    0,  277,    2, 0x08 /* Private */,
      26,    0,  278,    2, 0x08 /* Private */,
      27,    0,  279,    2, 0x08 /* Private */,
      28,    0,  280,    2, 0x08 /* Private */,
      29,    0,  281,    2, 0x08 /* Private */,
      30,    0,  282,    2, 0x08 /* Private */,
      31,    0,  283,    2, 0x08 /* Private */,
      32,    0,  284,    2, 0x08 /* Private */,
      33,    0,  285,    2, 0x08 /* Private */,
      34,    0,  286,    2, 0x08 /* Private */,
      35,    0,  287,    2, 0x08 /* Private */,
      36,    0,  288,    2, 0x08 /* Private */,
      37,    0,  289,    2, 0x08 /* Private */,
      38,    0,  290,    2, 0x08 /* Private */,
      39,    0,  291,    2, 0x08 /* Private */,
      40,    0,  292,    2, 0x08 /* Private */,
      41,    0,  293,    2, 0x08 /* Private */,
      42,    0,  294,    2, 0x08 /* Private */,
      43,    0,  295,    2, 0x08 /* Private */,
      44,    0,  296,    2, 0x08 /* Private */,
      45,    0,  297,    2, 0x08 /* Private */,
      46,    0,  298,    2, 0x08 /* Private */,
      47,    0,  299,    2, 0x08 /* Private */,
      48,    0,  300,    2, 0x08 /* Private */,
      49,    0,  301,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QColor::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QColor *_t = static_cast<tst_QColor *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->getSetCheck(); break;
        case 1: _t->isValid_data(); break;
        case 2: _t->isValid(); break;
        case 3: _t->name_data(); break;
        case 4: _t->name(); break;
        case 5: _t->namehex_data(); break;
        case 6: _t->namehex(); break;
        case 7: _t->setNamedColor_data(); break;
        case 8: _t->setNamedColor(); break;
        case 9: _t->constructNamedColorWithSpace(); break;
        case 10: _t->colorNames(); break;
        case 11: _t->spec(); break;
        case 12: _t->globalColors_data(); break;
        case 13: _t->globalColors(); break;
        case 14: _t->setRed(); break;
        case 15: _t->setGreen(); break;
        case 16: _t->setBlue(); break;
        case 17: _t->setRgb(); break;
        case 18: _t->setRgba(); break;
        case 19: _t->setHsv(); break;
        case 20: _t->setCmyk(); break;
        case 21: _t->setHsl(); break;
        case 22: _t->toRgb_data(); break;
        case 23: _t->toRgb(); break;
        case 24: _t->toRgbNonDestructive(); break;
        case 25: _t->toHsv_data(); break;
        case 26: _t->toHsv(); break;
        case 27: _t->toHsvNonDestructive(); break;
        case 28: _t->toCmyk_data(); break;
        case 29: _t->toCmyk(); break;
        case 30: _t->toCmykNonDestructive(); break;
        case 31: _t->toHsl_data(); break;
        case 32: _t->toHsl(); break;
        case 33: _t->toHslNonDestructive(); break;
        case 34: _t->convertTo(); break;
        case 35: _t->light(); break;
        case 36: _t->dark(); break;
        case 37: _t->specConstructor_data(); break;
        case 38: _t->specConstructor(); break;
        case 39: _t->achromaticHslHue(); break;
        case 40: _t->premultiply(); break;
        case 41: _t->unpremultiply_sse4(); break;
        case 42: _t->qrgba64(); break;
        case 43: _t->qrgba64MemoryLayout(); break;
        case 44: _t->qrgba64Premultiply(); break;
        case 45: _t->qrgba64Equivalence(); break;
        case 46: _t->qcolorprofile_data(); break;
        case 47: _t->qcolorprofile(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QColor::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QColor.data,
      qt_meta_data_tst_QColor,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QColor::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QColor::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QColor.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QColor::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 48)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 48;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 48)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 48;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
