/****************************************************************************
** Meta object code from reading C++ file 'tst_qregion.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qregion.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QRegion_t {
    QByteArrayData data[33];
    char stringdata0[478];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QRegion_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QRegion_t qt_meta_stringdata_tst_QRegion = {
    {
QT_MOC_LITERAL(0, 0, 11), // "tst_QRegion"
QT_MOC_LITERAL(1, 12, 13), // "moveSemantics"
QT_MOC_LITERAL(2, 26, 0), // ""
QT_MOC_LITERAL(3, 27, 12), // "boundingRect"
QT_MOC_LITERAL(4, 40, 8), // "rangeFor"
QT_MOC_LITERAL(5, 49, 5), // "rects"
QT_MOC_LITERAL(6, 55, 4), // "swap"
QT_MOC_LITERAL(7, 60, 8), // "setRects"
QT_MOC_LITERAL(8, 69, 13), // "ellipseRegion"
QT_MOC_LITERAL(9, 83, 13), // "polygonRegion"
QT_MOC_LITERAL(10, 97, 12), // "bitmapRegion"
QT_MOC_LITERAL(11, 110, 16), // "intersected_data"
QT_MOC_LITERAL(12, 127, 11), // "intersected"
QT_MOC_LITERAL(13, 139, 23), // "emptyPolygonRegion_data"
QT_MOC_LITERAL(14, 163, 18), // "emptyPolygonRegion"
QT_MOC_LITERAL(15, 182, 22), // "intersects_region_data"
QT_MOC_LITERAL(16, 205, 17), // "intersects_region"
QT_MOC_LITERAL(17, 223, 20), // "intersects_rect_data"
QT_MOC_LITERAL(18, 244, 15), // "intersects_rect"
QT_MOC_LITERAL(19, 260, 14), // "contains_point"
QT_MOC_LITERAL(20, 275, 18), // "operator_plus_data"
QT_MOC_LITERAL(21, 294, 13), // "operator_plus"
QT_MOC_LITERAL(22, 308, 19), // "operator_minus_data"
QT_MOC_LITERAL(23, 328, 14), // "operator_minus"
QT_MOC_LITERAL(24, 343, 23), // "operator_intersect_data"
QT_MOC_LITERAL(25, 367, 18), // "operator_intersect"
QT_MOC_LITERAL(26, 386, 17), // "operator_xor_data"
QT_MOC_LITERAL(27, 404, 12), // "operator_xor"
QT_MOC_LITERAL(28, 417, 14), // "rectCount_data"
QT_MOC_LITERAL(29, 432, 9), // "rectCount"
QT_MOC_LITERAL(30, 442, 12), // "isEmpty_data"
QT_MOC_LITERAL(31, 455, 7), // "isEmpty"
QT_MOC_LITERAL(32, 463, 14) // "regionFromPath"

    },
    "tst_QRegion\0moveSemantics\0\0boundingRect\0"
    "rangeFor\0rects\0swap\0setRects\0ellipseRegion\0"
    "polygonRegion\0bitmapRegion\0intersected_data\0"
    "intersected\0emptyPolygonRegion_data\0"
    "emptyPolygonRegion\0intersects_region_data\0"
    "intersects_region\0intersects_rect_data\0"
    "intersects_rect\0contains_point\0"
    "operator_plus_data\0operator_plus\0"
    "operator_minus_data\0operator_minus\0"
    "operator_intersect_data\0operator_intersect\0"
    "operator_xor_data\0operator_xor\0"
    "rectCount_data\0rectCount\0isEmpty_data\0"
    "isEmpty\0regionFromPath"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QRegion[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      31,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  169,    2, 0x08 /* Private */,
       3,    0,  170,    2, 0x08 /* Private */,
       4,    0,  171,    2, 0x08 /* Private */,
       5,    0,  172,    2, 0x08 /* Private */,
       6,    0,  173,    2, 0x08 /* Private */,
       7,    0,  174,    2, 0x08 /* Private */,
       8,    0,  175,    2, 0x08 /* Private */,
       9,    0,  176,    2, 0x08 /* Private */,
      10,    0,  177,    2, 0x08 /* Private */,
      11,    0,  178,    2, 0x08 /* Private */,
      12,    0,  179,    2, 0x08 /* Private */,
      13,    0,  180,    2, 0x08 /* Private */,
      14,    0,  181,    2, 0x08 /* Private */,
      15,    0,  182,    2, 0x08 /* Private */,
      16,    0,  183,    2, 0x08 /* Private */,
      17,    0,  184,    2, 0x08 /* Private */,
      18,    0,  185,    2, 0x08 /* Private */,
      19,    0,  186,    2, 0x08 /* Private */,
      20,    0,  187,    2, 0x08 /* Private */,
      21,    0,  188,    2, 0x08 /* Private */,
      22,    0,  189,    2, 0x08 /* Private */,
      23,    0,  190,    2, 0x08 /* Private */,
      24,    0,  191,    2, 0x08 /* Private */,
      25,    0,  192,    2, 0x08 /* Private */,
      26,    0,  193,    2, 0x08 /* Private */,
      27,    0,  194,    2, 0x08 /* Private */,
      28,    0,  195,    2, 0x08 /* Private */,
      29,    0,  196,    2, 0x08 /* Private */,
      30,    0,  197,    2, 0x08 /* Private */,
      31,    0,  198,    2, 0x08 /* Private */,
      32,    0,  199,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QRegion::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QRegion *_t = static_cast<tst_QRegion *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->moveSemantics(); break;
        case 1: _t->boundingRect(); break;
        case 2: _t->rangeFor(); break;
        case 3: _t->rects(); break;
        case 4: _t->swap(); break;
        case 5: _t->setRects(); break;
        case 6: _t->ellipseRegion(); break;
        case 7: _t->polygonRegion(); break;
        case 8: _t->bitmapRegion(); break;
        case 9: _t->intersected_data(); break;
        case 10: _t->intersected(); break;
        case 11: _t->emptyPolygonRegion_data(); break;
        case 12: _t->emptyPolygonRegion(); break;
        case 13: _t->intersects_region_data(); break;
        case 14: _t->intersects_region(); break;
        case 15: _t->intersects_rect_data(); break;
        case 16: _t->intersects_rect(); break;
        case 17: _t->contains_point(); break;
        case 18: _t->operator_plus_data(); break;
        case 19: _t->operator_plus(); break;
        case 20: _t->operator_minus_data(); break;
        case 21: _t->operator_minus(); break;
        case 22: _t->operator_intersect_data(); break;
        case 23: _t->operator_intersect(); break;
        case 24: _t->operator_xor_data(); break;
        case 25: _t->operator_xor(); break;
        case 26: _t->rectCount_data(); break;
        case 27: _t->rectCount(); break;
        case 28: _t->isEmpty_data(); break;
        case 29: _t->isEmpty(); break;
        case 30: _t->regionFromPath(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QRegion::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QRegion.data,
      qt_meta_data_tst_QRegion,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QRegion::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QRegion::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QRegion.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QRegion::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 31)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 31;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 31)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 31;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
