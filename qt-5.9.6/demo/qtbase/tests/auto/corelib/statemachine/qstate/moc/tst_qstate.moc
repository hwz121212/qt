/****************************************************************************
** Meta object code from reading C++ file 'tst_qstate.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qstate.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QState_t {
    QByteArrayData data[8];
    char stringdata0[123];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QState_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QState_t qt_meta_stringdata_tst_QState = {
    {
QT_MOC_LITERAL(0, 0, 10), // "tst_QState"
QT_MOC_LITERAL(1, 11, 14), // "assignProperty"
QT_MOC_LITERAL(2, 26, 0), // ""
QT_MOC_LITERAL(3, 27, 19), // "assignPropertyTwice"
QT_MOC_LITERAL(4, 47, 19), // "historyInitialState"
QT_MOC_LITERAL(5, 67, 11), // "transitions"
QT_MOC_LITERAL(6, 79, 14), // "privateSignals"
QT_MOC_LITERAL(7, 94, 28) // "parallelStateAndInitialState"

    },
    "tst_QState\0assignProperty\0\0"
    "assignPropertyTwice\0historyInitialState\0"
    "transitions\0privateSignals\0"
    "parallelStateAndInitialState"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QState[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       6,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   44,    2, 0x08 /* Private */,
       3,    0,   45,    2, 0x08 /* Private */,
       4,    0,   46,    2, 0x08 /* Private */,
       5,    0,   47,    2, 0x08 /* Private */,
       6,    0,   48,    2, 0x08 /* Private */,
       7,    0,   49,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QState::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QState *_t = static_cast<tst_QState *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->assignProperty(); break;
        case 1: _t->assignPropertyTwice(); break;
        case 2: _t->historyInitialState(); break;
        case 3: _t->transitions(); break;
        case 4: _t->privateSignals(); break;
        case 5: _t->parallelStateAndInitialState(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QState::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QState.data,
      qt_meta_data_tst_QState,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QState::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QState::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QState.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QState::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 6)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 6;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 6)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 6;
    }
    return _id;
}
struct qt_meta_stringdata_TestClass_t {
    QByteArrayData data[3];
    char stringdata0[16];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestClass_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestClass_t qt_meta_stringdata_TestClass = {
    {
QT_MOC_LITERAL(0, 0, 9), // "TestClass"
QT_MOC_LITERAL(1, 10, 4), // "slot"
QT_MOC_LITERAL(2, 15, 0) // ""

    },
    "TestClass\0slot\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestClass[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void TestClass::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestClass *_t = static_cast<TestClass *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->slot(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject TestClass::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestClass.data,
      qt_meta_data_TestClass,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestClass::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestClass::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestClass.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestClass::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_MyState_t {
    QByteArrayData data[1];
    char stringdata0[8];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_MyState_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_MyState_t qt_meta_stringdata_MyState = {
    {
QT_MOC_LITERAL(0, 0, 7) // "MyState"

    },
    "MyState"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_MyState[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void MyState::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject MyState::staticMetaObject = {
    { &QState::staticMetaObject, qt_meta_stringdata_MyState.data,
      qt_meta_data_MyState,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *MyState::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *MyState::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_MyState.stringdata0))
        return static_cast<void*>(this);
    return QState::qt_metacast(_clname);
}

int MyState::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QState::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_MyTransition_t {
    QByteArrayData data[1];
    char stringdata0[13];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_MyTransition_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_MyTransition_t qt_meta_stringdata_MyTransition = {
    {
QT_MOC_LITERAL(0, 0, 12) // "MyTransition"

    },
    "MyTransition"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_MyTransition[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void MyTransition::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject MyTransition::staticMetaObject = {
    { &QSignalTransition::staticMetaObject, qt_meta_stringdata_MyTransition.data,
      qt_meta_data_MyTransition,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *MyTransition::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *MyTransition::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_MyTransition.stringdata0))
        return static_cast<void*>(this);
    return QSignalTransition::qt_metacast(_clname);
}

int MyTransition::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QSignalTransition::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_SignalConnectionTester_t {
    QByteArrayData data[3];
    char stringdata0[33];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_SignalConnectionTester_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_SignalConnectionTester_t qt_meta_stringdata_SignalConnectionTester = {
    {
QT_MOC_LITERAL(0, 0, 22), // "SignalConnectionTester"
QT_MOC_LITERAL(1, 23, 8), // "testSlot"
QT_MOC_LITERAL(2, 32, 0) // ""

    },
    "SignalConnectionTester\0testSlot\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_SignalConnectionTester[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void SignalConnectionTester::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        SignalConnectionTester *_t = static_cast<SignalConnectionTester *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->testSlot(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject SignalConnectionTester::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_SignalConnectionTester.data,
      qt_meta_data_SignalConnectionTester,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *SignalConnectionTester::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *SignalConnectionTester::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_SignalConnectionTester.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int SignalConnectionTester::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_TestTrigger_t {
    QByteArrayData data[3];
    char stringdata0[21];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestTrigger_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestTrigger_t qt_meta_stringdata_TestTrigger = {
    {
QT_MOC_LITERAL(0, 0, 11), // "TestTrigger"
QT_MOC_LITERAL(1, 12, 7), // "trigger"
QT_MOC_LITERAL(2, 20, 0) // ""

    },
    "TestTrigger\0trigger\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestTrigger[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x06 /* Public */,

 // signals: parameters
    QMetaType::Void,

       0        // eod
};

void TestTrigger::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestTrigger *_t = static_cast<TestTrigger *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->trigger(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (TestTrigger::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&TestTrigger::trigger)) {
                *result = 0;
                return;
            }
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject TestTrigger::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestTrigger.data,
      qt_meta_data_TestTrigger,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestTrigger::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestTrigger::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestTrigger.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestTrigger::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}

// SIGNAL 0
void TestTrigger::trigger()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
