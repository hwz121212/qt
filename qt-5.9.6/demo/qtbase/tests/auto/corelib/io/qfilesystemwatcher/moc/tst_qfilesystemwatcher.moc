/****************************************************************************
** Meta object code from reading C++ file 'tst_qfilesystemwatcher.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qfilesystemwatcher.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QFileSystemWatcher_t {
    QByteArrayData data[20];
    char stringdata0[354];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QFileSystemWatcher_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QFileSystemWatcher_t qt_meta_stringdata_tst_QFileSystemWatcher = {
    {
QT_MOC_LITERAL(0, 0, 22), // "tst_QFileSystemWatcher"
QT_MOC_LITERAL(1, 23, 14), // "basicTest_data"
QT_MOC_LITERAL(2, 38, 0), // ""
QT_MOC_LITERAL(3, 39, 9), // "basicTest"
QT_MOC_LITERAL(4, 49, 19), // "watchDirectory_data"
QT_MOC_LITERAL(5, 69, 14), // "watchDirectory"
QT_MOC_LITERAL(6, 84, 7), // "addPath"
QT_MOC_LITERAL(7, 92, 10), // "removePath"
QT_MOC_LITERAL(8, 103, 8), // "addPaths"
QT_MOC_LITERAL(9, 112, 11), // "removePaths"
QT_MOC_LITERAL(10, 124, 31), // "removePathsFilesInSameDirectory"
QT_MOC_LITERAL(11, 156, 29), // "watchFileAndItsDirectory_data"
QT_MOC_LITERAL(12, 186, 24), // "watchFileAndItsDirectory"
QT_MOC_LITERAL(13, 211, 15), // "nonExistingFile"
QT_MOC_LITERAL(14, 227, 20), // "removeFileAndUnWatch"
QT_MOC_LITERAL(15, 248, 28), // "destroyAfterQCoreApplication"
QT_MOC_LITERAL(16, 277, 9), // "QTBUG2331"
QT_MOC_LITERAL(17, 287, 14), // "QTBUG2331_data"
QT_MOC_LITERAL(18, 302, 28), // "signalsEmittedAfterFileMoved"
QT_MOC_LITERAL(19, 331, 22) // "watchUnicodeCharacters"

    },
    "tst_QFileSystemWatcher\0basicTest_data\0"
    "\0basicTest\0watchDirectory_data\0"
    "watchDirectory\0addPath\0removePath\0"
    "addPaths\0removePaths\0"
    "removePathsFilesInSameDirectory\0"
    "watchFileAndItsDirectory_data\0"
    "watchFileAndItsDirectory\0nonExistingFile\0"
    "removeFileAndUnWatch\0destroyAfterQCoreApplication\0"
    "QTBUG2331\0QTBUG2331_data\0"
    "signalsEmittedAfterFileMoved\0"
    "watchUnicodeCharacters"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QFileSystemWatcher[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      18,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  104,    2, 0x08 /* Private */,
       3,    0,  105,    2, 0x08 /* Private */,
       4,    0,  106,    2, 0x08 /* Private */,
       5,    0,  107,    2, 0x08 /* Private */,
       6,    0,  108,    2, 0x08 /* Private */,
       7,    0,  109,    2, 0x08 /* Private */,
       8,    0,  110,    2, 0x08 /* Private */,
       9,    0,  111,    2, 0x08 /* Private */,
      10,    0,  112,    2, 0x08 /* Private */,
      11,    0,  113,    2, 0x08 /* Private */,
      12,    0,  114,    2, 0x08 /* Private */,
      13,    0,  115,    2, 0x08 /* Private */,
      14,    0,  116,    2, 0x08 /* Private */,
      15,    0,  117,    2, 0x08 /* Private */,
      16,    0,  118,    2, 0x08 /* Private */,
      17,    0,  119,    2, 0x08 /* Private */,
      18,    0,  120,    2, 0x08 /* Private */,
      19,    0,  121,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QFileSystemWatcher::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QFileSystemWatcher *_t = static_cast<tst_QFileSystemWatcher *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->basicTest_data(); break;
        case 1: _t->basicTest(); break;
        case 2: _t->watchDirectory_data(); break;
        case 3: _t->watchDirectory(); break;
        case 4: _t->addPath(); break;
        case 5: _t->removePath(); break;
        case 6: _t->addPaths(); break;
        case 7: _t->removePaths(); break;
        case 8: _t->removePathsFilesInSameDirectory(); break;
        case 9: _t->watchFileAndItsDirectory_data(); break;
        case 10: _t->watchFileAndItsDirectory(); break;
        case 11: _t->nonExistingFile(); break;
        case 12: _t->removeFileAndUnWatch(); break;
        case 13: _t->destroyAfterQCoreApplication(); break;
        case 14: _t->QTBUG2331(); break;
        case 15: _t->QTBUG2331_data(); break;
        case 16: _t->signalsEmittedAfterFileMoved(); break;
        case 17: _t->watchUnicodeCharacters(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QFileSystemWatcher::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QFileSystemWatcher.data,
      qt_meta_data_tst_QFileSystemWatcher,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QFileSystemWatcher::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QFileSystemWatcher::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QFileSystemWatcher.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QFileSystemWatcher::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 18)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 18;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 18)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 18;
    }
    return _id;
}
struct qt_meta_stringdata_FileSystemWatcherSpy_t {
    QByteArrayData data[4];
    char stringdata0[32];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_FileSystemWatcherSpy_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_FileSystemWatcherSpy_t qt_meta_stringdata_FileSystemWatcherSpy = {
    {
QT_MOC_LITERAL(0, 0, 20), // "FileSystemWatcherSpy"
QT_MOC_LITERAL(1, 21, 7), // "spySlot"
QT_MOC_LITERAL(2, 29, 0), // ""
QT_MOC_LITERAL(3, 30, 1) // "p"

    },
    "FileSystemWatcherSpy\0spySlot\0\0p"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_FileSystemWatcherSpy[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    1,   19,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void, QMetaType::QString,    3,

       0        // eod
};

void FileSystemWatcherSpy::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        FileSystemWatcherSpy *_t = static_cast<FileSystemWatcherSpy *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->spySlot((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObject FileSystemWatcherSpy::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_FileSystemWatcherSpy.data,
      qt_meta_data_FileSystemWatcherSpy,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *FileSystemWatcherSpy::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *FileSystemWatcherSpy::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_FileSystemWatcherSpy.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int FileSystemWatcherSpy::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_SignalReceiver_t {
    QByteArrayData data[4];
    char stringdata0[33];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_SignalReceiver_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_SignalReceiver_t qt_meta_stringdata_SignalReceiver = {
    {
QT_MOC_LITERAL(0, 0, 14), // "SignalReceiver"
QT_MOC_LITERAL(1, 15, 11), // "fileChanged"
QT_MOC_LITERAL(2, 27, 0), // ""
QT_MOC_LITERAL(3, 28, 4) // "path"

    },
    "SignalReceiver\0fileChanged\0\0path"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_SignalReceiver[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    1,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void, QMetaType::QString,    3,

       0        // eod
};

void SignalReceiver::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        SignalReceiver *_t = static_cast<SignalReceiver *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->fileChanged((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObject SignalReceiver::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_SignalReceiver.data,
      qt_meta_data_SignalReceiver,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *SignalReceiver::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *SignalReceiver::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_SignalReceiver.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int SignalReceiver::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
