/****************************************************************************
** Meta object code from reading C++ file 'tst_quuid.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_quuid.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QUuid_t {
    QByteArrayData data[27];
    char stringdata0[282];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QUuid_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QUuid_t qt_meta_stringdata_tst_QUuid = {
    {
QT_MOC_LITERAL(0, 0, 9), // "tst_QUuid"
QT_MOC_LITERAL(1, 10, 12), // "initTestCase"
QT_MOC_LITERAL(2, 23, 0), // ""
QT_MOC_LITERAL(3, 24, 8), // "fromChar"
QT_MOC_LITERAL(4, 33, 8), // "toString"
QT_MOC_LITERAL(5, 42, 10), // "fromString"
QT_MOC_LITERAL(6, 53, 11), // "toByteArray"
QT_MOC_LITERAL(7, 65, 13), // "fromByteArray"
QT_MOC_LITERAL(8, 79, 9), // "toRfc4122"
QT_MOC_LITERAL(9, 89, 11), // "fromRfc4122"
QT_MOC_LITERAL(10, 101, 16), // "createUuidV3OrV5"
QT_MOC_LITERAL(11, 118, 17), // "check_QDataStream"
QT_MOC_LITERAL(12, 136, 6), // "isNull"
QT_MOC_LITERAL(13, 143, 5), // "equal"
QT_MOC_LITERAL(14, 149, 8), // "notEqual"
QT_MOC_LITERAL(15, 158, 5), // "cpp11"
QT_MOC_LITERAL(16, 164, 8), // "generate"
QT_MOC_LITERAL(17, 173, 4), // "less"
QT_MOC_LITERAL(18, 178, 4), // "more"
QT_MOC_LITERAL(19, 183, 8), // "variants"
QT_MOC_LITERAL(20, 192, 8), // "versions"
QT_MOC_LITERAL(21, 201, 16), // "threadUniqueness"
QT_MOC_LITERAL(22, 218, 17), // "processUniqueness"
QT_MOC_LITERAL(23, 236, 4), // "hash"
QT_MOC_LITERAL(24, 241, 8), // "qvariant"
QT_MOC_LITERAL(25, 250, 19), // "qvariant_conversion"
QT_MOC_LITERAL(26, 270, 11) // "darwinTypes"

    },
    "tst_QUuid\0initTestCase\0\0fromChar\0"
    "toString\0fromString\0toByteArray\0"
    "fromByteArray\0toRfc4122\0fromRfc4122\0"
    "createUuidV3OrV5\0check_QDataStream\0"
    "isNull\0equal\0notEqual\0cpp11\0generate\0"
    "less\0more\0variants\0versions\0"
    "threadUniqueness\0processUniqueness\0"
    "hash\0qvariant\0qvariant_conversion\0"
    "darwinTypes"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QUuid[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      25,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  139,    2, 0x08 /* Private */,
       3,    0,  140,    2, 0x08 /* Private */,
       4,    0,  141,    2, 0x08 /* Private */,
       5,    0,  142,    2, 0x08 /* Private */,
       6,    0,  143,    2, 0x08 /* Private */,
       7,    0,  144,    2, 0x08 /* Private */,
       8,    0,  145,    2, 0x08 /* Private */,
       9,    0,  146,    2, 0x08 /* Private */,
      10,    0,  147,    2, 0x08 /* Private */,
      11,    0,  148,    2, 0x08 /* Private */,
      12,    0,  149,    2, 0x08 /* Private */,
      13,    0,  150,    2, 0x08 /* Private */,
      14,    0,  151,    2, 0x08 /* Private */,
      15,    0,  152,    2, 0x08 /* Private */,
      16,    0,  153,    2, 0x08 /* Private */,
      17,    0,  154,    2, 0x08 /* Private */,
      18,    0,  155,    2, 0x08 /* Private */,
      19,    0,  156,    2, 0x08 /* Private */,
      20,    0,  157,    2, 0x08 /* Private */,
      21,    0,  158,    2, 0x08 /* Private */,
      22,    0,  159,    2, 0x08 /* Private */,
      23,    0,  160,    2, 0x08 /* Private */,
      24,    0,  161,    2, 0x08 /* Private */,
      25,    0,  162,    2, 0x08 /* Private */,
      26,    0,  163,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QUuid::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QUuid *_t = static_cast<tst_QUuid *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->fromChar(); break;
        case 2: _t->toString(); break;
        case 3: _t->fromString(); break;
        case 4: _t->toByteArray(); break;
        case 5: _t->fromByteArray(); break;
        case 6: _t->toRfc4122(); break;
        case 7: _t->fromRfc4122(); break;
        case 8: _t->createUuidV3OrV5(); break;
        case 9: _t->check_QDataStream(); break;
        case 10: _t->isNull(); break;
        case 11: _t->equal(); break;
        case 12: _t->notEqual(); break;
        case 13: _t->cpp11(); break;
        case 14: _t->generate(); break;
        case 15: _t->less(); break;
        case 16: _t->more(); break;
        case 17: _t->variants(); break;
        case 18: _t->versions(); break;
        case 19: _t->threadUniqueness(); break;
        case 20: _t->processUniqueness(); break;
        case 21: _t->hash(); break;
        case 22: _t->qvariant(); break;
        case 23: _t->qvariant_conversion(); break;
        case 24: _t->darwinTypes(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QUuid::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QUuid.data,
      qt_meta_data_tst_QUuid,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QUuid::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QUuid::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QUuid.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QUuid::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 25)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 25;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 25)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 25;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
