/****************************************************************************
** Meta object code from reading C++ file 'tst_qthread.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qthread.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QThread_t {
    QByteArrayData data[42];
    char stringdata0[632];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QThread_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QThread_t qt_meta_stringdata_tst_QThread = {
    {
QT_MOC_LITERAL(0, 0, 11), // "tst_QThread"
QT_MOC_LITERAL(1, 12, 15), // "currentThreadId"
QT_MOC_LITERAL(2, 28, 0), // ""
QT_MOC_LITERAL(3, 29, 13), // "currentThread"
QT_MOC_LITERAL(4, 43, 16), // "idealThreadCount"
QT_MOC_LITERAL(5, 60, 10), // "isFinished"
QT_MOC_LITERAL(6, 71, 9), // "isRunning"
QT_MOC_LITERAL(7, 81, 11), // "setPriority"
QT_MOC_LITERAL(8, 93, 12), // "setStackSize"
QT_MOC_LITERAL(9, 106, 4), // "exit"
QT_MOC_LITERAL(10, 111, 5), // "start"
QT_MOC_LITERAL(11, 117, 9), // "terminate"
QT_MOC_LITERAL(12, 127, 4), // "quit"
QT_MOC_LITERAL(13, 132, 7), // "started"
QT_MOC_LITERAL(14, 140, 8), // "finished"
QT_MOC_LITERAL(15, 149, 10), // "terminated"
QT_MOC_LITERAL(16, 160, 4), // "exec"
QT_MOC_LITERAL(17, 165, 5), // "sleep"
QT_MOC_LITERAL(18, 171, 6), // "msleep"
QT_MOC_LITERAL(19, 178, 6), // "usleep"
QT_MOC_LITERAL(20, 185, 20), // "nativeThreadAdoption"
QT_MOC_LITERAL(21, 206, 21), // "adoptedThreadAffinity"
QT_MOC_LITERAL(22, 228, 24), // "adoptedThreadSetPriority"
QT_MOC_LITERAL(23, 253, 17), // "adoptedThreadExit"
QT_MOC_LITERAL(24, 271, 17), // "adoptedThreadExec"
QT_MOC_LITERAL(25, 289, 21), // "adoptedThreadFinished"
QT_MOC_LITERAL(26, 311, 25), // "adoptedThreadExecFinished"
QT_MOC_LITERAL(27, 337, 20), // "adoptMultipleThreads"
QT_MOC_LITERAL(28, 358, 27), // "adoptMultipleThreadsOverlap"
QT_MOC_LITERAL(29, 386, 12), // "exitAndStart"
QT_MOC_LITERAL(30, 399, 11), // "exitAndExec"
QT_MOC_LITERAL(31, 411, 50), // "connectThreadFinishedSignalTo..."
QT_MOC_LITERAL(32, 462, 5), // "wait2"
QT_MOC_LITERAL(33, 468, 20), // "wait3_slowDestructor"
QT_MOC_LITERAL(34, 489, 17), // "destroyFinishRace"
QT_MOC_LITERAL(35, 507, 15), // "startFinishRace"
QT_MOC_LITERAL(36, 523, 27), // "startAndQuitCustomEventLoop"
QT_MOC_LITERAL(37, 551, 19), // "isRunningInFinished"
QT_MOC_LITERAL(38, 571, 21), // "customEventDispatcher"
QT_MOC_LITERAL(39, 593, 18), // "requestTermination"
QT_MOC_LITERAL(40, 612, 10), // "stressTest"
QT_MOC_LITERAL(41, 623, 8) // "quitLock"

    },
    "tst_QThread\0currentThreadId\0\0currentThread\0"
    "idealThreadCount\0isFinished\0isRunning\0"
    "setPriority\0setStackSize\0exit\0start\0"
    "terminate\0quit\0started\0finished\0"
    "terminated\0exec\0sleep\0msleep\0usleep\0"
    "nativeThreadAdoption\0adoptedThreadAffinity\0"
    "adoptedThreadSetPriority\0adoptedThreadExit\0"
    "adoptedThreadExec\0adoptedThreadFinished\0"
    "adoptedThreadExecFinished\0"
    "adoptMultipleThreads\0adoptMultipleThreadsOverlap\0"
    "exitAndStart\0exitAndExec\0"
    "connectThreadFinishedSignalToObjectDeleteLaterSlot\0"
    "wait2\0wait3_slowDestructor\0destroyFinishRace\0"
    "startFinishRace\0startAndQuitCustomEventLoop\0"
    "isRunningInFinished\0customEventDispatcher\0"
    "requestTermination\0stressTest\0quitLock"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QThread[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      40,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  214,    2, 0x08 /* Private */,
       3,    0,  215,    2, 0x08 /* Private */,
       4,    0,  216,    2, 0x08 /* Private */,
       5,    0,  217,    2, 0x08 /* Private */,
       6,    0,  218,    2, 0x08 /* Private */,
       7,    0,  219,    2, 0x08 /* Private */,
       8,    0,  220,    2, 0x08 /* Private */,
       9,    0,  221,    2, 0x08 /* Private */,
      10,    0,  222,    2, 0x08 /* Private */,
      11,    0,  223,    2, 0x08 /* Private */,
      12,    0,  224,    2, 0x08 /* Private */,
      13,    0,  225,    2, 0x08 /* Private */,
      14,    0,  226,    2, 0x08 /* Private */,
      15,    0,  227,    2, 0x08 /* Private */,
      16,    0,  228,    2, 0x08 /* Private */,
      17,    0,  229,    2, 0x08 /* Private */,
      18,    0,  230,    2, 0x08 /* Private */,
      19,    0,  231,    2, 0x08 /* Private */,
      20,    0,  232,    2, 0x08 /* Private */,
      21,    0,  233,    2, 0x08 /* Private */,
      22,    0,  234,    2, 0x08 /* Private */,
      23,    0,  235,    2, 0x08 /* Private */,
      24,    0,  236,    2, 0x08 /* Private */,
      25,    0,  237,    2, 0x08 /* Private */,
      26,    0,  238,    2, 0x08 /* Private */,
      27,    0,  239,    2, 0x08 /* Private */,
      28,    0,  240,    2, 0x08 /* Private */,
      29,    0,  241,    2, 0x08 /* Private */,
      30,    0,  242,    2, 0x08 /* Private */,
      31,    0,  243,    2, 0x08 /* Private */,
      32,    0,  244,    2, 0x08 /* Private */,
      33,    0,  245,    2, 0x08 /* Private */,
      34,    0,  246,    2, 0x08 /* Private */,
      35,    0,  247,    2, 0x08 /* Private */,
      36,    0,  248,    2, 0x08 /* Private */,
      37,    0,  249,    2, 0x08 /* Private */,
      38,    0,  250,    2, 0x08 /* Private */,
      39,    0,  251,    2, 0x08 /* Private */,
      40,    0,  252,    2, 0x08 /* Private */,
      41,    0,  253,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QThread::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QThread *_t = static_cast<tst_QThread *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->currentThreadId(); break;
        case 1: _t->currentThread(); break;
        case 2: _t->idealThreadCount(); break;
        case 3: _t->isFinished(); break;
        case 4: _t->isRunning(); break;
        case 5: _t->setPriority(); break;
        case 6: _t->setStackSize(); break;
        case 7: _t->exit(); break;
        case 8: _t->start(); break;
        case 9: _t->terminate(); break;
        case 10: _t->quit(); break;
        case 11: _t->started(); break;
        case 12: _t->finished(); break;
        case 13: _t->terminated(); break;
        case 14: _t->exec(); break;
        case 15: _t->sleep(); break;
        case 16: _t->msleep(); break;
        case 17: _t->usleep(); break;
        case 18: _t->nativeThreadAdoption(); break;
        case 19: _t->adoptedThreadAffinity(); break;
        case 20: _t->adoptedThreadSetPriority(); break;
        case 21: _t->adoptedThreadExit(); break;
        case 22: _t->adoptedThreadExec(); break;
        case 23: _t->adoptedThreadFinished(); break;
        case 24: _t->adoptedThreadExecFinished(); break;
        case 25: _t->adoptMultipleThreads(); break;
        case 26: _t->adoptMultipleThreadsOverlap(); break;
        case 27: _t->exitAndStart(); break;
        case 28: _t->exitAndExec(); break;
        case 29: _t->connectThreadFinishedSignalToObjectDeleteLaterSlot(); break;
        case 30: _t->wait2(); break;
        case 31: _t->wait3_slowDestructor(); break;
        case 32: _t->destroyFinishRace(); break;
        case 33: _t->startFinishRace(); break;
        case 34: _t->startAndQuitCustomEventLoop(); break;
        case 35: _t->isRunningInFinished(); break;
        case 36: _t->customEventDispatcher(); break;
        case 37: _t->requestTermination(); break;
        case 38: _t->stressTest(); break;
        case 39: _t->quitLock(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QThread::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QThread.data,
      qt_meta_data_tst_QThread,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QThread::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QThread::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QThread.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QThread::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 40)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 40;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 40)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 40;
    }
    return _id;
}
struct qt_meta_stringdata_SignalRecorder_t {
    QByteArrayData data[3];
    char stringdata0[21];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_SignalRecorder_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_SignalRecorder_t qt_meta_stringdata_SignalRecorder = {
    {
QT_MOC_LITERAL(0, 0, 14), // "SignalRecorder"
QT_MOC_LITERAL(1, 15, 4), // "slot"
QT_MOC_LITERAL(2, 20, 0) // ""

    },
    "SignalRecorder\0slot\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_SignalRecorder[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void SignalRecorder::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        SignalRecorder *_t = static_cast<SignalRecorder *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->slot(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject SignalRecorder::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_SignalRecorder.data,
      qt_meta_data_SignalRecorder,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *SignalRecorder::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *SignalRecorder::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_SignalRecorder.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int SignalRecorder::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_Exit_Object_t {
    QByteArrayData data[3];
    char stringdata0[18];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_Exit_Object_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_Exit_Object_t qt_meta_stringdata_Exit_Object = {
    {
QT_MOC_LITERAL(0, 0, 11), // "Exit_Object"
QT_MOC_LITERAL(1, 12, 4), // "slot"
QT_MOC_LITERAL(2, 17, 0) // ""

    },
    "Exit_Object\0slot\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_Exit_Object[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void Exit_Object::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Exit_Object *_t = static_cast<Exit_Object *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->slot(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject Exit_Object::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_Exit_Object.data,
      qt_meta_data_Exit_Object,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *Exit_Object::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *Exit_Object::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_Exit_Object.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int Exit_Object::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_Quit_Object_t {
    QByteArrayData data[3];
    char stringdata0[18];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_Quit_Object_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_Quit_Object_t qt_meta_stringdata_Quit_Object = {
    {
QT_MOC_LITERAL(0, 0, 11), // "Quit_Object"
QT_MOC_LITERAL(1, 12, 4), // "slot"
QT_MOC_LITERAL(2, 17, 0) // ""

    },
    "Quit_Object\0slot\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_Quit_Object[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void Quit_Object::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Quit_Object *_t = static_cast<Quit_Object *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->slot(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject Quit_Object::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_Quit_Object.data,
      qt_meta_data_Quit_Object,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *Quit_Object::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *Quit_Object::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_Quit_Object.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int Quit_Object::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_Syncronizer_t {
    QByteArrayData data[5];
    char stringdata0[35];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_Syncronizer_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_Syncronizer_t qt_meta_stringdata_Syncronizer = {
    {
QT_MOC_LITERAL(0, 0, 11), // "Syncronizer"
QT_MOC_LITERAL(1, 12, 11), // "propChanged"
QT_MOC_LITERAL(2, 24, 0), // ""
QT_MOC_LITERAL(3, 25, 7), // "setProp"
QT_MOC_LITERAL(4, 33, 1) // "p"

    },
    "Syncronizer\0propChanged\0\0setProp\0p"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_Syncronizer[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   24,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       3,    1,   27,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::Int,    2,

 // slots: parameters
    QMetaType::Void, QMetaType::Int,    4,

       0        // eod
};

void Syncronizer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Syncronizer *_t = static_cast<Syncronizer *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->propChanged((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 1: _t->setProp((*reinterpret_cast< int(*)>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (Syncronizer::*_t)(int );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&Syncronizer::propChanged)) {
                *result = 0;
                return;
            }
        }
    }
}

const QMetaObject Syncronizer::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_Syncronizer.data,
      qt_meta_data_Syncronizer,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *Syncronizer::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *Syncronizer::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_Syncronizer.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int Syncronizer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 2;
    }
    return _id;
}

// SIGNAL 0
void Syncronizer::propChanged(int _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}
struct qt_meta_stringdata_SlowSlotObject_t {
    QByteArrayData data[3];
    char stringdata0[25];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_SlowSlotObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_SlowSlotObject_t qt_meta_stringdata_SlowSlotObject = {
    {
QT_MOC_LITERAL(0, 0, 14), // "SlowSlotObject"
QT_MOC_LITERAL(1, 15, 8), // "slowSlot"
QT_MOC_LITERAL(2, 24, 0) // ""

    },
    "SlowSlotObject\0slowSlot\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_SlowSlotObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void SlowSlotObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        SlowSlotObject *_t = static_cast<SlowSlotObject *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->slowSlot(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject SlowSlotObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_SlowSlotObject.data,
      qt_meta_data_SlowSlotObject,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *SlowSlotObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *SlowSlotObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_SlowSlotObject.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int SlowSlotObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_FinishedTestObject_t {
    QByteArrayData data[3];
    char stringdata0[33];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_FinishedTestObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_FinishedTestObject_t qt_meta_stringdata_FinishedTestObject = {
    {
QT_MOC_LITERAL(0, 0, 18), // "FinishedTestObject"
QT_MOC_LITERAL(1, 19, 12), // "slotFinished"
QT_MOC_LITERAL(2, 32, 0) // ""

    },
    "FinishedTestObject\0slotFinished\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_FinishedTestObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void FinishedTestObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        FinishedTestObject *_t = static_cast<FinishedTestObject *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->slotFinished(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject FinishedTestObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_FinishedTestObject.data,
      qt_meta_data_FinishedTestObject,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *FinishedTestObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *FinishedTestObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_FinishedTestObject.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int FinishedTestObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_ThreadObj_t {
    QByteArrayData data[4];
    char stringdata0[25];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ThreadObj_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ThreadObj_t qt_meta_stringdata_ThreadObj = {
    {
QT_MOC_LITERAL(0, 0, 9), // "ThreadObj"
QT_MOC_LITERAL(1, 10, 7), // "visited"
QT_MOC_LITERAL(2, 18, 0), // ""
QT_MOC_LITERAL(3, 19, 5) // "visit"

    },
    "ThreadObj\0visited\0\0visit"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ThreadObj[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   24,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       3,    0,   25,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void ThreadObj::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        ThreadObj *_t = static_cast<ThreadObj *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->visited(); break;
        case 1: _t->visit(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (ThreadObj::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&ThreadObj::visited)) {
                *result = 0;
                return;
            }
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject ThreadObj::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_ThreadObj.data,
      qt_meta_data_ThreadObj,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *ThreadObj::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ThreadObj::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ThreadObj.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int ThreadObj::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 2;
    }
    return _id;
}

// SIGNAL 0
void ThreadObj::visited()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}
struct qt_meta_stringdata_Job_t {
    QByteArrayData data[3];
    char stringdata0[16];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_Job_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_Job_t qt_meta_stringdata_Job = {
    {
QT_MOC_LITERAL(0, 0, 3), // "Job"
QT_MOC_LITERAL(1, 4, 10), // "exitThread"
QT_MOC_LITERAL(2, 15, 0) // ""

    },
    "Job\0exitThread\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_Job[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void Job::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Job *_t = static_cast<Job *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->exitThread(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject Job::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_Job.data,
      qt_meta_data_Job,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *Job::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *Job::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_Job.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int Job::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_StopableJob_t {
    QByteArrayData data[4];
    char stringdata0[26];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_StopableJob_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_StopableJob_t qt_meta_stringdata_StopableJob = {
    {
QT_MOC_LITERAL(0, 0, 11), // "StopableJob"
QT_MOC_LITERAL(1, 12, 8), // "finished"
QT_MOC_LITERAL(2, 21, 0), // ""
QT_MOC_LITERAL(3, 22, 3) // "run"

    },
    "StopableJob\0finished\0\0run"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_StopableJob[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   24,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       3,    0,   25,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void StopableJob::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        StopableJob *_t = static_cast<StopableJob *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->finished(); break;
        case 1: _t->run(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (StopableJob::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&StopableJob::finished)) {
                *result = 0;
                return;
            }
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject StopableJob::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_StopableJob.data,
      qt_meta_data_StopableJob,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *StopableJob::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *StopableJob::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_StopableJob.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int StopableJob::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 2;
    }
    return _id;
}

// SIGNAL 0
void StopableJob::finished()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
