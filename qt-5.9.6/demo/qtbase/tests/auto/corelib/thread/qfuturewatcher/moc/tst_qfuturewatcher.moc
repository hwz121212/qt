/****************************************************************************
** Meta object code from reading C++ file 'tst_qfuturewatcher.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qfuturewatcher.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QFutureWatcher_t {
    QByteArrayData data[24];
    char stringdata0[364];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QFutureWatcher_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QFutureWatcher_t qt_meta_stringdata_tst_QFutureWatcher = {
    {
QT_MOC_LITERAL(0, 0, 18), // "tst_QFutureWatcher"
QT_MOC_LITERAL(1, 19, 11), // "startFinish"
QT_MOC_LITERAL(2, 31, 0), // ""
QT_MOC_LITERAL(3, 32, 20), // "progressValueChanged"
QT_MOC_LITERAL(4, 53, 8), // "canceled"
QT_MOC_LITERAL(5, 62, 8), // "resultAt"
QT_MOC_LITERAL(6, 71, 13), // "resultReadyAt"
QT_MOC_LITERAL(7, 85, 13), // "futureSignals"
QT_MOC_LITERAL(8, 99, 19), // "watchFinishedFuture"
QT_MOC_LITERAL(9, 119, 19), // "watchCanceledFuture"
QT_MOC_LITERAL(10, 139, 23), // "disconnectRunningFuture"
QT_MOC_LITERAL(11, 163, 15), // "tooMuchProgress"
QT_MOC_LITERAL(12, 179, 12), // "progressText"
QT_MOC_LITERAL(13, 192, 21), // "sharedFutureInterface"
QT_MOC_LITERAL(14, 214, 12), // "changeFuture"
QT_MOC_LITERAL(15, 227, 12), // "cancelEvents"
QT_MOC_LITERAL(16, 240, 11), // "pauseEvents"
QT_MOC_LITERAL(17, 252, 13), // "finishedState"
QT_MOC_LITERAL(18, 266, 10), // "throttling"
QT_MOC_LITERAL(19, 277, 21), // "incrementalMapResults"
QT_MOC_LITERAL(20, 299, 24), // "incrementalFilterResults"
QT_MOC_LITERAL(21, 324, 19), // "qfutureSynchronizer"
QT_MOC_LITERAL(22, 344, 8), // "warnRace"
QT_MOC_LITERAL(23, 353, 10) // "matchFlags"

    },
    "tst_QFutureWatcher\0startFinish\0\0"
    "progressValueChanged\0canceled\0resultAt\0"
    "resultReadyAt\0futureSignals\0"
    "watchFinishedFuture\0watchCanceledFuture\0"
    "disconnectRunningFuture\0tooMuchProgress\0"
    "progressText\0sharedFutureInterface\0"
    "changeFuture\0cancelEvents\0pauseEvents\0"
    "finishedState\0throttling\0incrementalMapResults\0"
    "incrementalFilterResults\0qfutureSynchronizer\0"
    "warnRace\0matchFlags"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QFutureWatcher[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      22,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  124,    2, 0x08 /* Private */,
       3,    0,  125,    2, 0x08 /* Private */,
       4,    0,  126,    2, 0x08 /* Private */,
       5,    0,  127,    2, 0x08 /* Private */,
       6,    0,  128,    2, 0x08 /* Private */,
       7,    0,  129,    2, 0x08 /* Private */,
       8,    0,  130,    2, 0x08 /* Private */,
       9,    0,  131,    2, 0x08 /* Private */,
      10,    0,  132,    2, 0x08 /* Private */,
      11,    0,  133,    2, 0x08 /* Private */,
      12,    0,  134,    2, 0x08 /* Private */,
      13,    0,  135,    2, 0x08 /* Private */,
      14,    0,  136,    2, 0x08 /* Private */,
      15,    0,  137,    2, 0x08 /* Private */,
      16,    0,  138,    2, 0x08 /* Private */,
      17,    0,  139,    2, 0x08 /* Private */,
      18,    0,  140,    2, 0x08 /* Private */,
      19,    0,  141,    2, 0x08 /* Private */,
      20,    0,  142,    2, 0x08 /* Private */,
      21,    0,  143,    2, 0x08 /* Private */,
      22,    0,  144,    2, 0x08 /* Private */,
      23,    0,  145,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QFutureWatcher::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QFutureWatcher *_t = static_cast<tst_QFutureWatcher *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->startFinish(); break;
        case 1: _t->progressValueChanged(); break;
        case 2: _t->canceled(); break;
        case 3: _t->resultAt(); break;
        case 4: _t->resultReadyAt(); break;
        case 5: _t->futureSignals(); break;
        case 6: _t->watchFinishedFuture(); break;
        case 7: _t->watchCanceledFuture(); break;
        case 8: _t->disconnectRunningFuture(); break;
        case 9: _t->tooMuchProgress(); break;
        case 10: _t->progressText(); break;
        case 11: _t->sharedFutureInterface(); break;
        case 12: _t->changeFuture(); break;
        case 13: _t->cancelEvents(); break;
        case 14: _t->pauseEvents(); break;
        case 15: _t->finishedState(); break;
        case 16: _t->throttling(); break;
        case 17: _t->incrementalMapResults(); break;
        case 18: _t->incrementalFilterResults(); break;
        case 19: _t->qfutureSynchronizer(); break;
        case 20: _t->warnRace(); break;
        case 21: _t->matchFlags(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QFutureWatcher::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QFutureWatcher.data,
      qt_meta_data_tst_QFutureWatcher,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QFutureWatcher::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QFutureWatcher::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QFutureWatcher.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QFutureWatcher::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 22)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 22;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 22)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 22;
    }
    return _id;
}
struct qt_meta_stringdata_ProgressObject_t {
    QByteArrayData data[7];
    char stringdata0[75];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ProgressObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ProgressObject_t qt_meta_stringdata_ProgressObject = {
    {
QT_MOC_LITERAL(0, 0, 14), // "ProgressObject"
QT_MOC_LITERAL(1, 15, 13), // "printProgress"
QT_MOC_LITERAL(2, 29, 0), // ""
QT_MOC_LITERAL(3, 30, 9), // "printText"
QT_MOC_LITERAL(4, 40, 4), // "text"
QT_MOC_LITERAL(5, 45, 16), // "registerProgress"
QT_MOC_LITERAL(6, 62, 12) // "registerText"

    },
    "ProgressObject\0printProgress\0\0printText\0"
    "text\0registerProgress\0registerText"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ProgressObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       4,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    1,   34,    2, 0x0a /* Public */,
       3,    1,   37,    2, 0x0a /* Public */,
       5,    1,   40,    2, 0x0a /* Public */,
       6,    1,   43,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void, QMetaType::Int,    2,
    QMetaType::Void, QMetaType::QString,    4,
    QMetaType::Void, QMetaType::Int,    2,
    QMetaType::Void, QMetaType::QString,    4,

       0        // eod
};

void ProgressObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        ProgressObject *_t = static_cast<ProgressObject *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->printProgress((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 1: _t->printText((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 2: _t->registerProgress((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 3: _t->registerText((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObject ProgressObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_ProgressObject.data,
      qt_meta_data_ProgressObject,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *ProgressObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ProgressObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ProgressObject.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int ProgressObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 4)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 4;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 4)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 4;
    }
    return _id;
}
struct qt_meta_stringdata_CancelObject_t {
    QByteArrayData data[3];
    char stringdata0[21];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_CancelObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_CancelObject_t qt_meta_stringdata_CancelObject = {
    {
QT_MOC_LITERAL(0, 0, 12), // "CancelObject"
QT_MOC_LITERAL(1, 13, 6), // "cancel"
QT_MOC_LITERAL(2, 20, 0) // ""

    },
    "CancelObject\0cancel\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_CancelObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void CancelObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        CancelObject *_t = static_cast<CancelObject *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->cancel(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject CancelObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_CancelObject.data,
      qt_meta_data_CancelObject,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *CancelObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *CancelObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CancelObject.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int CancelObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_SignalSlotObject_t {
    QByteArrayData data[12];
    char stringdata0[124];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_SignalSlotObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_SignalSlotObject_t qt_meta_stringdata_SignalSlotObject = {
    {
QT_MOC_LITERAL(0, 0, 16), // "SignalSlotObject"
QT_MOC_LITERAL(1, 17, 6), // "cancel"
QT_MOC_LITERAL(2, 24, 0), // ""
QT_MOC_LITERAL(3, 25, 7), // "started"
QT_MOC_LITERAL(4, 33, 8), // "finished"
QT_MOC_LITERAL(5, 42, 8), // "canceled"
QT_MOC_LITERAL(6, 51, 13), // "resultReadyAt"
QT_MOC_LITERAL(7, 65, 20), // "progressValueChanged"
QT_MOC_LITERAL(8, 86, 8), // "progress"
QT_MOC_LITERAL(9, 95, 20), // "progressRangeChanged"
QT_MOC_LITERAL(10, 116, 3), // "min"
QT_MOC_LITERAL(11, 120, 3) // "max"

    },
    "SignalSlotObject\0cancel\0\0started\0"
    "finished\0canceled\0resultReadyAt\0"
    "progressValueChanged\0progress\0"
    "progressRangeChanged\0min\0max"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_SignalSlotObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       7,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   49,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       3,    0,   50,    2, 0x0a /* Public */,
       4,    0,   51,    2, 0x0a /* Public */,
       5,    0,   52,    2, 0x0a /* Public */,
       6,    1,   53,    2, 0x0a /* Public */,
       7,    1,   56,    2, 0x0a /* Public */,
       9,    2,   59,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::Int,    2,
    QMetaType::Void, QMetaType::Int,    8,
    QMetaType::Void, QMetaType::Int, QMetaType::Int,   10,   11,

       0        // eod
};

void SignalSlotObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        SignalSlotObject *_t = static_cast<SignalSlotObject *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->cancel(); break;
        case 1: _t->started(); break;
        case 2: _t->finished(); break;
        case 3: _t->canceled(); break;
        case 4: _t->resultReadyAt((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 5: _t->progressValueChanged((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 6: _t->progressRangeChanged((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (SignalSlotObject::*_t)();
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&SignalSlotObject::cancel)) {
                *result = 0;
                return;
            }
        }
    }
}

const QMetaObject SignalSlotObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_SignalSlotObject.data,
      qt_meta_data_SignalSlotObject,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *SignalSlotObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *SignalSlotObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_SignalSlotObject.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int SignalSlotObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 7)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 7;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 7)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 7;
    }
    return _id;
}

// SIGNAL 0
void SignalSlotObject::cancel()
{
    QMetaObject::activate(this, &staticMetaObject, 0, nullptr);
}
struct qt_meta_stringdata_ResultReadyTester_t {
    QByteArrayData data[4];
    char stringdata0[39];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ResultReadyTester_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ResultReadyTester_t qt_meta_stringdata_ResultReadyTester = {
    {
QT_MOC_LITERAL(0, 0, 17), // "ResultReadyTester"
QT_MOC_LITERAL(1, 18, 13), // "resultReadyAt"
QT_MOC_LITERAL(2, 32, 0), // ""
QT_MOC_LITERAL(3, 33, 5) // "index"

    },
    "ResultReadyTester\0resultReadyAt\0\0index"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ResultReadyTester[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    1,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void, QMetaType::Int,    3,

       0        // eod
};

void ResultReadyTester::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        ResultReadyTester *_t = static_cast<ResultReadyTester *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->resultReadyAt((*reinterpret_cast< int(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObject ResultReadyTester::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_ResultReadyTester.data,
      qt_meta_data_ResultReadyTester,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *ResultReadyTester::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ResultReadyTester::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ResultReadyTester.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int ResultReadyTester::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_DummyObject_t {
    QByteArrayData data[3];
    char stringdata0[23];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_DummyObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_DummyObject_t qt_meta_stringdata_DummyObject = {
    {
QT_MOC_LITERAL(0, 0, 11), // "DummyObject"
QT_MOC_LITERAL(1, 12, 9), // "dummySlot"
QT_MOC_LITERAL(2, 22, 0) // ""

    },
    "DummyObject\0dummySlot\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_DummyObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void DummyObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        DummyObject *_t = static_cast<DummyObject *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->dummySlot(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject DummyObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_DummyObject.data,
      qt_meta_data_DummyObject,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *DummyObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *DummyObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_DummyObject.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int DummyObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
