/****************************************************************************
** Meta object code from reading C++ file 'tst_qitemmodel.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qitemmodel.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QItemModel_t {
    QByteArrayData data[36];
    char stringdata0[493];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QItemModel_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QItemModel_t qt_meta_stringdata_tst_QItemModel = {
    {
QT_MOC_LITERAL(0, 0, 14), // "tst_QItemModel"
QT_MOC_LITERAL(1, 15, 4), // "init"
QT_MOC_LITERAL(2, 20, 0), // ""
QT_MOC_LITERAL(3, 21, 7), // "cleanup"
QT_MOC_LITERAL(4, 29, 28), // "nonDestructiveBasicTest_data"
QT_MOC_LITERAL(5, 58, 23), // "nonDestructiveBasicTest"
QT_MOC_LITERAL(6, 82, 13), // "rowCount_data"
QT_MOC_LITERAL(7, 96, 8), // "rowCount"
QT_MOC_LITERAL(8, 105, 16), // "columnCount_data"
QT_MOC_LITERAL(9, 122, 11), // "columnCount"
QT_MOC_LITERAL(10, 134, 13), // "hasIndex_data"
QT_MOC_LITERAL(11, 148, 8), // "hasIndex"
QT_MOC_LITERAL(12, 157, 10), // "index_data"
QT_MOC_LITERAL(13, 168, 5), // "index"
QT_MOC_LITERAL(14, 174, 11), // "parent_data"
QT_MOC_LITERAL(15, 186, 6), // "parent"
QT_MOC_LITERAL(16, 193, 9), // "data_data"
QT_MOC_LITERAL(17, 203, 4), // "data"
QT_MOC_LITERAL(18, 208, 12), // "setData_data"
QT_MOC_LITERAL(19, 221, 7), // "setData"
QT_MOC_LITERAL(20, 229, 18), // "setHeaderData_data"
QT_MOC_LITERAL(21, 248, 13), // "setHeaderData"
QT_MOC_LITERAL(22, 262, 11), // "remove_data"
QT_MOC_LITERAL(23, 274, 6), // "remove"
QT_MOC_LITERAL(24, 281, 11), // "insert_data"
QT_MOC_LITERAL(25, 293, 6), // "insert"
QT_MOC_LITERAL(26, 300, 9), // "sort_data"
QT_MOC_LITERAL(27, 310, 4), // "sort"
QT_MOC_LITERAL(28, 315, 22), // "slot_rowsAboutToRemove"
QT_MOC_LITERAL(29, 338, 16), // "slot_rowsRemoved"
QT_MOC_LITERAL(30, 355, 25), // "slot_columnsAboutToRemove"
QT_MOC_LITERAL(31, 381, 19), // "slot_columnsRemoved"
QT_MOC_LITERAL(32, 401, 24), // "slot_rowsAboutToInserted"
QT_MOC_LITERAL(33, 426, 17), // "slot_rowsInserted"
QT_MOC_LITERAL(34, 444, 27), // "slot_columnsAboutToInserted"
QT_MOC_LITERAL(35, 472, 20) // "slot_columnsInserted"

    },
    "tst_QItemModel\0init\0\0cleanup\0"
    "nonDestructiveBasicTest_data\0"
    "nonDestructiveBasicTest\0rowCount_data\0"
    "rowCount\0columnCount_data\0columnCount\0"
    "hasIndex_data\0hasIndex\0index_data\0"
    "index\0parent_data\0parent\0data_data\0"
    "data\0setData_data\0setData\0setHeaderData_data\0"
    "setHeaderData\0remove_data\0remove\0"
    "insert_data\0insert\0sort_data\0sort\0"
    "slot_rowsAboutToRemove\0slot_rowsRemoved\0"
    "slot_columnsAboutToRemove\0slot_columnsRemoved\0"
    "slot_rowsAboutToInserted\0slot_rowsInserted\0"
    "slot_columnsAboutToInserted\0"
    "slot_columnsInserted"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QItemModel[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      34,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  184,    2, 0x0a /* Public */,
       3,    0,  185,    2, 0x0a /* Public */,
       4,    0,  186,    2, 0x08 /* Private */,
       5,    0,  187,    2, 0x08 /* Private */,
       6,    0,  188,    2, 0x08 /* Private */,
       7,    0,  189,    2, 0x08 /* Private */,
       8,    0,  190,    2, 0x08 /* Private */,
       9,    0,  191,    2, 0x08 /* Private */,
      10,    0,  192,    2, 0x08 /* Private */,
      11,    0,  193,    2, 0x08 /* Private */,
      12,    0,  194,    2, 0x08 /* Private */,
      13,    0,  195,    2, 0x08 /* Private */,
      14,    0,  196,    2, 0x08 /* Private */,
      15,    0,  197,    2, 0x08 /* Private */,
      16,    0,  198,    2, 0x08 /* Private */,
      17,    0,  199,    2, 0x08 /* Private */,
      18,    0,  200,    2, 0x08 /* Private */,
      19,    0,  201,    2, 0x08 /* Private */,
      20,    0,  202,    2, 0x08 /* Private */,
      21,    0,  203,    2, 0x08 /* Private */,
      22,    0,  204,    2, 0x08 /* Private */,
      23,    0,  205,    2, 0x08 /* Private */,
      24,    0,  206,    2, 0x08 /* Private */,
      25,    0,  207,    2, 0x08 /* Private */,
      26,    0,  208,    2, 0x08 /* Private */,
      27,    0,  209,    2, 0x08 /* Private */,
      28,    1,  210,    2, 0x09 /* Protected */,
      29,    1,  213,    2, 0x09 /* Protected */,
      30,    1,  216,    2, 0x09 /* Protected */,
      31,    1,  219,    2, 0x09 /* Protected */,
      32,    1,  222,    2, 0x09 /* Protected */,
      33,    1,  225,    2, 0x09 /* Protected */,
      34,    1,  228,    2, 0x09 /* Protected */,
      35,    1,  231,    2, 0x09 /* Protected */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QModelIndex,   15,
    QMetaType::Void, QMetaType::QModelIndex,   15,
    QMetaType::Void, QMetaType::QModelIndex,   15,
    QMetaType::Void, QMetaType::QModelIndex,   15,
    QMetaType::Void, QMetaType::QModelIndex,   15,
    QMetaType::Void, QMetaType::QModelIndex,   15,
    QMetaType::Void, QMetaType::QModelIndex,   15,
    QMetaType::Void, QMetaType::QModelIndex,   15,

       0        // eod
};

void tst_QItemModel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QItemModel *_t = static_cast<tst_QItemModel *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->init(); break;
        case 1: _t->cleanup(); break;
        case 2: _t->nonDestructiveBasicTest_data(); break;
        case 3: _t->nonDestructiveBasicTest(); break;
        case 4: _t->rowCount_data(); break;
        case 5: _t->rowCount(); break;
        case 6: _t->columnCount_data(); break;
        case 7: _t->columnCount(); break;
        case 8: _t->hasIndex_data(); break;
        case 9: _t->hasIndex(); break;
        case 10: _t->index_data(); break;
        case 11: _t->index(); break;
        case 12: _t->parent_data(); break;
        case 13: _t->parent(); break;
        case 14: _t->data_data(); break;
        case 15: _t->data(); break;
        case 16: _t->setData_data(); break;
        case 17: _t->setData(); break;
        case 18: _t->setHeaderData_data(); break;
        case 19: _t->setHeaderData(); break;
        case 20: _t->remove_data(); break;
        case 21: _t->remove(); break;
        case 22: _t->insert_data(); break;
        case 23: _t->insert(); break;
        case 24: _t->sort_data(); break;
        case 25: _t->sort(); break;
        case 26: _t->slot_rowsAboutToRemove((*reinterpret_cast< const QModelIndex(*)>(_a[1]))); break;
        case 27: _t->slot_rowsRemoved((*reinterpret_cast< const QModelIndex(*)>(_a[1]))); break;
        case 28: _t->slot_columnsAboutToRemove((*reinterpret_cast< const QModelIndex(*)>(_a[1]))); break;
        case 29: _t->slot_columnsRemoved((*reinterpret_cast< const QModelIndex(*)>(_a[1]))); break;
        case 30: _t->slot_rowsAboutToInserted((*reinterpret_cast< const QModelIndex(*)>(_a[1]))); break;
        case 31: _t->slot_rowsInserted((*reinterpret_cast< const QModelIndex(*)>(_a[1]))); break;
        case 32: _t->slot_columnsAboutToInserted((*reinterpret_cast< const QModelIndex(*)>(_a[1]))); break;
        case 33: _t->slot_columnsInserted((*reinterpret_cast< const QModelIndex(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObject tst_QItemModel::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QItemModel.data,
      qt_meta_data_tst_QItemModel,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QItemModel::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QItemModel::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QItemModel.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QItemModel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 34)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 34;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 34)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 34;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
