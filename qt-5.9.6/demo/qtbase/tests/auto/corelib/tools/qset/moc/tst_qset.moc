/****************************************************************************
** Meta object code from reading C++ file 'tst_qset.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qset.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QSet_t {
    QByteArrayData data[27];
    char stringdata0[289];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QSet_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QSet_t qt_meta_stringdata_tst_QSet = {
    {
QT_MOC_LITERAL(0, 0, 8), // "tst_QSet"
QT_MOC_LITERAL(1, 9, 11), // "operator_eq"
QT_MOC_LITERAL(2, 21, 0), // ""
QT_MOC_LITERAL(3, 22, 4), // "swap"
QT_MOC_LITERAL(4, 27, 4), // "size"
QT_MOC_LITERAL(5, 32, 8), // "capacity"
QT_MOC_LITERAL(6, 41, 7), // "reserve"
QT_MOC_LITERAL(7, 49, 7), // "squeeze"
QT_MOC_LITERAL(8, 57, 6), // "detach"
QT_MOC_LITERAL(9, 64, 10), // "isDetached"
QT_MOC_LITERAL(10, 75, 5), // "clear"
QT_MOC_LITERAL(11, 81, 6), // "remove"
QT_MOC_LITERAL(12, 88, 8), // "contains"
QT_MOC_LITERAL(13, 97, 11), // "containsSet"
QT_MOC_LITERAL(14, 109, 5), // "begin"
QT_MOC_LITERAL(15, 115, 3), // "end"
QT_MOC_LITERAL(16, 119, 6), // "insert"
QT_MOC_LITERAL(17, 126, 16), // "reverseIterators"
QT_MOC_LITERAL(18, 143, 13), // "setOperations"
QT_MOC_LITERAL(19, 157, 11), // "stlIterator"
QT_MOC_LITERAL(20, 169, 18), // "stlMutableIterator"
QT_MOC_LITERAL(21, 188, 12), // "javaIterator"
QT_MOC_LITERAL(22, 201, 19), // "javaMutableIterator"
QT_MOC_LITERAL(23, 221, 34), // "makeSureTheComfortFunctionsCo..."
QT_MOC_LITERAL(24, 256, 15), // "initializerList"
QT_MOC_LITERAL(25, 272, 5), // "qhash"
QT_MOC_LITERAL(26, 278, 10) // "intersects"

    },
    "tst_QSet\0operator_eq\0\0swap\0size\0"
    "capacity\0reserve\0squeeze\0detach\0"
    "isDetached\0clear\0remove\0contains\0"
    "containsSet\0begin\0end\0insert\0"
    "reverseIterators\0setOperations\0"
    "stlIterator\0stlMutableIterator\0"
    "javaIterator\0javaMutableIterator\0"
    "makeSureTheComfortFunctionsCompile\0"
    "initializerList\0qhash\0intersects"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QSet[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      25,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  139,    2, 0x08 /* Private */,
       3,    0,  140,    2, 0x08 /* Private */,
       4,    0,  141,    2, 0x08 /* Private */,
       5,    0,  142,    2, 0x08 /* Private */,
       6,    0,  143,    2, 0x08 /* Private */,
       7,    0,  144,    2, 0x08 /* Private */,
       8,    0,  145,    2, 0x08 /* Private */,
       9,    0,  146,    2, 0x08 /* Private */,
      10,    0,  147,    2, 0x08 /* Private */,
      11,    0,  148,    2, 0x08 /* Private */,
      12,    0,  149,    2, 0x08 /* Private */,
      13,    0,  150,    2, 0x08 /* Private */,
      14,    0,  151,    2, 0x08 /* Private */,
      15,    0,  152,    2, 0x08 /* Private */,
      16,    0,  153,    2, 0x08 /* Private */,
      17,    0,  154,    2, 0x08 /* Private */,
      18,    0,  155,    2, 0x08 /* Private */,
      19,    0,  156,    2, 0x08 /* Private */,
      20,    0,  157,    2, 0x08 /* Private */,
      21,    0,  158,    2, 0x08 /* Private */,
      22,    0,  159,    2, 0x08 /* Private */,
      23,    0,  160,    2, 0x08 /* Private */,
      24,    0,  161,    2, 0x08 /* Private */,
      25,    0,  162,    2, 0x08 /* Private */,
      26,    0,  163,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QSet::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QSet *_t = static_cast<tst_QSet *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->operator_eq(); break;
        case 1: _t->swap(); break;
        case 2: _t->size(); break;
        case 3: _t->capacity(); break;
        case 4: _t->reserve(); break;
        case 5: _t->squeeze(); break;
        case 6: _t->detach(); break;
        case 7: _t->isDetached(); break;
        case 8: _t->clear(); break;
        case 9: _t->remove(); break;
        case 10: _t->contains(); break;
        case 11: _t->containsSet(); break;
        case 12: _t->begin(); break;
        case 13: _t->end(); break;
        case 14: _t->insert(); break;
        case 15: _t->reverseIterators(); break;
        case 16: _t->setOperations(); break;
        case 17: _t->stlIterator(); break;
        case 18: _t->stlMutableIterator(); break;
        case 19: _t->javaIterator(); break;
        case 20: _t->javaMutableIterator(); break;
        case 21: _t->makeSureTheComfortFunctionsCompile(); break;
        case 22: _t->initializerList(); break;
        case 23: _t->qhash(); break;
        case 24: _t->intersects(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QSet::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QSet.data,
      qt_meta_data_tst_QSet,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QSet::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QSet::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QSet.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QSet::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 25)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 25;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 25)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 25;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
