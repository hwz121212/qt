/****************************************************************************
** Meta object code from reading C++ file 'tst_qsharedpointer.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qsharedpointer.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QSharedPointer_t {
    QByteArrayData data[47];
    char stringdata0[791];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QSharedPointer_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QSharedPointer_t qt_meta_stringdata_tst_QSharedPointer = {
    {
QT_MOC_LITERAL(0, 0, 18), // "tst_QSharedPointer"
QT_MOC_LITERAL(1, 19, 12), // "initTestCase"
QT_MOC_LITERAL(2, 32, 0), // ""
QT_MOC_LITERAL(3, 33, 11), // "basics_data"
QT_MOC_LITERAL(4, 45, 6), // "basics"
QT_MOC_LITERAL(5, 52, 9), // "operators"
QT_MOC_LITERAL(6, 62, 10), // "nullptrOps"
QT_MOC_LITERAL(7, 73, 4), // "swap"
QT_MOC_LITERAL(8, 78, 13), // "moveSemantics"
QT_MOC_LITERAL(9, 92, 20), // "useOfForwardDeclared"
QT_MOC_LITERAL(10, 113, 16), // "memoryManagement"
QT_MOC_LITERAL(11, 130, 34), // "dropLastReferenceOfForwardDec..."
QT_MOC_LITERAL(12, 165, 21), // "nonVirtualDestructors"
QT_MOC_LITERAL(13, 187, 4), // "lock"
QT_MOC_LITERAL(14, 192, 8), // "downCast"
QT_MOC_LITERAL(15, 201, 20), // "functionCallDownCast"
QT_MOC_LITERAL(16, 222, 6), // "upCast"
QT_MOC_LITERAL(17, 229, 21), // "qobjectWeakManagement"
QT_MOC_LITERAL(18, 251, 30), // "noSharedPointerFromWeakQObject"
QT_MOC_LITERAL(19, 282, 32), // "sharedPointerFromQObjectWithWeak"
QT_MOC_LITERAL(20, 315, 28), // "weakQObjectFromSharedPointer"
QT_MOC_LITERAL(21, 344, 10), // "objectCast"
QT_MOC_LITERAL(22, 355, 17), // "differentPointers"
QT_MOC_LITERAL(23, 373, 28), // "virtualBaseDifferentPointers"
QT_MOC_LITERAL(24, 402, 11), // "dynamicCast"
QT_MOC_LITERAL(25, 414, 28), // "dynamicCastDifferentPointers"
QT_MOC_LITERAL(26, 443, 22), // "dynamicCastVirtualBase"
QT_MOC_LITERAL(27, 466, 18), // "dynamicCastFailure"
QT_MOC_LITERAL(28, 485, 24), // "dynamicCastFailureNoLeak"
QT_MOC_LITERAL(29, 510, 16), // "constCorrectness"
QT_MOC_LITERAL(30, 527, 13), // "customDeleter"
QT_MOC_LITERAL(31, 541, 8), // "creating"
QT_MOC_LITERAL(32, 550, 16), // "creatingVariadic"
QT_MOC_LITERAL(33, 567, 15), // "creatingQObject"
QT_MOC_LITERAL(34, 583, 22), // "mixTrackingPointerCode"
QT_MOC_LITERAL(35, 606, 26), // "reentrancyWhileDestructing"
QT_MOC_LITERAL(36, 633, 3), // "map"
QT_MOC_LITERAL(37, 637, 4), // "hash"
QT_MOC_LITERAL(38, 642, 12), // "qvariantCast"
QT_MOC_LITERAL(39, 655, 14), // "sharedFromThis"
QT_MOC_LITERAL(40, 670, 16), // "constructorThrow"
QT_MOC_LITERAL(41, 687, 21), // "threadStressTest_data"
QT_MOC_LITERAL(42, 709, 16), // "threadStressTest"
QT_MOC_LITERAL(43, 726, 15), // "validConstructs"
QT_MOC_LITERAL(44, 742, 22), // "invalidConstructs_data"
QT_MOC_LITERAL(45, 765, 17), // "invalidConstructs"
QT_MOC_LITERAL(46, 783, 7) // "cleanup"

    },
    "tst_QSharedPointer\0initTestCase\0\0"
    "basics_data\0basics\0operators\0nullptrOps\0"
    "swap\0moveSemantics\0useOfForwardDeclared\0"
    "memoryManagement\0dropLastReferenceOfForwardDeclared\0"
    "nonVirtualDestructors\0lock\0downCast\0"
    "functionCallDownCast\0upCast\0"
    "qobjectWeakManagement\0"
    "noSharedPointerFromWeakQObject\0"
    "sharedPointerFromQObjectWithWeak\0"
    "weakQObjectFromSharedPointer\0objectCast\0"
    "differentPointers\0virtualBaseDifferentPointers\0"
    "dynamicCast\0dynamicCastDifferentPointers\0"
    "dynamicCastVirtualBase\0dynamicCastFailure\0"
    "dynamicCastFailureNoLeak\0constCorrectness\0"
    "customDeleter\0creating\0creatingVariadic\0"
    "creatingQObject\0mixTrackingPointerCode\0"
    "reentrancyWhileDestructing\0map\0hash\0"
    "qvariantCast\0sharedFromThis\0"
    "constructorThrow\0threadStressTest_data\0"
    "threadStressTest\0validConstructs\0"
    "invalidConstructs_data\0invalidConstructs\0"
    "cleanup"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QSharedPointer[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      45,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  239,    2, 0x08 /* Private */,
       3,    0,  240,    2, 0x08 /* Private */,
       4,    0,  241,    2, 0x08 /* Private */,
       5,    0,  242,    2, 0x08 /* Private */,
       6,    0,  243,    2, 0x08 /* Private */,
       7,    0,  244,    2, 0x08 /* Private */,
       8,    0,  245,    2, 0x08 /* Private */,
       9,    0,  246,    2, 0x08 /* Private */,
      10,    0,  247,    2, 0x08 /* Private */,
      11,    0,  248,    2, 0x08 /* Private */,
      12,    0,  249,    2, 0x08 /* Private */,
      13,    0,  250,    2, 0x08 /* Private */,
      14,    0,  251,    2, 0x08 /* Private */,
      15,    0,  252,    2, 0x08 /* Private */,
      16,    0,  253,    2, 0x08 /* Private */,
      17,    0,  254,    2, 0x08 /* Private */,
      18,    0,  255,    2, 0x08 /* Private */,
      19,    0,  256,    2, 0x08 /* Private */,
      20,    0,  257,    2, 0x08 /* Private */,
      21,    0,  258,    2, 0x08 /* Private */,
      22,    0,  259,    2, 0x08 /* Private */,
      23,    0,  260,    2, 0x08 /* Private */,
      24,    0,  261,    2, 0x08 /* Private */,
      25,    0,  262,    2, 0x08 /* Private */,
      26,    0,  263,    2, 0x08 /* Private */,
      27,    0,  264,    2, 0x08 /* Private */,
      28,    0,  265,    2, 0x08 /* Private */,
      29,    0,  266,    2, 0x08 /* Private */,
      30,    0,  267,    2, 0x08 /* Private */,
      31,    0,  268,    2, 0x08 /* Private */,
      32,    0,  269,    2, 0x08 /* Private */,
      33,    0,  270,    2, 0x08 /* Private */,
      34,    0,  271,    2, 0x08 /* Private */,
      35,    0,  272,    2, 0x08 /* Private */,
      36,    0,  273,    2, 0x08 /* Private */,
      37,    0,  274,    2, 0x08 /* Private */,
      38,    0,  275,    2, 0x08 /* Private */,
      39,    0,  276,    2, 0x08 /* Private */,
      40,    0,  277,    2, 0x08 /* Private */,
      41,    0,  278,    2, 0x08 /* Private */,
      42,    0,  279,    2, 0x08 /* Private */,
      43,    0,  280,    2, 0x08 /* Private */,
      44,    0,  281,    2, 0x08 /* Private */,
      45,    0,  282,    2, 0x08 /* Private */,
      46,    0,  283,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QSharedPointer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QSharedPointer *_t = static_cast<tst_QSharedPointer *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->basics_data(); break;
        case 2: _t->basics(); break;
        case 3: _t->operators(); break;
        case 4: _t->nullptrOps(); break;
        case 5: _t->swap(); break;
        case 6: _t->moveSemantics(); break;
        case 7: _t->useOfForwardDeclared(); break;
        case 8: _t->memoryManagement(); break;
        case 9: _t->dropLastReferenceOfForwardDeclared(); break;
        case 10: _t->nonVirtualDestructors(); break;
        case 11: _t->lock(); break;
        case 12: _t->downCast(); break;
        case 13: _t->functionCallDownCast(); break;
        case 14: _t->upCast(); break;
        case 15: _t->qobjectWeakManagement(); break;
        case 16: _t->noSharedPointerFromWeakQObject(); break;
        case 17: _t->sharedPointerFromQObjectWithWeak(); break;
        case 18: _t->weakQObjectFromSharedPointer(); break;
        case 19: _t->objectCast(); break;
        case 20: _t->differentPointers(); break;
        case 21: _t->virtualBaseDifferentPointers(); break;
        case 22: _t->dynamicCast(); break;
        case 23: _t->dynamicCastDifferentPointers(); break;
        case 24: _t->dynamicCastVirtualBase(); break;
        case 25: _t->dynamicCastFailure(); break;
        case 26: _t->dynamicCastFailureNoLeak(); break;
        case 27: _t->constCorrectness(); break;
        case 28: _t->customDeleter(); break;
        case 29: _t->creating(); break;
        case 30: _t->creatingVariadic(); break;
        case 31: _t->creatingQObject(); break;
        case 32: _t->mixTrackingPointerCode(); break;
        case 33: _t->reentrancyWhileDestructing(); break;
        case 34: _t->map(); break;
        case 35: _t->hash(); break;
        case 36: _t->qvariantCast(); break;
        case 37: _t->sharedFromThis(); break;
        case 38: _t->constructorThrow(); break;
        case 39: _t->threadStressTest_data(); break;
        case 40: _t->threadStressTest(); break;
        case 41: _t->validConstructs(); break;
        case 42: _t->invalidConstructs_data(); break;
        case 43: _t->invalidConstructs(); break;
        case 44: _t->cleanup(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QSharedPointer::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QSharedPointer.data,
      qt_meta_data_tst_QSharedPointer,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QSharedPointer::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QSharedPointer::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QSharedPointer.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QSharedPointer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 45)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 45;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 45)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 45;
    }
    return _id;
}
struct qt_meta_stringdata_OtherObject_t {
    QByteArrayData data[1];
    char stringdata0[12];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_OtherObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_OtherObject_t qt_meta_stringdata_OtherObject = {
    {
QT_MOC_LITERAL(0, 0, 11) // "OtherObject"

    },
    "OtherObject"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_OtherObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void OtherObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject OtherObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_OtherObject.data,
      qt_meta_data_OtherObject,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *OtherObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *OtherObject::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_OtherObject.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int OtherObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
