/****************************************************************************
** Meta object code from reading C++ file 'tst_qhash.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qhash.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QHash_t {
    QByteArrayData data[29];
    char stringdata0[348];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QHash_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QHash_t qt_meta_stringdata_tst_QHash = {
    {
QT_MOC_LITERAL(0, 0, 9), // "tst_QHash"
QT_MOC_LITERAL(1, 10, 7), // "insert1"
QT_MOC_LITERAL(2, 18, 0), // ""
QT_MOC_LITERAL(3, 19, 5), // "erase"
QT_MOC_LITERAL(4, 25, 3), // "key"
QT_MOC_LITERAL(5, 29, 4), // "swap"
QT_MOC_LITERAL(6, 34, 5), // "count"
QT_MOC_LITERAL(7, 40, 5), // "clear"
QT_MOC_LITERAL(8, 46, 5), // "empty"
QT_MOC_LITERAL(9, 52, 4), // "find"
QT_MOC_LITERAL(10, 57, 9), // "constFind"
QT_MOC_LITERAL(11, 67, 8), // "contains"
QT_MOC_LITERAL(12, 76, 5), // "qhash"
QT_MOC_LITERAL(13, 82, 4), // "take"
QT_MOC_LITERAL(14, 87, 11), // "operator_eq"
QT_MOC_LITERAL(15, 99, 21), // "rehash_isnt_quadratic"
QT_MOC_LITERAL(16, 121, 29), // "dont_need_default_constructor"
QT_MOC_LITERAL(17, 151, 19), // "qmultihash_specific"
QT_MOC_LITERAL(18, 171, 7), // "compare"
QT_MOC_LITERAL(19, 179, 8), // "compare2"
QT_MOC_LITERAL(20, 188, 9), // "iterators"
QT_MOC_LITERAL(21, 198, 11), // "keyIterator"
QT_MOC_LITERAL(22, 210, 22), // "keys_values_uniqueKeys"
QT_MOC_LITERAL(23, 233, 18), // "noNeedlessRehashes"
QT_MOC_LITERAL(24, 252, 17), // "const_shared_null"
QT_MOC_LITERAL(25, 270, 18), // "twoArguments_qHash"
QT_MOC_LITERAL(26, 289, 15), // "initializerList"
QT_MOC_LITERAL(27, 305, 30), // "eraseValidIteratorOnSharedHash"
QT_MOC_LITERAL(28, 336, 11) // "equal_range"

    },
    "tst_QHash\0insert1\0\0erase\0key\0swap\0"
    "count\0clear\0empty\0find\0constFind\0"
    "contains\0qhash\0take\0operator_eq\0"
    "rehash_isnt_quadratic\0"
    "dont_need_default_constructor\0"
    "qmultihash_specific\0compare\0compare2\0"
    "iterators\0keyIterator\0keys_values_uniqueKeys\0"
    "noNeedlessRehashes\0const_shared_null\0"
    "twoArguments_qHash\0initializerList\0"
    "eraseValidIteratorOnSharedHash\0"
    "equal_range"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QHash[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      27,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  149,    2, 0x08 /* Private */,
       3,    0,  150,    2, 0x08 /* Private */,
       4,    0,  151,    2, 0x08 /* Private */,
       5,    0,  152,    2, 0x08 /* Private */,
       6,    0,  153,    2, 0x08 /* Private */,
       7,    0,  154,    2, 0x08 /* Private */,
       8,    0,  155,    2, 0x08 /* Private */,
       9,    0,  156,    2, 0x08 /* Private */,
      10,    0,  157,    2, 0x08 /* Private */,
      11,    0,  158,    2, 0x08 /* Private */,
      12,    0,  159,    2, 0x08 /* Private */,
      13,    0,  160,    2, 0x08 /* Private */,
      14,    0,  161,    2, 0x08 /* Private */,
      15,    0,  162,    2, 0x08 /* Private */,
      16,    0,  163,    2, 0x08 /* Private */,
      17,    0,  164,    2, 0x08 /* Private */,
      18,    0,  165,    2, 0x08 /* Private */,
      19,    0,  166,    2, 0x08 /* Private */,
      20,    0,  167,    2, 0x08 /* Private */,
      21,    0,  168,    2, 0x08 /* Private */,
      22,    0,  169,    2, 0x08 /* Private */,
      23,    0,  170,    2, 0x08 /* Private */,
      24,    0,  171,    2, 0x08 /* Private */,
      25,    0,  172,    2, 0x08 /* Private */,
      26,    0,  173,    2, 0x08 /* Private */,
      27,    0,  174,    2, 0x08 /* Private */,
      28,    0,  175,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QHash::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QHash *_t = static_cast<tst_QHash *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->insert1(); break;
        case 1: _t->erase(); break;
        case 2: _t->key(); break;
        case 3: _t->swap(); break;
        case 4: _t->count(); break;
        case 5: _t->clear(); break;
        case 6: _t->empty(); break;
        case 7: _t->find(); break;
        case 8: _t->constFind(); break;
        case 9: _t->contains(); break;
        case 10: _t->qhash(); break;
        case 11: _t->take(); break;
        case 12: _t->operator_eq(); break;
        case 13: _t->rehash_isnt_quadratic(); break;
        case 14: _t->dont_need_default_constructor(); break;
        case 15: _t->qmultihash_specific(); break;
        case 16: _t->compare(); break;
        case 17: _t->compare2(); break;
        case 18: _t->iterators(); break;
        case 19: _t->keyIterator(); break;
        case 20: _t->keys_values_uniqueKeys(); break;
        case 21: _t->noNeedlessRehashes(); break;
        case 22: _t->const_shared_null(); break;
        case 23: _t->twoArguments_qHash(); break;
        case 24: _t->initializerList(); break;
        case 25: _t->eraseValidIteratorOnSharedHash(); break;
        case 26: _t->equal_range(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QHash::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QHash.data,
      qt_meta_data_tst_QHash,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QHash::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QHash::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QHash.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QHash::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 27)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 27;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 27)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 27;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
