/****************************************************************************
** Meta object code from reading C++ file 'tst_qmetatype.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qmetatype.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QMetaType_t {
    QByteArrayData data[26];
    char stringdata0[551];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QMetaType_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QMetaType_t qt_meta_stringdata_tst_QMetaType = {
    {
QT_MOC_LITERAL(0, 0, 13), // "tst_QMetaType"
QT_MOC_LITERAL(1, 14, 16), // "typeBuiltin_data"
QT_MOC_LITERAL(2, 31, 0), // ""
QT_MOC_LITERAL(3, 32, 11), // "typeBuiltin"
QT_MOC_LITERAL(4, 44, 27), // "typeBuiltin_QByteArray_data"
QT_MOC_LITERAL(5, 72, 22), // "typeBuiltin_QByteArray"
QT_MOC_LITERAL(6, 95, 29), // "typeBuiltinNotNormalized_data"
QT_MOC_LITERAL(7, 125, 24), // "typeBuiltinNotNormalized"
QT_MOC_LITERAL(8, 150, 10), // "typeCustom"
QT_MOC_LITERAL(9, 161, 23), // "typeCustomNotNormalized"
QT_MOC_LITERAL(10, 185, 17), // "typeNotRegistered"
QT_MOC_LITERAL(11, 203, 30), // "typeNotRegisteredNotNormalized"
QT_MOC_LITERAL(12, 234, 20), // "typeNameBuiltin_data"
QT_MOC_LITERAL(13, 255, 15), // "typeNameBuiltin"
QT_MOC_LITERAL(14, 271, 14), // "typeNameCustom"
QT_MOC_LITERAL(15, 286, 21), // "typeNameNotRegistered"
QT_MOC_LITERAL(16, 308, 24), // "isRegisteredBuiltin_data"
QT_MOC_LITERAL(17, 333, 19), // "isRegisteredBuiltin"
QT_MOC_LITERAL(18, 353, 18), // "isRegisteredCustom"
QT_MOC_LITERAL(19, 372, 25), // "isRegisteredNotRegistered"
QT_MOC_LITERAL(20, 398, 21), // "constructInPlace_data"
QT_MOC_LITERAL(21, 420, 16), // "constructInPlace"
QT_MOC_LITERAL(22, 437, 25), // "constructInPlaceCopy_data"
QT_MOC_LITERAL(23, 463, 20), // "constructInPlaceCopy"
QT_MOC_LITERAL(24, 484, 35), // "constructInPlaceCopyStaticLes..."
QT_MOC_LITERAL(25, 520, 30) // "constructInPlaceCopyStaticLess"

    },
    "tst_QMetaType\0typeBuiltin_data\0\0"
    "typeBuiltin\0typeBuiltin_QByteArray_data\0"
    "typeBuiltin_QByteArray\0"
    "typeBuiltinNotNormalized_data\0"
    "typeBuiltinNotNormalized\0typeCustom\0"
    "typeCustomNotNormalized\0typeNotRegistered\0"
    "typeNotRegisteredNotNormalized\0"
    "typeNameBuiltin_data\0typeNameBuiltin\0"
    "typeNameCustom\0typeNameNotRegistered\0"
    "isRegisteredBuiltin_data\0isRegisteredBuiltin\0"
    "isRegisteredCustom\0isRegisteredNotRegistered\0"
    "constructInPlace_data\0constructInPlace\0"
    "constructInPlaceCopy_data\0"
    "constructInPlaceCopy\0"
    "constructInPlaceCopyStaticLess_data\0"
    "constructInPlaceCopyStaticLess"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QMetaType[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      24,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  134,    2, 0x08 /* Private */,
       3,    0,  135,    2, 0x08 /* Private */,
       4,    0,  136,    2, 0x08 /* Private */,
       5,    0,  137,    2, 0x08 /* Private */,
       6,    0,  138,    2, 0x08 /* Private */,
       7,    0,  139,    2, 0x08 /* Private */,
       8,    0,  140,    2, 0x08 /* Private */,
       9,    0,  141,    2, 0x08 /* Private */,
      10,    0,  142,    2, 0x08 /* Private */,
      11,    0,  143,    2, 0x08 /* Private */,
      12,    0,  144,    2, 0x08 /* Private */,
      13,    0,  145,    2, 0x08 /* Private */,
      14,    0,  146,    2, 0x08 /* Private */,
      15,    0,  147,    2, 0x08 /* Private */,
      16,    0,  148,    2, 0x08 /* Private */,
      17,    0,  149,    2, 0x08 /* Private */,
      18,    0,  150,    2, 0x08 /* Private */,
      19,    0,  151,    2, 0x08 /* Private */,
      20,    0,  152,    2, 0x08 /* Private */,
      21,    0,  153,    2, 0x08 /* Private */,
      22,    0,  154,    2, 0x08 /* Private */,
      23,    0,  155,    2, 0x08 /* Private */,
      24,    0,  156,    2, 0x08 /* Private */,
      25,    0,  157,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QMetaType::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QMetaType *_t = static_cast<tst_QMetaType *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->typeBuiltin_data(); break;
        case 1: _t->typeBuiltin(); break;
        case 2: _t->typeBuiltin_QByteArray_data(); break;
        case 3: _t->typeBuiltin_QByteArray(); break;
        case 4: _t->typeBuiltinNotNormalized_data(); break;
        case 5: _t->typeBuiltinNotNormalized(); break;
        case 6: _t->typeCustom(); break;
        case 7: _t->typeCustomNotNormalized(); break;
        case 8: _t->typeNotRegistered(); break;
        case 9: _t->typeNotRegisteredNotNormalized(); break;
        case 10: _t->typeNameBuiltin_data(); break;
        case 11: _t->typeNameBuiltin(); break;
        case 12: _t->typeNameCustom(); break;
        case 13: _t->typeNameNotRegistered(); break;
        case 14: _t->isRegisteredBuiltin_data(); break;
        case 15: _t->isRegisteredBuiltin(); break;
        case 16: _t->isRegisteredCustom(); break;
        case 17: _t->isRegisteredNotRegistered(); break;
        case 18: _t->constructInPlace_data(); break;
        case 19: _t->constructInPlace(); break;
        case 20: _t->constructInPlaceCopy_data(); break;
        case 21: _t->constructInPlaceCopy(); break;
        case 22: _t->constructInPlaceCopyStaticLess_data(); break;
        case 23: _t->constructInPlaceCopyStaticLess(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QMetaType::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QMetaType.data,
      qt_meta_data_tst_QMetaType,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QMetaType::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QMetaType::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QMetaType.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QMetaType::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 24)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 24;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 24)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 24;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
