/****************************************************************************
** Meta object code from reading C++ file 'tst_qnetworkreply.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qnetworkreply.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_TimedSender_t {
    QByteArrayData data[3];
    char stringdata0[23];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TimedSender_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TimedSender_t qt_meta_stringdata_TimedSender = {
    {
QT_MOC_LITERAL(0, 0, 11), // "TimedSender"
QT_MOC_LITERAL(1, 12, 9), // "writeMore"
QT_MOC_LITERAL(2, 22, 0) // ""

    },
    "TimedSender\0writeMore\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TimedSender[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void TimedSender::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TimedSender *_t = static_cast<TimedSender *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->writeMore(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject TimedSender::staticMetaObject = {
    { &QThread::staticMetaObject, qt_meta_stringdata_TimedSender.data,
      qt_meta_data_TimedSender,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TimedSender::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TimedSender::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TimedSender.stringdata0))
        return static_cast<void*>(this);
    return QThread::qt_metacast(_clname);
}

int TimedSender::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QThread::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_DataReader_t {
    QByteArrayData data[3];
    char stringdata0[19];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_DataReader_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_DataReader_t qt_meta_stringdata_DataReader = {
    {
QT_MOC_LITERAL(0, 0, 10), // "DataReader"
QT_MOC_LITERAL(1, 11, 6), // "doRead"
QT_MOC_LITERAL(2, 18, 0) // ""

    },
    "DataReader\0doRead\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_DataReader[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void DataReader::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        DataReader *_t = static_cast<DataReader *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->doRead(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject DataReader::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_DataReader.data,
      qt_meta_data_DataReader,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *DataReader::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *DataReader::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_DataReader.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int DataReader::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_ThreadedDataReader_t {
    QByteArrayData data[1];
    char stringdata0[19];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ThreadedDataReader_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ThreadedDataReader_t qt_meta_stringdata_ThreadedDataReader = {
    {
QT_MOC_LITERAL(0, 0, 18) // "ThreadedDataReader"

    },
    "ThreadedDataReader"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ThreadedDataReader[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void ThreadedDataReader::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject ThreadedDataReader::staticMetaObject = {
    { &QThread::staticMetaObject, qt_meta_stringdata_ThreadedDataReader.data,
      qt_meta_data_ThreadedDataReader,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *ThreadedDataReader::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ThreadedDataReader::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ThreadedDataReader.stringdata0))
        return static_cast<void*>(this);
    return QThread::qt_metacast(_clname);
}

int ThreadedDataReader::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QThread::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_DataGenerator_t {
    QByteArrayData data[4];
    char stringdata0[26];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_DataGenerator_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_DataGenerator_t qt_meta_stringdata_DataGenerator = {
    {
QT_MOC_LITERAL(0, 0, 13), // "DataGenerator"
QT_MOC_LITERAL(1, 14, 5), // "start"
QT_MOC_LITERAL(2, 20, 0), // ""
QT_MOC_LITERAL(3, 21, 4) // "stop"

    },
    "DataGenerator\0start\0\0stop"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_DataGenerator[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   24,    2, 0x0a /* Public */,
       3,    0,   25,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void DataGenerator::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        DataGenerator *_t = static_cast<DataGenerator *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->start(); break;
        case 1: _t->stop(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject DataGenerator::staticMetaObject = {
    { &QIODevice::staticMetaObject, qt_meta_stringdata_DataGenerator.data,
      qt_meta_data_DataGenerator,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *DataGenerator::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *DataGenerator::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_DataGenerator.stringdata0))
        return static_cast<void*>(this);
    return QIODevice::qt_metacast(_clname);
}

int DataGenerator::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QIODevice::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 2;
    }
    return _id;
}
struct qt_meta_stringdata_ThreadedDataReaderHttpServer_t {
    QByteArrayData data[1];
    char stringdata0[29];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ThreadedDataReaderHttpServer_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ThreadedDataReaderHttpServer_t qt_meta_stringdata_ThreadedDataReaderHttpServer = {
    {
QT_MOC_LITERAL(0, 0, 28) // "ThreadedDataReaderHttpServer"

    },
    "ThreadedDataReaderHttpServer"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ThreadedDataReaderHttpServer[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void ThreadedDataReaderHttpServer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject ThreadedDataReaderHttpServer::staticMetaObject = {
    { &QThread::staticMetaObject, qt_meta_stringdata_ThreadedDataReaderHttpServer.data,
      qt_meta_data_ThreadedDataReaderHttpServer,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *ThreadedDataReaderHttpServer::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ThreadedDataReaderHttpServer::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ThreadedDataReaderHttpServer.stringdata0))
        return static_cast<void*>(this);
    return QThread::qt_metacast(_clname);
}

int ThreadedDataReaderHttpServer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QThread::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_FixedSizeDataGenerator_t {
    QByteArrayData data[3];
    char stringdata0[30];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_FixedSizeDataGenerator_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_FixedSizeDataGenerator_t qt_meta_stringdata_FixedSizeDataGenerator = {
    {
QT_MOC_LITERAL(0, 0, 22), // "FixedSizeDataGenerator"
QT_MOC_LITERAL(1, 23, 5), // "start"
QT_MOC_LITERAL(2, 29, 0) // ""

    },
    "FixedSizeDataGenerator\0start\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_FixedSizeDataGenerator[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void FixedSizeDataGenerator::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        FixedSizeDataGenerator *_t = static_cast<FixedSizeDataGenerator *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->start(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject FixedSizeDataGenerator::staticMetaObject = {
    { &QIODevice::staticMetaObject, qt_meta_stringdata_FixedSizeDataGenerator.data,
      qt_meta_data_FixedSizeDataGenerator,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *FixedSizeDataGenerator::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *FixedSizeDataGenerator::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_FixedSizeDataGenerator.stringdata0))
        return static_cast<void*>(this);
    return QIODevice::qt_metacast(_clname);
}

int FixedSizeDataGenerator::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QIODevice::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_HttpDownloadPerformanceServer_t {
    QByteArrayData data[6];
    char stringdata0[87];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_HttpDownloadPerformanceServer_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_HttpDownloadPerformanceServer_t qt_meta_stringdata_HttpDownloadPerformanceServer = {
    {
QT_MOC_LITERAL(0, 0, 29), // "HttpDownloadPerformanceServer"
QT_MOC_LITERAL(1, 30, 17), // "newConnectionSlot"
QT_MOC_LITERAL(2, 48, 0), // ""
QT_MOC_LITERAL(3, 49, 13), // "readyReadSlot"
QT_MOC_LITERAL(4, 63, 16), // "bytesWrittenSlot"
QT_MOC_LITERAL(5, 80, 6) // "amount"

    },
    "HttpDownloadPerformanceServer\0"
    "newConnectionSlot\0\0readyReadSlot\0"
    "bytesWrittenSlot\0amount"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_HttpDownloadPerformanceServer[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       3,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   29,    2, 0x0a /* Public */,
       3,    0,   30,    2, 0x0a /* Public */,
       4,    1,   31,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::LongLong,    5,

       0        // eod
};

void HttpDownloadPerformanceServer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        HttpDownloadPerformanceServer *_t = static_cast<HttpDownloadPerformanceServer *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->newConnectionSlot(); break;
        case 1: _t->readyReadSlot(); break;
        case 2: _t->bytesWrittenSlot((*reinterpret_cast< qint64(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObject HttpDownloadPerformanceServer::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_HttpDownloadPerformanceServer.data,
      qt_meta_data_HttpDownloadPerformanceServer,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *HttpDownloadPerformanceServer::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *HttpDownloadPerformanceServer::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_HttpDownloadPerformanceServer.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int HttpDownloadPerformanceServer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 3)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 3;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 3)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 3;
    }
    return _id;
}
struct qt_meta_stringdata_HttpDownloadPerformanceClient_t {
    QByteArrayData data[3];
    char stringdata0[45];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_HttpDownloadPerformanceClient_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_HttpDownloadPerformanceClient_t qt_meta_stringdata_HttpDownloadPerformanceClient = {
    {
QT_MOC_LITERAL(0, 0, 29), // "HttpDownloadPerformanceClient"
QT_MOC_LITERAL(1, 30, 13), // "readyReadSlot"
QT_MOC_LITERAL(2, 44, 0) // ""

    },
    "HttpDownloadPerformanceClient\0"
    "readyReadSlot\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_HttpDownloadPerformanceClient[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void HttpDownloadPerformanceClient::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        HttpDownloadPerformanceClient *_t = static_cast<HttpDownloadPerformanceClient *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->readyReadSlot(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject HttpDownloadPerformanceClient::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_HttpDownloadPerformanceClient.data,
      qt_meta_data_HttpDownloadPerformanceClient,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *HttpDownloadPerformanceClient::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *HttpDownloadPerformanceClient::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_HttpDownloadPerformanceClient.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int HttpDownloadPerformanceClient::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_tst_qnetworkreply_t {
    QByteArrayData data[17];
    char stringdata0[343];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_qnetworkreply_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_qnetworkreply_t qt_meta_stringdata_tst_qnetworkreply = {
    {
QT_MOC_LITERAL(0, 0, 17), // "tst_qnetworkreply"
QT_MOC_LITERAL(1, 18, 12), // "initTestCase"
QT_MOC_LITERAL(2, 31, 0), // ""
QT_MOC_LITERAL(3, 32, 11), // "httpLatency"
QT_MOC_LITERAL(4, 44, 24), // "preConnectEncrypted_data"
QT_MOC_LITERAL(5, 69, 19), // "downloadPerformance"
QT_MOC_LITERAL(6, 89, 17), // "uploadPerformance"
QT_MOC_LITERAL(7, 107, 22), // "performanceControlRate"
QT_MOC_LITERAL(8, 130, 21), // "httpUploadPerformance"
QT_MOC_LITERAL(9, 152, 28), // "httpDownloadPerformance_data"
QT_MOC_LITERAL(10, 181, 23), // "httpDownloadPerformance"
QT_MOC_LITERAL(11, 205, 42), // "httpDownloadPerformanceDownlo..."
QT_MOC_LITERAL(12, 248, 37), // "httpDownloadPerformanceDownlo..."
QT_MOC_LITERAL(13, 286, 17), // "httpsRequestChain"
QT_MOC_LITERAL(14, 304, 11), // "httpsUpload"
QT_MOC_LITERAL(15, 316, 15), // "preConnect_data"
QT_MOC_LITERAL(16, 332, 10) // "preConnect"

    },
    "tst_qnetworkreply\0initTestCase\0\0"
    "httpLatency\0preConnectEncrypted_data\0"
    "downloadPerformance\0uploadPerformance\0"
    "performanceControlRate\0httpUploadPerformance\0"
    "httpDownloadPerformance_data\0"
    "httpDownloadPerformance\0"
    "httpDownloadPerformanceDownloadBuffer_data\0"
    "httpDownloadPerformanceDownloadBuffer\0"
    "httpsRequestChain\0httpsUpload\0"
    "preConnect_data\0preConnect"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_qnetworkreply[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      15,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   89,    2, 0x08 /* Private */,
       3,    0,   90,    2, 0x08 /* Private */,
       4,    0,   91,    2, 0x08 /* Private */,
       5,    0,   92,    2, 0x08 /* Private */,
       6,    0,   93,    2, 0x08 /* Private */,
       7,    0,   94,    2, 0x08 /* Private */,
       8,    0,   95,    2, 0x08 /* Private */,
       9,    0,   96,    2, 0x08 /* Private */,
      10,    0,   97,    2, 0x08 /* Private */,
      11,    0,   98,    2, 0x08 /* Private */,
      12,    0,   99,    2, 0x08 /* Private */,
      13,    0,  100,    2, 0x08 /* Private */,
      14,    0,  101,    2, 0x08 /* Private */,
      15,    0,  102,    2, 0x08 /* Private */,
      16,    0,  103,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_qnetworkreply::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_qnetworkreply *_t = static_cast<tst_qnetworkreply *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->httpLatency(); break;
        case 2: _t->preConnectEncrypted_data(); break;
        case 3: _t->downloadPerformance(); break;
        case 4: _t->uploadPerformance(); break;
        case 5: _t->performanceControlRate(); break;
        case 6: _t->httpUploadPerformance(); break;
        case 7: _t->httpDownloadPerformance_data(); break;
        case 8: _t->httpDownloadPerformance(); break;
        case 9: _t->httpDownloadPerformanceDownloadBuffer_data(); break;
        case 10: _t->httpDownloadPerformanceDownloadBuffer(); break;
        case 11: _t->httpsRequestChain(); break;
        case 12: _t->httpsUpload(); break;
        case 13: _t->preConnect_data(); break;
        case 14: _t->preConnect(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_qnetworkreply::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_qnetworkreply.data,
      qt_meta_data_tst_qnetworkreply,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_qnetworkreply::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_qnetworkreply::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_qnetworkreply.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_qnetworkreply::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 15)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 15;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 15)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 15;
    }
    return _id;
}
struct qt_meta_stringdata_HttpDownloadPerformanceClientDownloadBuffer_t {
    QByteArrayData data[3];
    char stringdata0[58];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_HttpDownloadPerformanceClientDownloadBuffer_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_HttpDownloadPerformanceClientDownloadBuffer_t qt_meta_stringdata_HttpDownloadPerformanceClientDownloadBuffer = {
    {
QT_MOC_LITERAL(0, 0, 43), // "HttpDownloadPerformanceClient..."
QT_MOC_LITERAL(1, 44, 12), // "finishedSlot"
QT_MOC_LITERAL(2, 57, 0) // ""

    },
    "HttpDownloadPerformanceClientDownloadBuffer\0"
    "finishedSlot\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_HttpDownloadPerformanceClientDownloadBuffer[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void HttpDownloadPerformanceClientDownloadBuffer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        HttpDownloadPerformanceClientDownloadBuffer *_t = static_cast<HttpDownloadPerformanceClientDownloadBuffer *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->finishedSlot(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject HttpDownloadPerformanceClientDownloadBuffer::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_HttpDownloadPerformanceClientDownloadBuffer.data,
      qt_meta_data_HttpDownloadPerformanceClientDownloadBuffer,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *HttpDownloadPerformanceClientDownloadBuffer::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *HttpDownloadPerformanceClientDownloadBuffer::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_HttpDownloadPerformanceClientDownloadBuffer.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int HttpDownloadPerformanceClientDownloadBuffer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_HttpsRequestChainHelper_t {
    QByteArrayData data[3];
    char stringdata0[39];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_HttpsRequestChainHelper_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_HttpsRequestChainHelper_t qt_meta_stringdata_HttpsRequestChainHelper = {
    {
QT_MOC_LITERAL(0, 0, 23), // "HttpsRequestChainHelper"
QT_MOC_LITERAL(1, 24, 13), // "doNextRequest"
QT_MOC_LITERAL(2, 38, 0) // ""

    },
    "HttpsRequestChainHelper\0doNextRequest\0"
    ""
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_HttpsRequestChainHelper[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void HttpsRequestChainHelper::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        HttpsRequestChainHelper *_t = static_cast<HttpsRequestChainHelper *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->doNextRequest(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject HttpsRequestChainHelper::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_HttpsRequestChainHelper.data,
      qt_meta_data_HttpsRequestChainHelper,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *HttpsRequestChainHelper::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *HttpsRequestChainHelper::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_HttpsRequestChainHelper.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int HttpsRequestChainHelper::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
