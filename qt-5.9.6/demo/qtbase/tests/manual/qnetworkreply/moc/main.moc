/****************************************************************************
** Meta object code from reading C++ file 'main.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'main.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_qnetworkreply_t {
    QByteArrayData data[20];
    char stringdata0[327];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_qnetworkreply_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_qnetworkreply_t qt_meta_stringdata_tst_qnetworkreply = {
    {
QT_MOC_LITERAL(0, 0, 17), // "tst_qnetworkreply"
QT_MOC_LITERAL(1, 18, 12), // "initTestCase"
QT_MOC_LITERAL(2, 31, 0), // ""
QT_MOC_LITERAL(3, 32, 13), // "limiting_data"
QT_MOC_LITERAL(4, 46, 8), // "limiting"
QT_MOC_LITERAL(5, 55, 24), // "setSslConfiguration_data"
QT_MOC_LITERAL(6, 80, 19), // "setSslConfiguration"
QT_MOC_LITERAL(7, 100, 16), // "uploadToFacebook"
QT_MOC_LITERAL(8, 117, 9), // "spdy_data"
QT_MOC_LITERAL(9, 127, 4), // "spdy"
QT_MOC_LITERAL(10, 132, 27), // "spdyMultipleRequestsPerHost"
QT_MOC_LITERAL(11, 160, 24), // "proxyAuthentication_data"
QT_MOC_LITERAL(12, 185, 19), // "proxyAuthentication"
QT_MOC_LITERAL(13, 205, 14), // "authentication"
QT_MOC_LITERAL(14, 220, 16), // "npnWithEmptyList"
QT_MOC_LITERAL(15, 237, 17), // "spdyReplyFinished"
QT_MOC_LITERAL(16, 255, 26), // "authenticationRequiredSlot"
QT_MOC_LITERAL(17, 282, 14), // "QNetworkReply*"
QT_MOC_LITERAL(18, 297, 15), // "QAuthenticator*"
QT_MOC_LITERAL(19, 313, 13) // "authenticator"

    },
    "tst_qnetworkreply\0initTestCase\0\0"
    "limiting_data\0limiting\0setSslConfiguration_data\0"
    "setSslConfiguration\0uploadToFacebook\0"
    "spdy_data\0spdy\0spdyMultipleRequestsPerHost\0"
    "proxyAuthentication_data\0proxyAuthentication\0"
    "authentication\0npnWithEmptyList\0"
    "spdyReplyFinished\0authenticationRequiredSlot\0"
    "QNetworkReply*\0QAuthenticator*\0"
    "authenticator"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_qnetworkreply[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      15,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   89,    2, 0x08 /* Private */,
       3,    0,   90,    2, 0x08 /* Private */,
       4,    0,   91,    2, 0x08 /* Private */,
       5,    0,   92,    2, 0x08 /* Private */,
       6,    0,   93,    2, 0x08 /* Private */,
       7,    0,   94,    2, 0x08 /* Private */,
       8,    0,   95,    2, 0x08 /* Private */,
       9,    0,   96,    2, 0x08 /* Private */,
      10,    0,   97,    2, 0x08 /* Private */,
      11,    0,   98,    2, 0x08 /* Private */,
      12,    0,   99,    2, 0x08 /* Private */,
      13,    0,  100,    2, 0x08 /* Private */,
      14,    0,  101,    2, 0x08 /* Private */,
      15,    0,  102,    2, 0x09 /* Protected */,
      16,    2,  103,    2, 0x09 /* Protected */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 17, 0x80000000 | 18,    2,   19,

       0        // eod
};

void tst_qnetworkreply::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_qnetworkreply *_t = static_cast<tst_qnetworkreply *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->limiting_data(); break;
        case 2: _t->limiting(); break;
        case 3: _t->setSslConfiguration_data(); break;
        case 4: _t->setSslConfiguration(); break;
        case 5: _t->uploadToFacebook(); break;
        case 6: _t->spdy_data(); break;
        case 7: _t->spdy(); break;
        case 8: _t->spdyMultipleRequestsPerHost(); break;
        case 9: _t->proxyAuthentication_data(); break;
        case 10: _t->proxyAuthentication(); break;
        case 11: _t->authentication(); break;
        case 12: _t->npnWithEmptyList(); break;
        case 13: _t->spdyReplyFinished(); break;
        case 14: _t->authenticationRequiredSlot((*reinterpret_cast< QNetworkReply*(*)>(_a[1])),(*reinterpret_cast< QAuthenticator*(*)>(_a[2]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 14:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 0:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QNetworkReply* >(); break;
            }
            break;
        }
    }
}

const QMetaObject tst_qnetworkreply::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_qnetworkreply.data,
      qt_meta_data_tst_qnetworkreply,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_qnetworkreply::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_qnetworkreply::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_qnetworkreply.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_qnetworkreply::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 15)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 15;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 15)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 15;
    }
    return _id;
}
struct qt_meta_stringdata_HttpReceiver_t {
    QByteArrayData data[6];
    char stringdata0[64];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_HttpReceiver_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_HttpReceiver_t qt_meta_stringdata_HttpReceiver = {
    {
QT_MOC_LITERAL(0, 0, 12), // "HttpReceiver"
QT_MOC_LITERAL(1, 13, 12), // "finishedSlot"
QT_MOC_LITERAL(2, 26, 0), // ""
QT_MOC_LITERAL(3, 27, 13), // "readyReadSlot"
QT_MOC_LITERAL(4, 41, 11), // "timeoutSlot"
QT_MOC_LITERAL(5, 53, 10) // "startTimer"

    },
    "HttpReceiver\0finishedSlot\0\0readyReadSlot\0"
    "timeoutSlot\0startTimer"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_HttpReceiver[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       4,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   34,    2, 0x0a /* Public */,
       3,    0,   35,    2, 0x0a /* Public */,
       4,    0,   36,    2, 0x0a /* Public */,
       5,    0,   37,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void HttpReceiver::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        HttpReceiver *_t = static_cast<HttpReceiver *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->finishedSlot(); break;
        case 1: _t->readyReadSlot(); break;
        case 2: _t->timeoutSlot(); break;
        case 3: _t->startTimer(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject HttpReceiver::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_HttpReceiver.data,
      qt_meta_data_HttpReceiver,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *HttpReceiver::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *HttpReceiver::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_HttpReceiver.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int HttpReceiver::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 4)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 4;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 4)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 4;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
