/****************************************************************************
** Meta object code from reading C++ file 'tst_qchangearbiter.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qchangearbiter.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QChangeArbiter_t {
    QByteArrayData data[9];
    char stringdata0[182];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QChangeArbiter_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QChangeArbiter_t qt_meta_stringdata_tst_QChangeArbiter = {
    {
QT_MOC_LITERAL(0, 0, 18), // "tst_QChangeArbiter"
QT_MOC_LITERAL(1, 19, 17), // "registerObservers"
QT_MOC_LITERAL(2, 37, 0), // ""
QT_MOC_LITERAL(3, 38, 21), // "registerSceneObserver"
QT_MOC_LITERAL(4, 60, 19), // "unregisterObservers"
QT_MOC_LITERAL(5, 80, 24), // "unregisterSceneObservers"
QT_MOC_LITERAL(6, 105, 25), // "distributeFrontendChanges"
QT_MOC_LITERAL(7, 131, 25), // "distributePropertyChanges"
QT_MOC_LITERAL(8, 157, 24) // "distributeBackendChanges"

    },
    "tst_QChangeArbiter\0registerObservers\0"
    "\0registerSceneObserver\0unregisterObservers\0"
    "unregisterSceneObservers\0"
    "distributeFrontendChanges\0"
    "distributePropertyChanges\0"
    "distributeBackendChanges"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QChangeArbiter[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       7,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   49,    2, 0x08 /* Private */,
       3,    0,   50,    2, 0x08 /* Private */,
       4,    0,   51,    2, 0x08 /* Private */,
       5,    0,   52,    2, 0x08 /* Private */,
       6,    0,   53,    2, 0x08 /* Private */,
       7,    0,   54,    2, 0x08 /* Private */,
       8,    0,   55,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QChangeArbiter::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QChangeArbiter *_t = static_cast<tst_QChangeArbiter *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->registerObservers(); break;
        case 1: _t->registerSceneObserver(); break;
        case 2: _t->unregisterObservers(); break;
        case 3: _t->unregisterSceneObservers(); break;
        case 4: _t->distributeFrontendChanges(); break;
        case 5: _t->distributePropertyChanges(); break;
        case 6: _t->distributeBackendChanges(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QChangeArbiter::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QChangeArbiter.data,
      qt_meta_data_tst_QChangeArbiter,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QChangeArbiter::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QChangeArbiter::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QChangeArbiter.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QChangeArbiter::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 7)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 7;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 7)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 7;
    }
    return _id;
}
struct qt_meta_stringdata_PropertyTestNode_t {
    QByteArrayData data[7];
    char stringdata0[58];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_PropertyTestNode_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_PropertyTestNode_t qt_meta_stringdata_PropertyTestNode = {
    {
QT_MOC_LITERAL(0, 0, 16), // "PropertyTestNode"
QT_MOC_LITERAL(1, 17, 12), // "prop1Changed"
QT_MOC_LITERAL(2, 30, 0), // ""
QT_MOC_LITERAL(3, 31, 1), // "v"
QT_MOC_LITERAL(4, 33, 12), // "prop2Changed"
QT_MOC_LITERAL(5, 46, 5), // "prop1"
QT_MOC_LITERAL(6, 52, 5) // "prop2"

    },
    "PropertyTestNode\0prop1Changed\0\0v\0"
    "prop2Changed\0prop1\0prop2"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_PropertyTestNode[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       2,   30, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   24,    2, 0x06 /* Public */,
       4,    1,   27,    2, 0x06 /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::Int,    3,
    QMetaType::Void, QMetaType::Float,    3,

 // properties: name, type, flags
       5, QMetaType::Int, 0x00495103,
       6, QMetaType::Float, 0x00495103,

 // properties: notify_signal_id
       0,
       1,

       0        // eod
};

void PropertyTestNode::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        PropertyTestNode *_t = static_cast<PropertyTestNode *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->prop1Changed((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 1: _t->prop2Changed((*reinterpret_cast< float(*)>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        {
            typedef void (PropertyTestNode::*_t)(int );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PropertyTestNode::prop1Changed)) {
                *result = 0;
                return;
            }
        }
        {
            typedef void (PropertyTestNode::*_t)(float );
            if (*reinterpret_cast<_t *>(_a[1]) == static_cast<_t>(&PropertyTestNode::prop2Changed)) {
                *result = 1;
                return;
            }
        }
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        PropertyTestNode *_t = static_cast<PropertyTestNode *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< int*>(_v) = _t->prop1(); break;
        case 1: *reinterpret_cast< float*>(_v) = _t->prop2(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
        PropertyTestNode *_t = static_cast<PropertyTestNode *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: _t->setProp1(*reinterpret_cast< int*>(_v)); break;
        case 1: _t->setProp2(*reinterpret_cast< float*>(_v)); break;
        default: break;
        }
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
}

const QMetaObject PropertyTestNode::staticMetaObject = {
    { &Qt3DCore::QNode::staticMetaObject, qt_meta_stringdata_PropertyTestNode.data,
      qt_meta_data_PropertyTestNode,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *PropertyTestNode::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *PropertyTestNode::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_PropertyTestNode.stringdata0))
        return static_cast<void*>(this);
    return Qt3DCore::QNode::qt_metacast(_clname);
}

int PropertyTestNode::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = Qt3DCore::QNode::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 2)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 2;
    }
#ifndef QT_NO_PROPERTIES
   else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 2;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}

// SIGNAL 0
void PropertyTestNode::prop1Changed(int _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void PropertyTestNode::prop2Changed(float _t1)
{
    void *_a[] = { nullptr, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}
struct qt_meta_stringdata_ThreadedAnswer_t {
    QByteArrayData data[1];
    char stringdata0[15];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_ThreadedAnswer_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_ThreadedAnswer_t qt_meta_stringdata_ThreadedAnswer = {
    {
QT_MOC_LITERAL(0, 0, 14) // "ThreadedAnswer"

    },
    "ThreadedAnswer"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_ThreadedAnswer[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void ThreadedAnswer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject ThreadedAnswer::staticMetaObject = {
    { &QThread::staticMetaObject, qt_meta_stringdata_ThreadedAnswer.data,
      qt_meta_data_ThreadedAnswer,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *ThreadedAnswer::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *ThreadedAnswer::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_ThreadedAnswer.stringdata0))
        return static_cast<void*>(this);
    return QThread::qt_metacast(_clname);
}

int ThreadedAnswer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QThread::qt_metacall(_c, _id, _a);
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
