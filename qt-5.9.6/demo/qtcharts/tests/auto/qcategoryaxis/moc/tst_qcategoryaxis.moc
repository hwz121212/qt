/****************************************************************************
** Meta object code from reading C++ file 'tst_qcategoryaxis.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qcategoryaxis.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QCategoryAxis_t {
    QByteArrayData data[30];
    char stringdata0[354];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QCategoryAxis_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QCategoryAxis_t qt_meta_stringdata_tst_QCategoryAxis = {
    {
QT_MOC_LITERAL(0, 0, 17), // "tst_QCategoryAxis"
QT_MOC_LITERAL(1, 18, 12), // "initTestCase"
QT_MOC_LITERAL(2, 31, 0), // ""
QT_MOC_LITERAL(3, 32, 15), // "cleanupTestCase"
QT_MOC_LITERAL(4, 48, 4), // "init"
QT_MOC_LITERAL(5, 53, 7), // "cleanup"
QT_MOC_LITERAL(6, 61, 18), // "qcategoryaxis_data"
QT_MOC_LITERAL(7, 80, 13), // "qcategoryaxis"
QT_MOC_LITERAL(8, 94, 12), // "max_raw_data"
QT_MOC_LITERAL(9, 107, 7), // "max_raw"
QT_MOC_LITERAL(10, 115, 8), // "max_data"
QT_MOC_LITERAL(11, 124, 3), // "max"
QT_MOC_LITERAL(12, 128, 18), // "max_animation_data"
QT_MOC_LITERAL(13, 147, 13), // "max_animation"
QT_MOC_LITERAL(14, 161, 12), // "min_raw_data"
QT_MOC_LITERAL(15, 174, 7), // "min_raw"
QT_MOC_LITERAL(16, 182, 8), // "min_data"
QT_MOC_LITERAL(17, 191, 3), // "min"
QT_MOC_LITERAL(18, 195, 18), // "min_animation_data"
QT_MOC_LITERAL(19, 214, 13), // "min_animation"
QT_MOC_LITERAL(20, 228, 14), // "range_raw_data"
QT_MOC_LITERAL(21, 243, 9), // "range_raw"
QT_MOC_LITERAL(22, 253, 10), // "range_data"
QT_MOC_LITERAL(23, 264, 5), // "range"
QT_MOC_LITERAL(24, 270, 20), // "range_animation_data"
QT_MOC_LITERAL(25, 291, 15), // "range_animation"
QT_MOC_LITERAL(26, 307, 15), // "labels_position"
QT_MOC_LITERAL(27, 323, 13), // "interval_data"
QT_MOC_LITERAL(28, 337, 8), // "interval"
QT_MOC_LITERAL(29, 346, 7) // "reverse"

    },
    "tst_QCategoryAxis\0initTestCase\0\0"
    "cleanupTestCase\0init\0cleanup\0"
    "qcategoryaxis_data\0qcategoryaxis\0"
    "max_raw_data\0max_raw\0max_data\0max\0"
    "max_animation_data\0max_animation\0"
    "min_raw_data\0min_raw\0min_data\0min\0"
    "min_animation_data\0min_animation\0"
    "range_raw_data\0range_raw\0range_data\0"
    "range\0range_animation_data\0range_animation\0"
    "labels_position\0interval_data\0interval\0"
    "reverse"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QCategoryAxis[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      28,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  154,    2, 0x0a /* Public */,
       3,    0,  155,    2, 0x0a /* Public */,
       4,    0,  156,    2, 0x0a /* Public */,
       5,    0,  157,    2, 0x0a /* Public */,
       6,    0,  158,    2, 0x08 /* Private */,
       7,    0,  159,    2, 0x08 /* Private */,
       8,    0,  160,    2, 0x08 /* Private */,
       9,    0,  161,    2, 0x08 /* Private */,
      10,    0,  162,    2, 0x08 /* Private */,
      11,    0,  163,    2, 0x08 /* Private */,
      12,    0,  164,    2, 0x08 /* Private */,
      13,    0,  165,    2, 0x08 /* Private */,
      14,    0,  166,    2, 0x08 /* Private */,
      15,    0,  167,    2, 0x08 /* Private */,
      16,    0,  168,    2, 0x08 /* Private */,
      17,    0,  169,    2, 0x08 /* Private */,
      18,    0,  170,    2, 0x08 /* Private */,
      19,    0,  171,    2, 0x08 /* Private */,
      20,    0,  172,    2, 0x08 /* Private */,
      21,    0,  173,    2, 0x08 /* Private */,
      22,    0,  174,    2, 0x08 /* Private */,
      23,    0,  175,    2, 0x08 /* Private */,
      24,    0,  176,    2, 0x08 /* Private */,
      25,    0,  177,    2, 0x08 /* Private */,
      26,    0,  178,    2, 0x08 /* Private */,
      27,    0,  179,    2, 0x08 /* Private */,
      28,    0,  180,    2, 0x08 /* Private */,
      29,    0,  181,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QCategoryAxis::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QCategoryAxis *_t = static_cast<tst_QCategoryAxis *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->cleanupTestCase(); break;
        case 2: _t->init(); break;
        case 3: _t->cleanup(); break;
        case 4: _t->qcategoryaxis_data(); break;
        case 5: _t->qcategoryaxis(); break;
        case 6: _t->max_raw_data(); break;
        case 7: _t->max_raw(); break;
        case 8: _t->max_data(); break;
        case 9: _t->max(); break;
        case 10: _t->max_animation_data(); break;
        case 11: _t->max_animation(); break;
        case 12: _t->min_raw_data(); break;
        case 13: _t->min_raw(); break;
        case 14: _t->min_data(); break;
        case 15: _t->min(); break;
        case 16: _t->min_animation_data(); break;
        case 17: _t->min_animation(); break;
        case 18: _t->range_raw_data(); break;
        case 19: _t->range_raw(); break;
        case 20: _t->range_data(); break;
        case 21: _t->range(); break;
        case 22: _t->range_animation_data(); break;
        case 23: _t->range_animation(); break;
        case 24: _t->labels_position(); break;
        case 25: _t->interval_data(); break;
        case 26: _t->interval(); break;
        case 27: _t->reverse(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QCategoryAxis::staticMetaObject = {
    { &tst_QAbstractAxis::staticMetaObject, qt_meta_stringdata_tst_QCategoryAxis.data,
      qt_meta_data_tst_QCategoryAxis,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QCategoryAxis::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QCategoryAxis::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QCategoryAxis.stringdata0))
        return static_cast<void*>(this);
    return tst_QAbstractAxis::qt_metacast(_clname);
}

int tst_QCategoryAxis::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = tst_QAbstractAxis::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 28)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 28;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 28)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 28;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
