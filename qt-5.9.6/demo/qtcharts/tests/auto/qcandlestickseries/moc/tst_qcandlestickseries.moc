/****************************************************************************
** Meta object code from reading C++ file 'tst_qcandlestickseries.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.6)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qcandlestickseries.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_tst_QCandlestickSeries_t {
    QByteArrayData data[36];
    char stringdata0[436];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_tst_QCandlestickSeries_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_tst_QCandlestickSeries_t qt_meta_stringdata_tst_QCandlestickSeries = {
    {
QT_MOC_LITERAL(0, 0, 22), // "tst_QCandlestickSeries"
QT_MOC_LITERAL(1, 23, 12), // "initTestCase"
QT_MOC_LITERAL(2, 36, 0), // ""
QT_MOC_LITERAL(3, 37, 15), // "cleanupTestCase"
QT_MOC_LITERAL(4, 53, 4), // "init"
QT_MOC_LITERAL(5, 58, 7), // "cleanup"
QT_MOC_LITERAL(6, 66, 18), // "qCandlestickSeries"
QT_MOC_LITERAL(7, 85, 6), // "append"
QT_MOC_LITERAL(8, 92, 6), // "remove"
QT_MOC_LITERAL(9, 99, 10), // "appendList"
QT_MOC_LITERAL(10, 110, 10), // "removeList"
QT_MOC_LITERAL(11, 121, 6), // "insert"
QT_MOC_LITERAL(12, 128, 4), // "take"
QT_MOC_LITERAL(13, 133, 5), // "clear"
QT_MOC_LITERAL(14, 139, 4), // "sets"
QT_MOC_LITERAL(15, 144, 5), // "count"
QT_MOC_LITERAL(16, 150, 4), // "type"
QT_MOC_LITERAL(17, 155, 23), // "maximumColumnWidth_data"
QT_MOC_LITERAL(18, 179, 18), // "maximumColumnWidth"
QT_MOC_LITERAL(19, 198, 23), // "minimumColumnWidth_data"
QT_MOC_LITERAL(20, 222, 18), // "minimumColumnWidth"
QT_MOC_LITERAL(21, 241, 14), // "bodyWidth_data"
QT_MOC_LITERAL(22, 256, 9), // "bodyWidth"
QT_MOC_LITERAL(23, 266, 18), // "bodyOutlineVisible"
QT_MOC_LITERAL(24, 285, 14), // "capsWidth_data"
QT_MOC_LITERAL(25, 300, 9), // "capsWidth"
QT_MOC_LITERAL(26, 310, 11), // "capsVisible"
QT_MOC_LITERAL(27, 322, 15), // "increasingColor"
QT_MOC_LITERAL(28, 338, 15), // "decreasingColor"
QT_MOC_LITERAL(29, 354, 5), // "brush"
QT_MOC_LITERAL(30, 360, 3), // "pen"
QT_MOC_LITERAL(31, 364, 12), // "mouseClicked"
QT_MOC_LITERAL(32, 377, 12), // "mouseHovered"
QT_MOC_LITERAL(33, 390, 12), // "mousePressed"
QT_MOC_LITERAL(34, 403, 13), // "mouseReleased"
QT_MOC_LITERAL(35, 417, 18) // "mouseDoubleClicked"

    },
    "tst_QCandlestickSeries\0initTestCase\0"
    "\0cleanupTestCase\0init\0cleanup\0"
    "qCandlestickSeries\0append\0remove\0"
    "appendList\0removeList\0insert\0take\0"
    "clear\0sets\0count\0type\0maximumColumnWidth_data\0"
    "maximumColumnWidth\0minimumColumnWidth_data\0"
    "minimumColumnWidth\0bodyWidth_data\0"
    "bodyWidth\0bodyOutlineVisible\0"
    "capsWidth_data\0capsWidth\0capsVisible\0"
    "increasingColor\0decreasingColor\0brush\0"
    "pen\0mouseClicked\0mouseHovered\0"
    "mousePressed\0mouseReleased\0"
    "mouseDoubleClicked"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_tst_QCandlestickSeries[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      34,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  184,    2, 0x0a /* Public */,
       3,    0,  185,    2, 0x0a /* Public */,
       4,    0,  186,    2, 0x0a /* Public */,
       5,    0,  187,    2, 0x0a /* Public */,
       6,    0,  188,    2, 0x08 /* Private */,
       7,    0,  189,    2, 0x08 /* Private */,
       8,    0,  190,    2, 0x08 /* Private */,
       9,    0,  191,    2, 0x08 /* Private */,
      10,    0,  192,    2, 0x08 /* Private */,
      11,    0,  193,    2, 0x08 /* Private */,
      12,    0,  194,    2, 0x08 /* Private */,
      13,    0,  195,    2, 0x08 /* Private */,
      14,    0,  196,    2, 0x08 /* Private */,
      15,    0,  197,    2, 0x08 /* Private */,
      16,    0,  198,    2, 0x08 /* Private */,
      17,    0,  199,    2, 0x08 /* Private */,
      18,    0,  200,    2, 0x08 /* Private */,
      19,    0,  201,    2, 0x08 /* Private */,
      20,    0,  202,    2, 0x08 /* Private */,
      21,    0,  203,    2, 0x08 /* Private */,
      22,    0,  204,    2, 0x08 /* Private */,
      23,    0,  205,    2, 0x08 /* Private */,
      24,    0,  206,    2, 0x08 /* Private */,
      25,    0,  207,    2, 0x08 /* Private */,
      26,    0,  208,    2, 0x08 /* Private */,
      27,    0,  209,    2, 0x08 /* Private */,
      28,    0,  210,    2, 0x08 /* Private */,
      29,    0,  211,    2, 0x08 /* Private */,
      30,    0,  212,    2, 0x08 /* Private */,
      31,    0,  213,    2, 0x08 /* Private */,
      32,    0,  214,    2, 0x08 /* Private */,
      33,    0,  215,    2, 0x08 /* Private */,
      34,    0,  216,    2, 0x08 /* Private */,
      35,    0,  217,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void tst_QCandlestickSeries::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        tst_QCandlestickSeries *_t = static_cast<tst_QCandlestickSeries *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->cleanupTestCase(); break;
        case 2: _t->init(); break;
        case 3: _t->cleanup(); break;
        case 4: _t->qCandlestickSeries(); break;
        case 5: _t->append(); break;
        case 6: _t->remove(); break;
        case 7: _t->appendList(); break;
        case 8: _t->removeList(); break;
        case 9: _t->insert(); break;
        case 10: _t->take(); break;
        case 11: _t->clear(); break;
        case 12: _t->sets(); break;
        case 13: _t->count(); break;
        case 14: _t->type(); break;
        case 15: _t->maximumColumnWidth_data(); break;
        case 16: _t->maximumColumnWidth(); break;
        case 17: _t->minimumColumnWidth_data(); break;
        case 18: _t->minimumColumnWidth(); break;
        case 19: _t->bodyWidth_data(); break;
        case 20: _t->bodyWidth(); break;
        case 21: _t->bodyOutlineVisible(); break;
        case 22: _t->capsWidth_data(); break;
        case 23: _t->capsWidth(); break;
        case 24: _t->capsVisible(); break;
        case 25: _t->increasingColor(); break;
        case 26: _t->decreasingColor(); break;
        case 27: _t->brush(); break;
        case 28: _t->pen(); break;
        case 29: _t->mouseClicked(); break;
        case 30: _t->mouseHovered(); break;
        case 31: _t->mousePressed(); break;
        case 32: _t->mouseReleased(); break;
        case 33: _t->mouseDoubleClicked(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject tst_QCandlestickSeries::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_tst_QCandlestickSeries.data,
      qt_meta_data_tst_QCandlestickSeries,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *tst_QCandlestickSeries::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QCandlestickSeries::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QCandlestickSeries.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int tst_QCandlestickSeries::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 34)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 34;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 34)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 34;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
